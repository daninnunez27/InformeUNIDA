using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace InformeUNIDA.Models
{
    public partial class sofya_AcadContext : DbContext
    {
        public sofya_AcadContext()
        {
        }

        public sofya_AcadContext(DbContextOptions<sofya_AcadContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AcLgPractica> AcLgPracticas { get; set; }
        public virtual DbSet<AcreditacionArchivo> AcreditacionArchivos { get; set; }
        public virtual DbSet<Acta> Actas { get; set; }
        public virtual DbSet<ActaControl> ActaControls { get; set; }
        public virtual DbSet<ActaParaAcad> ActaParaAcads { get; set; }
        public virtual DbSet<ActasEclass> ActasEclasses { get; set; }
        public virtual DbSet<ActasExaman> ActasExamen { get; set; }
        public virtual DbSet<Actividad> Actividads { get; set; }
        public virtual DbSet<ActividadApp> ActividadApps { get; set; }
        public virtual DbSet<ActividadDato> ActividadDatos { get; set; }
        public virtual DbSet<Ad> Ads { get; set; }
        public virtual DbSet<Admision> Admisions { get; set; }
        public virtual DbSet<AdmisionCompaniaH> AdmisionCompaniaHs { get; set; }
        public virtual DbSet<AdmisionCompanium> AdmisionCompania { get; set; }
        public virtual DbSet<AdmisionDocumento> AdmisionDocumentos { get; set; }
        public virtual DbSet<AdmisionReporte> AdmisionReportes { get; set; }
        public virtual DbSet<AlertaAlumno> AlertaAlumnos { get; set; }
        public virtual DbSet<AlertaAlumnoSeguimiento> AlertaAlumnoSeguimientos { get; set; }
        public virtual DbSet<Alertum> Alerta { get; set; }
        public virtual DbSet<AlternativaBeneficio> AlternativaBeneficios { get; set; }
        public virtual DbSet<AluCurBloLog> AluCurBloLogs { get; set; }
        public virtual DbSet<Alumno> Alumnos { get; set; }
        public virtual DbSet<AlumnoActividad> AlumnoActividads { get; set; }
        public virtual DbSet<AlumnoActividadConfiguracion> AlumnoActividadConfiguracions { get; set; }
        public virtual DbSet<AlumnoActividadConfiguracionExtension> AlumnoActividadConfiguracionExtensions { get; set; }
        public virtual DbSet<AlumnoActividadH> AlumnoActividadHs { get; set; }
        public virtual DbSet<AlumnoAsisteEvaluacion> AlumnoAsisteEvaluacions { get; set; }
        public virtual DbSet<AlumnoAsisteEvaluacionH> AlumnoAsisteEvaluacionHs { get; set; }
        public virtual DbSet<AlumnoAsistenciaH> AlumnoAsistenciaHs { get; set; }
        public virtual DbSet<AlumnoAsistenciaMarzoJustificadum> AlumnoAsistenciaMarzoJustificada { get; set; }
        public virtual DbSet<AlumnoAsistencium> AlumnoAsistencia { get; set; }
        public virtual DbSet<AlumnoAutorizaIngresoMiaula> AlumnoAutorizaIngresoMiaulas { get; set; }
        public virtual DbSet<AlumnoCarreraTurnoLog> AlumnoCarreraTurnoLogs { get; set; }
        public virtual DbSet<AlumnoCaso> AlumnoCasos { get; set; }
        public virtual DbSet<AlumnoCestadoCajaOriginal> AlumnoCestadoCajaOriginals { get; set; }
        public virtual DbSet<AlumnoColaCred> AlumnoColaCreds { get; set; }
        public virtual DbSet<AlumnoCrucePermitido> AlumnoCrucePermitidos { get; set; }
        public virtual DbSet<AlumnoCurricEmp> AlumnoCurricEmps { get; set; }
        public virtual DbSet<AlumnoCurricMat> AlumnoCurricMats { get; set; }
        public virtual DbSet<AlumnoCurriculum> AlumnoCurricula { get; set; }
        public virtual DbSet<AlumnoCursoAutoriza> AlumnoCursoAutorizas { get; set; }
        public virtual DbSet<AlumnoCursoAutorizaH> AlumnoCursoAutorizaHs { get; set; }
        public virtual DbSet<AlumnoCursoBloqueLog> AlumnoCursoBloqueLogs { get; set; }
        public virtual DbSet<AlumnoCursoEncuestum> AlumnoCursoEncuesta { get; set; }
        public virtual DbSet<AlumnoDefensaFinal> AlumnoDefensaFinals { get; set; }
        public virtual DbSet<AlumnoDefensaFinalH> AlumnoDefensaFinalHs { get; set; }
        public virtual DbSet<AlumnoDeteccionAuditorium> AlumnoDeteccionAuditoria { get; set; }
        public virtual DbSet<AlumnoDnerh> AlumnoDnerhs { get; set; }
        public virtual DbSet<AlumnoDocumento> AlumnoDocumentos { get; set; }
        public virtual DbSet<AlumnoEgresadoImprentum> AlumnoEgresadoImprenta { get; set; }
        public virtual DbSet<AlumnoEmpresa> AlumnoEmpresas { get; set; }
        public virtual DbSet<AlumnoEntrevistum> AlumnoEntrevista { get; set; }
        public virtual DbSet<AlumnoExcluyeWeb> AlumnoExcluyeWebs { get; set; }
        public virtual DbSet<AlumnoExploratorio> AlumnoExploratorios { get; set; }
        public virtual DbSet<AlumnoExtensionUniversitarium> AlumnoExtensionUniversitaria { get; set; }
        public virtual DbSet<AlumnoFlujoPorSemestre> AlumnoFlujoPorSemestres { get; set; }
        public virtual DbSet<AlumnoFuncionarioUnidum> AlumnoFuncionarioUnida { get; set; }
        public virtual DbSet<AlumnoH> AlumnoHs { get; set; }
        public virtual DbSet<AlumnoHabilitaFinalExtraordinario> AlumnoHabilitaFinalExtraordinarios { get; set; }
        public virtual DbSet<AlumnoHabilitaFinalExtraordinarioH> AlumnoHabilitaFinalExtraordinarioHs { get; set; }
        public virtual DbSet<AlumnoHolograma> AlumnoHologramas { get; set; }
        public virtual DbSet<AlumnoIncluyeWeb> AlumnoIncluyeWebs { get; set; }
        public virtual DbSet<AlumnoInternado> AlumnoInternados { get; set; }
        public virtual DbSet<AlumnoJustifica> AlumnoJustificas { get; set; }
        public virtual DbSet<AlumnoJustificaH> AlumnoJustificaHs { get; set; }
        public virtual DbSet<AlumnoLiberaAsist> AlumnoLiberaAsists { get; set; }
        public virtual DbSet<AlumnoLider> AlumnoLiders { get; set; }
        public virtual DbSet<AlumnoLlamadaCallCenter> AlumnoLlamadaCallCenters { get; set; }
        public virtual DbSet<AlumnoMaterium> AlumnoMateria { get; set; }
        public virtual DbSet<AlumnoMerito> AlumnoMeritos { get; set; }
        public virtual DbSet<AlumnoMeritoH> AlumnoMeritoHs { get; set; }
        public virtual DbSet<AlumnoNota> AlumnoNotas { get; set; }
        public virtual DbSet<AlumnoParaAcad> AlumnoParaAcads { get; set; }
        public virtual DbSet<AlumnoParaAcadH> AlumnoParaAcadHs { get; set; }
        public virtual DbSet<AlumnoPeriodo> AlumnoPeriodos { get; set; }
        public virtual DbSet<AlumnoPeriodoCredito> AlumnoPeriodoCreditos { get; set; }
        public virtual DbSet<AlumnoPeriodoEsp> AlumnoPeriodoEsps { get; set; }
        public virtual DbSet<AlumnoPeriodoH> AlumnoPeriodoHs { get; set; }
        public virtual DbSet<AlumnoPeriodoMedicina> AlumnoPeriodoMedicinas { get; set; }
        public virtual DbSet<AlumnoPeriodoRevisarErnestoMatricula> AlumnoPeriodoRevisarErnestoMatriculas { get; set; }
        public virtual DbSet<AlumnoPierdeBeca> AlumnoPierdeBecas { get; set; }
        public virtual DbSet<AlumnoPrereq> AlumnoPrereqs { get; set; }
        public virtual DbSet<AlumnoPresenciaPosgrado> AlumnoPresenciaPosgrados { get; set; }
        public virtual DbSet<AlumnoProceso> AlumnoProcesos { get; set; }
        public virtual DbSet<AlumnoPromedioGeneral> AlumnoPromedioGenerals { get; set; }
        public virtual DbSet<AlumnoProrroga> AlumnoProrrogas { get; set; }
        public virtual DbSet<AlumnoPuesto> AlumnoPuestos { get; set; }
        public virtual DbSet<AlumnoQr> AlumnoQrs { get; set; }
        public virtual DbSet<AlumnoQueja> AlumnoQuejas { get; set; }
        public virtual DbSet<AlumnoRecategorizacion> AlumnoRecategorizacions { get; set; }
        public virtual DbSet<AlumnoReclamoC> AlumnoReclamoCs { get; set; }
        public virtual DbSet<AlumnoReclamoD> AlumnoReclamoDs { get; set; }
        public virtual DbSet<AlumnoRegistroTitulo> AlumnoRegistroTitulos { get; set; }
        public virtual DbSet<AlumnoReporte> AlumnoReportes { get; set; }
        public virtual DbSet<AlumnoResolucion> AlumnoResolucions { get; set; }
        public virtual DbSet<AlumnoRestriccion> AlumnoRestriccions { get; set; }
        public virtual DbSet<AlumnoRestriccionPsicologium> AlumnoRestriccionPsicologia { get; set; }
        public virtual DbSet<AlumnoRestringeExaman> AlumnoRestringeExamen { get; set; }
        public virtual DbSet<AlumnoRestringeExamenH> AlumnoRestringeExamenHs { get; set; }
        public virtual DbSet<AlumnoRestringeMatricula> AlumnoRestringeMatriculas { get; set; }
        public virtual DbSet<AlumnoRetiro> AlumnoRetiros { get; set; }
        public virtual DbSet<AlumnoSeguroMed> AlumnoSeguroMeds { get; set; }
        public virtual DbSet<AlumnoVirtual> AlumnoVirtuals { get; set; }
        public virtual DbSet<AlumnosPotenciale> AlumnosPotenciales { get; set; }
        public virtual DbSet<AlumnosRindieron> AlumnosRindierons { get; set; }
        public virtual DbSet<Aplicacion> Aplicacions { get; set; }
        public virtual DbSet<AreaAcademica> AreaAcademicas { get; set; }
        public virtual DbSet<AreaEvaluacion> AreaEvaluacions { get; set; }
        public virtual DbSet<Artistum> Artista { get; set; }
        public virtual DbSet<Asiento01> Asiento01s { get; set; }
        public virtual DbSet<AsientoDiarioDetalleTemp> AsientoDiarioDetalleTemps { get; set; }
        public virtual DbSet<Asis01> Asis01s { get; set; }
        public virtual DbSet<AsistWebAcumula> AsistWebAcumulas { get; set; }
        public virtual DbSet<AsistWebAcumulaH> AsistWebAcumulaHs { get; set; }
        public virtual DbSet<AsistWebAlumno> AsistWebAlumnos { get; set; }
        public virtual DbSet<AsistWebProfesor> AsistWebProfesors { get; set; }
        public virtual DbSet<AsistenciaCsir> AsistenciaCsirs { get; set; }
        public virtual DbSet<AsistenciaFormacion> AsistenciaFormacions { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<Aula> Aulas { get; set; }
        public virtual DbSet<AulaCurso> AulaCursos { get; set; }
        public virtual DbSet<AulaCursoH> AulaCursoHs { get; set; }
        public virtual DbSet<AulaDisp> AulaDisps { get; set; }
        public virtual DbSet<AulaH> AulaHs { get; set; }
        public virtual DbSet<AulaSoftware> AulaSoftwares { get; set; }
        public virtual DbSet<AulasHorario> AulasHorarios { get; set; }
        public virtual DbSet<AutorizaExaman> AutorizaExamen { get; set; }
        public virtual DbSet<AutorizaUsuario> AutorizaUsuarios { get; set; }
        public virtual DbSet<AutorizacionAlum> AutorizacionAlums { get; set; }
        public virtual DbSet<AutorizacionAlumH> AutorizacionAlumHs { get; set; }
        public virtual DbSet<AutorizacionBloqueCursoFecha> AutorizacionBloqueCursoFechas { get; set; }
        public virtual DbSet<AutorizacionBloqueCursoNota> AutorizacionBloqueCursoNotas { get; set; }
        public virtual DbSet<AutorizacionCurso> AutorizacionCursos { get; set; }
        public virtual DbSet<AutorizacionCursoH> AutorizacionCursoHs { get; set; }
        public virtual DbSet<Aviso> Avisos { get; set; }
        public virtual DbSet<AvisoMovilidad> AvisoMovilidads { get; set; }
        public virtual DbSet<AvisoPersona> AvisoPersonas { get; set; }
        public virtual DbSet<AvisoPersonaWeb> AvisoPersonaWebs { get; set; }
        public virtual DbSet<AvisoWeb> AvisoWebs { get; set; }
        public virtual DbSet<AxMatri> AxMatris { get; set; }
        public virtual DbSet<AxMatriculado> AxMatriculados { get; set; }
        public virtual DbSet<BancaBanco> BancaBancos { get; set; }
        public virtual DbSet<BancaCatalogo> BancaCatalogos { get; set; }
        public virtual DbSet<BancaCatalogoTarifa> BancaCatalogoTarifas { get; set; }
        public virtual DbSet<BancaCngAsiento> BancaCngAsientos { get; set; }
        public virtual DbSet<BancaCngAsientoControl> BancaCngAsientoControls { get; set; }
        public virtual DbSet<BancaCngAsientoDataIngreso> BancaCngAsientoDataIngresos { get; set; }
        public virtual DbSet<BancaComision> BancaComisions { get; set; }
        public virtual DbSet<BancaComisionH> BancaComisionHs { get; set; }
        public virtual DbSet<BancaComprobante> BancaComprobantes { get; set; }
        public virtual DbSet<BancaComprobanteBorrame> BancaComprobanteBorrames { get; set; }
        public virtual DbSet<BancaComprobanteD> BancaComprobanteDs { get; set; }
        public virtual DbSet<BancaComprobanteDBorrame> BancaComprobanteDBorrames { get; set; }
        public virtual DbSet<BancaComprobanteH> BancaComprobanteHs { get; set; }
        public virtual DbSet<BancaConcepto> BancaConceptos { get; set; }
        public virtual DbSet<BancaContenido> BancaContenidos { get; set; }
        public virtual DbSet<BancaCriterioObligacion> BancaCriterioObligacions { get; set; }
        public virtual DbSet<BancaCronograma> BancaCronogramas { get; set; }
        public virtual DbSet<BancaCronogramaContenido> BancaCronogramaContenidos { get; set; }
        public virtual DbSet<BancaCronogramaContenidoTemp> BancaCronogramaContenidoTemps { get; set; }
        public virtual DbSet<BancaDefinicion> BancaDefinicions { get; set; }
        public virtual DbSet<BancaFormaPagoConfigura> BancaFormaPagoConfiguras { get; set; }
        public virtual DbSet<BancaInteraccion> BancaInteraccions { get; set; }
        public virtual DbSet<BancaInteraccionCurso> BancaInteraccionCursos { get; set; }
        public virtual DbSet<BancaMctaco> BancaMctacos { get; set; }
        public virtual DbSet<BancaObligacion> BancaObligacions { get; set; }
        public virtual DbSet<BancaObligacion3101> BancaObligacion3101s { get; set; }
        public virtual DbSet<BancaObligacionBeneficio> BancaObligacionBeneficios { get; set; }
        public virtual DbSet<BancaObligacionBeneficioH> BancaObligacionBeneficioHs { get; set; }
        public virtual DbSet<BancaObligacionContenido> BancaObligacionContenidos { get; set; }
        public virtual DbSet<BancaObligacionContenidoH> BancaObligacionContenidoHs { get; set; }
        public virtual DbSet<BancaObligacionContenidoSinMora> BancaObligacionContenidoSinMoras { get; set; }
        public virtual DbSet<BancaObligacionContenidoSinMoraH> BancaObligacionContenidoSinMoraHs { get; set; }
        public virtual DbSet<BancaObligacionH> BancaObligacionHs { get; set; }
        public virtual DbSet<BancaObligacionMora> BancaObligacionMoras { get; set; }
        public virtual DbSet<BancaObligacionMovimiento> BancaObligacionMovimientos { get; set; }
        public virtual DbSet<BancaObligacionMovimientoH> BancaObligacionMovimientoHs { get; set; }
        public virtual DbSet<BancaObligacionMovimientoPago> BancaObligacionMovimientoPagos { get; set; }
        public virtual DbSet<BancaObligacionMovimientoPagoH> BancaObligacionMovimientoPagoHs { get; set; }
        public virtual DbSet<BancaPorcentajeIncremento> BancaPorcentajeIncrementos { get; set; }
        public virtual DbSet<BancaPorcentajeIncrementoConfigura> BancaPorcentajeIncrementoConfiguras { get; set; }
        public virtual DbSet<BancaPrecio> BancaPrecios { get; set; }
        public virtual DbSet<BancaPrecioDefinicion> BancaPrecioDefinicions { get; set; }
        public virtual DbSet<BancaPrecioDefinicionH> BancaPrecioDefinicionHs { get; set; }
        public virtual DbSet<BancaPrecioH> BancaPrecioHs { get; set; }
        public virtual DbSet<BancaProducto> BancaProductos { get; set; }
        public virtual DbSet<BancaProductoContenido> BancaProductoContenidos { get; set; }
        public virtual DbSet<BancaTarifa> BancaTarifas { get; set; }
        public virtual DbSet<BancaTarifaPrecio> BancaTarifaPrecios { get; set; }
        public virtual DbSet<BancaUsuarioConfigura> BancaUsuarioConfiguras { get; set; }
        public virtual DbSet<BancaUsuarioConfiguraTimbrado> BancaUsuarioConfiguraTimbrados { get; set; }
        public virtual DbSet<BancaVCronogramaPrecioDetalle> BancaVCronogramaPrecioDetalles { get; set; }
        public virtual DbSet<BancaVPrecioDetalle> BancaVPrecioDetalles { get; set; }
        public virtual DbSet<BancaVProductoDetalle> BancaVProductoDetalles { get; set; }
        public virtual DbSet<BancaVencimientoConfigura> BancaVencimientoConfiguras { get; set; }
        public virtual DbSet<BdContacto> BdContactos { get; set; }
        public virtual DbSet<BecaUnidum> BecaUnida { get; set; }
        public virtual DbSet<BecasComp> BecasComps { get; set; }
        public virtual DbSet<BeneficioSinObligacion> BeneficioSinObligacions { get; set; }
        public virtual DbSet<BibBloqueo> BibBloqueos { get; set; }
        public virtual DbSet<BibMovimiento> BibMovimientos { get; set; }
        public virtual DbSet<BibMultaH> BibMultaHs { get; set; }
        public virtual DbSet<BibMultum> BibMulta { get; set; }
        public virtual DbSet<BibPrestamo> BibPrestamos { get; set; }
        public virtual DbSet<BibReserva> BibReservas { get; set; }
        public virtual DbSet<Bloque> Bloques { get; set; }
        public virtual DbSet<BloqueAlumnosPosgrado> BloqueAlumnosPosgrados { get; set; }
        public virtual DbSet<BloqueCarrera> BloqueCarreras { get; set; }
        public virtual DbSet<BloqueCarreraH> BloqueCarreraHs { get; set; }
        public virtual DbSet<BloqueCurso> BloqueCursos { get; set; }
        public virtual DbSet<BloqueCursoActa> BloqueCursoActas { get; set; }
        public virtual DbSet<BloqueCursoAlumnoMoodle> BloqueCursoAlumnoMoodles { get; set; }
        public virtual DbSet<BloqueCursoH> BloqueCursoHs { get; set; }
        public virtual DbSet<BloqueCursoMoodle> BloqueCursoMoodles { get; set; }
        public virtual DbSet<BloqueCursoRegistroEvaluacion> BloqueCursoRegistroEvaluacions { get; set; }
        public virtual DbSet<BloqueCursoRegistroEvaluacionH> BloqueCursoRegistroEvaluacionHs { get; set; }
        public virtual DbSet<BloqueCursoResponsable> BloqueCursoResponsables { get; set; }
        public virtual DbSet<BloqueExterno> BloqueExternos { get; set; }
        public virtual DbSet<BloqueH> BloqueHs { get; set; }
        public virtual DbSet<BloqueSesion> BloqueSesions { get; set; }
        public virtual DbSet<BloqueSesionCon> BloqueSesionCons { get; set; }
        public virtual DbSet<BloqueSesionEnc> BloqueSesionEncs { get; set; }
        public virtual DbSet<BloqueSesionFecha> BloqueSesionFechas { get; set; }
        public virtual DbSet<BloqueSesionH> BloqueSesionHs { get; set; }
        public virtual DbSet<BloqueSesionPreg> BloqueSesionPregs { get; set; }
        public virtual DbSet<BloqueSesionProf> BloqueSesionProfs { get; set; }
        public virtual DbSet<BloqueSesionProfH> BloqueSesionProfHs { get; set; }
        public virtual DbSet<BloqueSesionRe> BloqueSesionRes { get; set; }
        public virtual DbSet<BloqueoSemana> BloqueoSemanas { get; set; }
        public virtual DbSet<BoletinEclass> BoletinEclasses { get; set; }
        public virtual DbSet<BolsaTrabajoEclass> BolsaTrabajoEclasses { get; set; }
        public virtual DbSet<CabFact> CabFacts { get; set; }
        public virtual DbSet<CafeteriaArticulo> CafeteriaArticulos { get; set; }
        public virtual DbSet<CafeteriaGrupo> CafeteriaGrupos { get; set; }
        public virtual DbSet<CafeteriaPrecio> CafeteriaPrecios { get; set; }
        public virtual DbSet<Calendario> Calendarios { get; set; }
        public virtual DbSet<CalendarioAcademico> CalendarioAcademicos { get; set; }
        public virtual DbSet<CalendarioEclass> CalendarioEclasses { get; set; }
        public virtual DbSet<CambioPagina> CambioPaginas { get; set; }
        public virtual DbSet<CampaniaH> CampaniaHs { get; set; }
        public virtual DbSet<Campanium> Campania { get; set; }
        public virtual DbSet<Canje> Canjes { get; set; }
        public virtual DbSet<CapacidadCantidad> CapacidadCantidads { get; set; }
        public virtual DbSet<CapacidadCantidadUbicadum> CapacidadCantidadUbicada { get; set; }
        public virtual DbSet<CargoAcademico> CargoAcademicos { get; set; }
        public virtual DbSet<CargoCompanium> CargoCompania { get; set; }
        public virtual DbSet<Carrera> Carreras { get; set; }
        public virtual DbSet<CarreraCoordinador> CarreraCoordinadors { get; set; }
        public virtual DbSet<CarreraEducativaExtranjero> CarreraEducativaExtranjeros { get; set; }
        public virtual DbSet<CarreraExternaCordinador> CarreraExternaCordinadors { get; set; }
        public virtual DbSet<CarreraH> CarreraHs { get; set; }
        public virtual DbSet<CarreraJa> CarreraJas { get; set; }
        public virtual DbSet<CarreraModalidad> CarreraModalidads { get; set; }
        public virtual DbSet<CarreraPeriodo> CarreraPeriodos { get; set; }
        public virtual DbSet<CarreraPeriodoTurno> CarreraPeriodoTurnos { get; set; }
        public virtual DbSet<CasosDiego> CasosDiegos { get; set; }
        public virtual DbSet<CasosDiego20092> CasosDiego20092s { get; set; }
        public virtual DbSet<CasosDiego20101> CasosDiego20101s { get; set; }
        public virtual DbSet<CasosDiego20102> CasosDiego20102s { get; set; }
        public virtual DbSet<CategoriaH> CategoriaHs { get; set; }
        public virtual DbSet<CategoriaProfesor> CategoriaProfesors { get; set; }
        public virtual DbSet<Categorium> Categoria { get; set; }
        public virtual DbSet<Cdepoc00> Cdepoc00s { get; set; }
        public virtual DbSet<CertificadoOb> CertificadoObs { get; set; }
        public virtual DbSet<Chat> Chats { get; set; }
        public virtual DbSet<Clasificacion> Clasificacions { get; set; }
        public virtual DbSet<ClasificacionH> ClasificacionHs { get; set; }
        public virtual DbSet<CngCuotaEsperadum> CngCuotaEsperada { get; set; }
        public virtual DbSet<Coin> Coins { get; set; }
        public virtual DbSet<CoincidenciasAve> CoincidenciasAves { get; set; }
        public virtual DbSet<CoincidenciasAve5> CoincidenciasAve5s { get; set; }
        public virtual DbSet<CoincidenciasAveMod> CoincidenciasAveMods { get; set; }
        public virtual DbSet<CoincidenciasAveOld> CoincidenciasAveOlds { get; set; }
        public virtual DbSet<CoincidenciasAveTemp> CoincidenciasAveTemps { get; set; }
        public virtual DbSet<CoincidenciasAveTempH> CoincidenciasAveTempHs { get; set; }
        public virtual DbSet<CoincidenciasGen> CoincidenciasGens { get; set; }
        public virtual DbSet<Colacion> Colacions { get; set; }
        public virtual DbSet<ColacionDetalle> ColacionDetalles { get; set; }
        public virtual DbSet<Columna> Columnas { get; set; }
        public virtual DbSet<Combinacione> Combinaciones { get; set; }
        public virtual DbSet<CombinacionesInsert> CombinacionesInserts { get; set; }
        public virtual DbSet<Companium> Compania { get; set; }
        public virtual DbSet<Comprobante> Comprobantes { get; set; }
        public virtual DbSet<ConcursoUnidum> ConcursoUnida { get; set; }
        public virtual DbSet<ConfigReporte> ConfigReportes { get; set; }
        public virtual DbSet<ConfigurarPlanillaAsuVerano> ConfigurarPlanillaAsuVeranos { get; set; }
        public virtual DbSet<ConfigurarPlanillaCde> ConfigurarPlanillaCdes { get; set; }
        public virtual DbSet<ConfigurarPlanillaPosgrado> ConfigurarPlanillaPosgrados { get; set; }
        public virtual DbSet<ConfigurarPlanillaTesi> ConfigurarPlanillaTeses { get; set; }
        public virtual DbSet<ConsultaDudaSugerencium> ConsultaDudaSugerencia { get; set; }
        public virtual DbSet<ConsultaTemp> ConsultaTemps { get; set; }
        public virtual DbSet<Consultum> Consulta { get; set; }
        public virtual DbSet<Contacto> Contactos { get; set; }
        public virtual DbSet<Contribuyente> Contribuyentes { get; set; }
        public virtual DbSet<ControlAcceso> ControlAccesos { get; set; }
        public virtual DbSet<ControlAccesosVista> ControlAccesosVistas { get; set; }
        public virtual DbSet<ControlBatch> ControlBatches { get; set; }
        public virtual DbSet<ControlEntregaEx> ControlEntregaices { get; set; }
        public virtual DbSet<ControlExportacion> ControlExportacions { get; set; }
        public virtual DbSet<ControlFoto> ControlFotos { get; set; }
        public virtual DbSet<ControlOpcion> ControlOpcions { get; set; }
        public virtual DbSet<Convalidacion> Convalidacions { get; set; }
        public virtual DbSet<Convenio> Convenios { get; set; }
        public virtual DbSet<ConvenioArchivo> ConvenioArchivos { get; set; }
        public virtual DbSet<ConvenioDetalle> ConvenioDetalles { get; set; }
        public virtual DbSet<ConvenioDetalleH> ConvenioDetalleHs { get; set; }
        public virtual DbSet<ConvenioH> ConvenioHs { get; set; }
        public virtual DbSet<CorreoMasivoC> CorreoMasivoCs { get; set; }
        public virtual DbSet<CorreoMasivoConfirmacion> CorreoMasivoConfirmacions { get; set; }
        public virtual DbSet<CorreoMasivoD> CorreoMasivoDs { get; set; }
        public virtual DbSet<CorreosMat218> CorreosMat218s { get; set; }
        public virtual DbSet<Corrije21032013> Corrije21032013s { get; set; }
        public virtual DbSet<Corrije210320132> Corrije210320132s { get; set; }
        public virtual DbSet<CostosAluper> CostosAlupers { get; set; }
        public virtual DbSet<CostosAluperH> CostosAluperHs { get; set; }
        public virtual DbSet<CostosAulse> CostosAulses { get; set; }
        public virtual DbSet<CostosAulsesH> CostosAulsesHes { get; set; }
        public virtual DbSet<CostosBlose> CostosBloses { get; set; }
        public virtual DbSet<CostosBlosesH> CostosBlosesHes { get; set; }
        public virtual DbSet<CostosCar> CostosCars { get; set; }
        public virtual DbSet<CostosCarH> CostosCarHs { get; set; }
        public virtual DbSet<CostosCarloc> CostosCarlocs { get; set; }
        public virtual DbSet<CostosCarlocH> CostosCarlocHes { get; set; }
        public virtual DbSet<CostosCentCost> CostosCentCosts { get; set; }
        public virtual DbSet<CostosCur> CostosCurs { get; set; }
        public virtual DbSet<CostosCurH> CostosCurHs { get; set; }
        public virtual DbSet<CostosCurblocar> CostosCurblocars { get; set; }
        public virtual DbSet<CostosCurblocarH> CostosCurblocarHs { get; set; }
        public virtual DbSet<CostosCurblopro> CostosCurblopros { get; set; }
        public virtual DbSet<CostosCurbloproH> CostosCurbloproHs { get; set; }
        public virtual DbSet<CostosCurcar> CostosCurcars { get; set; }
        public virtual DbSet<CostosCurcarH> CostosCurcarHs { get; set; }
        public virtual DbSet<CostosFic> CostosFics { get; set; }
        public virtual DbSet<CostosFicH> CostosFicHes { get; set; }
        public virtual DbSet<CostosMtrabaCor> CostosMtrabaCors { get; set; }
        public virtual DbSet<CostosParam> CostosParams { get; set; }
        public virtual DbSet<CostosParamPlaac> CostosParamPlaacs { get; set; }
        public virtual DbSet<CostosPerDic> CostosPerDics { get; set; }
        public virtual DbSet<CostosPerDicH> CostosPerDicHes { get; set; }
        public virtual DbSet<CostosProfAsi> CostosProfAses { get; set; }
        public virtual DbSet<CostosProfAsisH> CostosProfAsisHes { get; set; }
        public virtual DbSet<CostosTransaccionC> CostosTransaccionCs { get; set; }
        public virtual DbSet<CostosTransaccionCH> CostosTransaccionCHes { get; set; }
        public virtual DbSet<Criterio> Criterios { get; set; }
        public virtual DbSet<CronogramaActC> CronogramaActCs { get; set; }
        public virtual DbSet<CronogramaActD> CronogramaActDs { get; set; }
        public virtual DbSet<CruceMateria> CruceMaterias { get; set; }
        public virtual DbSet<CsAluperH> CsAluperHs { get; set; }
        public virtual DbSet<CsAulsesH> CsAulsesHes { get; set; }
        public virtual DbSet<CsBlosesH> CsBlosesHes { get; set; }
        public virtual DbSet<CsCarH> CsCarHs { get; set; }
        public virtual DbSet<CsCarlocH> CsCarlocHes { get; set; }
        public virtual DbSet<CsCurH> CsCurHs { get; set; }
        public virtual DbSet<CsCurblocarH> CsCurblocarHs { get; set; }
        public virtual DbSet<CsCurbloproH> CsCurbloproHs { get; set; }
        public virtual DbSet<CsCurcarH> CsCurcarHs { get; set; }
        public virtual DbSet<CsFicH> CsFicHes { get; set; }
        public virtual DbSet<CsPerDicH> CsPerDicHes { get; set; }
        public virtual DbSet<CsProfAsisH> CsProfAsisHes { get; set; }
        public virtual DbSet<CsTransaccionCH> CsTransaccionCHes { get; set; }
        public virtual DbSet<CurriculaAdd> CurriculaAdds { get; set; }
        public virtual DbSet<CurriculaCambioCurricular> CurriculaCambioCurriculars { get; set; }
        public virtual DbSet<CurriculaCcAnalisi> CurriculaCcAnalises { get; set; }
        public virtual DbSet<CurriculaCcAnalisisEq> CurriculaCcAnalisisEqs { get; set; }
        public virtual DbSet<CurriculaCcAnalisisOverload> CurriculaCcAnalisisOverloads { get; set; }
        public virtual DbSet<CurriculaCcDetalle> CurriculaCcDetalles { get; set; }
        public virtual DbSet<CurriculaCurso> CurriculaCursos { get; set; }
        public virtual DbSet<CurriculaCursoA> CurriculaCursoAs { get; set; }
        public virtual DbSet<CurriculaCursoAdd> CurriculaCursoAdds { get; set; }
        public virtual DbSet<CurriculaCursoH> CurriculaCursoHs { get; set; }
        public virtual DbSet<CurriculaH> CurriculaHs { get; set; }
        public virtual DbSet<CurriculaTempNueva> CurriculaTempNuevas { get; set; }
        public virtual DbSet<CurriculaTempNuevasCh> CurriculaTempNuevasChes { get; set; }
        public virtual DbSet<Curriculum> Curricula { get; set; }
        public virtual DbSet<Curso> Cursos { get; set; }
        public virtual DbSet<CursoCoordinador> CursoCoordinadors { get; set; }
        public virtual DbSet<CursoFamilium> CursoFamilia { get; set; }
        public virtual DbSet<CursoH> CursoHs { get; set; }
        public virtual DbSet<CursoLlevado> CursoLlevados { get; set; }
        public virtual DbSet<CursoMaterial> CursoMaterials { get; set; }
        public virtual DbSet<CursoParametro> CursoParametros { get; set; }
        public virtual DbSet<CursoSoftware> CursoSoftwares { get; set; }
        public virtual DbSet<CursosDocumento> CursosDocumentos { get; set; }
        public virtual DbSet<CursosFueraMalla> CursosFueraMallas { get; set; }
        public virtual DbSet<Datacook> Datacooks { get; set; }
        public virtual DbSet<Dato> Datos { get; set; }
        public virtual DbSet<DatosDiscapacidad> DatosDiscapacidads { get; set; }
        public virtual DbSet<Dbenef00> Dbenef00s { get; set; }
        public virtual DbSet<DeclaracionVacunaCovid> DeclaracionVacunaCovids { get; set; }
        public virtual DbSet<DepartamentoAcad> DepartamentoAcads { get; set; }
        public virtual DbSet<DocenteGrupoCursoConfig> DocenteGrupoCursoConfigs { get; set; }
        public virtual DbSet<DocenteGrupoCursoConfigH> DocenteGrupoCursoConfigHs { get; set; }
        public virtual DbSet<DocumCompaniaPer> DocumCompaniaPers { get; set; }
        public virtual DbSet<DocumCompanium> DocumCompania { get; set; }
        public virtual DbSet<Documento> Documentos { get; set; }
        public virtual DbSet<DocumentoExtension> DocumentoExtensions { get; set; }
        public virtual DbSet<DocumentoNumero> DocumentoNumeros { get; set; }
        public virtual DbSet<DocumentoPlanificacion> DocumentoPlanificacions { get; set; }
        public virtual DbSet<DocumentoVersion> DocumentoVersions { get; set; }
        public virtual DbSet<DocumentoWeb> DocumentoWebs { get; set; }
        public virtual DbSet<DocumentosProvisionado> DocumentosProvisionados { get; set; }
        public virtual DbSet<EAlumnoAsist> EAlumnoAsists { get; set; }
        public virtual DbSet<EProfesorAsist> EProfesorAsists { get; set; }
        public virtual DbSet<EducativoAlumno> EducativoAlumnos { get; set; }
        public virtual DbSet<EducativoCateg> EducativoCategs { get; set; }
        public virtual DbSet<EducativoContacto> EducativoContactos { get; set; }
        public virtual DbSet<EducativoEvento> EducativoEventos { get; set; }
        public virtual DbSet<Empleado> Empleados { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<EmpresaContacto> EmpresaContactos { get; set; }
        public virtual DbSet<Encuesta> Encuestas { get; set; }
        public virtual DbSet<EncuestaAlumnoABiblioteca> EncuestaAlumnoABibliotecas { get; set; }
        public virtual DbSet<EncuestaAlumnoACafeterium> EncuestaAlumnoACafeteria { get; set; }
        public virtual DbSet<EncuestaAlumnoACoordinador> EncuestaAlumnoACoordinadors { get; set; }
        public virtual DbSet<EncuestaAlumnoADocente> EncuestaAlumnoADocentes { get; set; }
        public virtual DbSet<EncuestaAlumnoAInfraestructura> EncuestaAlumnoAInfraestructuras { get; set; }
        public virtual DbSet<EncuestaAlumnoALaboratorio> EncuestaAlumnoALaboratorios { get; set; }
        public virtual DbSet<EncuestaAlumnoALibrerium> EncuestaAlumnoALibreria { get; set; }
        public virtual DbSet<EncuestaAlumnoASga> EncuestaAlumnoASgas { get; set; }
        public virtual DbSet<EncuestaAutoevaluacion> EncuestaAutoevaluacions { get; set; }
        public virtual DbSet<EncuestaAutoevaluacionComentario> EncuestaAutoevaluacionComentarios { get; set; }
        public virtual DbSet<EncuestaCoordinadorAAutoevaluacion> EncuestaCoordinadorAAutoevaluacions { get; set; }
        public virtual DbSet<EncuestaCoordinadorAProfesor> EncuestaCoordinadorAProfesors { get; set; }
        public virtual DbSet<EncuestaCovid19> EncuestaCovid19s { get; set; }
        public virtual DbSet<EncuestaDecanoACoordinador> EncuestaDecanoACoordinadors { get; set; }
        public virtual DbSet<EncuestaDeslaboral> EncuestaDeslaborals { get; set; }
        public virtual DbSet<EncuestaDirectorAcademicoADecano> EncuestaDirectorAcademicoADecanos { get; set; }
        public virtual DbSet<EncuestaDocenteAAlumno> EncuestaDocenteAAlumnos { get; set; }
        public virtual DbSet<EncuestaDocenteAAutoevaluacion> EncuestaDocenteAAutoevaluacions { get; set; }
        public virtual DbSet<EncuestaDocenteABiblioteca> EncuestaDocenteABibliotecas { get; set; }
        public virtual DbSet<EncuestaDocenteACafeterium> EncuestaDocenteACafeteria { get; set; }
        public virtual DbSet<EncuestaDocenteACoordinador> EncuestaDocenteACoordinadors { get; set; }
        public virtual DbSet<EncuestaDocenteAInfraestructura> EncuestaDocenteAInfraestructuras { get; set; }
        public virtual DbSet<EncuestaDocenteALaboratorio> EncuestaDocenteALaboratorios { get; set; }
        public virtual DbSet<EncuestaDocenteALibrerium> EncuestaDocenteALibreria { get; set; }
        public virtual DbSet<EncuestaDocenteASgp> EncuestaDocenteASgps { get; set; }
        public virtual DbSet<EncuestaDocenteInvestigacion> EncuestaDocenteInvestigacions { get; set; }
        public virtual DbSet<EncuestaEgresado> EncuestaEgresados { get; set; }
        public virtual DbSet<EncuestaEgresado1> EncuestaEgresados1 { get; set; }
        public virtual DbSet<EncuestaEgresadoARetroalimentacion> EncuestaEgresadoARetroalimentacions { get; set; }
        public virtual DbSet<EncuestaEmisora> EncuestaEmisoras { get; set; }
        public virtual DbSet<EncuestaEmpleador> EncuestaEmpleadors { get; set; }
        public virtual DbSet<EncuestaFuncionarioAAutoevaluacion> EncuestaFuncionarioAAutoevaluacions { get; set; }
        public virtual DbSet<EncuestaLogo> EncuestaLogos { get; set; }
        public virtual DbSet<EncuestaMotivosInsatisfaccion> EncuestaMotivosInsatisfaccions { get; set; }
        public virtual DbSet<EncuestaPreguntaEgresado> EncuestaPreguntaEgresados { get; set; }
        public virtual DbSet<EncuestaSatisfaccion> EncuestaSatisfaccions { get; set; }
        public virtual DbSet<EncuestaSatisfaccionPreguntum> EncuestaSatisfaccionPregunta { get; set; }
        public virtual DbSet<EncuestaSiTrabajan> EncuestaSiTrabajans { get; set; }
        public virtual DbSet<EncuestaTitulosPostgrado> EncuestaTitulosPostgrados { get; set; }
        public virtual DbSet<Encuestacomentario> Encuestacomentarios { get; set; }
        public virtual DbSet<Encuestapreguntum> Encuestapregunta { get; set; }
        public virtual DbSet<Encuestasatisfaccion1> Encuestasatisfaccions1 { get; set; }
        public virtual DbSet<Encuestasatisfaccioncomentario> Encuestasatisfaccioncomentarios { get; set; }
        public virtual DbSet<Encuestum> Encuesta { get; set; }
        public virtual DbSet<EnteEducativo> EnteEducativos { get; set; }
        public virtual DbSet<EnteEducativoGestado0> EnteEducativoGestado0s { get; set; }
        public virtual DbSet<EnteEducativoH> EnteEducativoHs { get; set; }
        public virtual DbSet<Equiparacione> Equiparaciones { get; set; }
        public virtual DbSet<EquiparacionesC> EquiparacionesCs { get; set; }
        public virtual DbSet<EquiparacionesD> EquiparacionesDs { get; set; }
        public virtual DbSet<Equipo> Equipos { get; set; }
        public virtual DbSet<EquivPasantia1Enf> EquivPasantia1Enfs { get; set; }
        public virtual DbSet<EquivPasantia2Enf> EquivPasantia2Enfs { get; set; }
        public virtual DbSet<EquivalenciaConvalidacionInterna> EquivalenciaConvalidacionInternas { get; set; }
        public virtual DbSet<EquivalenciaH> EquivalenciaHs { get; set; }
        public virtual DbSet<EquivalenciaOld> EquivalenciaOlds { get; set; }
        public virtual DbSet<EquivalenciasMallasTemp> EquivalenciasMallasTemps { get; set; }
        public virtual DbSet<EquivalenciasTemp> EquivalenciasTemps { get; set; }
        public virtual DbSet<Equivalencium> Equivalencia { get; set; }
        public virtual DbSet<Especialidad> Especialidads { get; set; }
        public virtual DbSet<Especialistum> Especialista { get; set; }
        public virtual DbSet<EsquemaNotaC> EsquemaNotaCs { get; set; }
        public virtual DbSet<EsquemaNotaCH> EsquemaNotaCHes { get; set; }
        public virtual DbSet<EsquemaNotaD> EsquemaNotaDs { get; set; }
        public virtual DbSet<EsquemaNotaDH> EsquemaNotaDHs { get; set; }
        public virtual DbSet<Estadistica> Estadisticas { get; set; }
        public virtual DbSet<EstadisticaNotum> EstadisticaNota { get; set; }
        public virtual DbSet<Estructura> Estructuras { get; set; }
        public virtual DbSet<EvalPotencialIhea> EvalPotencialIheas { get; set; }
        public virtual DbSet<EvalPotencialRsptum> EvalPotencialRspta { get; set; }
        public virtual DbSet<EvalPotencialValor> EvalPotencialValors { get; set; }
        public virtual DbSet<Evalle> Evalles { get; set; }
        public virtual DbSet<Evaluacion> Evaluacions { get; set; }
        public virtual DbSet<EvaluacionAula> EvaluacionAulas { get; set; }
        public virtual DbSet<EvaluacionAulaH> EvaluacionAulaHs { get; set; }
        public virtual DbSet<EvaluacionEntradum> EvaluacionEntrada { get; set; }
        public virtual DbSet<EvaluacionExonera> EvaluacionExoneras { get; set; }
        public virtual DbSet<EvaluacionH> EvaluacionHs { get; set; }
        public virtual DbSet<EvaluacionPostul> EvaluacionPostuls { get; set; }
        public virtual DbSet<EvaluacionPostulDet> EvaluacionPostulDets { get; set; }
        public virtual DbSet<EvaluacionPostulH> EvaluacionPostulHs { get; set; }
        public virtual DbSet<EvaluacionPotencial> EvaluacionPotencials { get; set; }
        public virtual DbSet<EvaluacionPreg> EvaluacionPregs { get; set; }
        public virtual DbSet<EvaluacionPregH> EvaluacionPregHs { get; set; }
        public virtual DbSet<EvaluacionRepVario> EvaluacionRepVarios { get; set; }
        public virtual DbSet<EvaluacionSpu> EvaluacionSpus { get; set; }
        public virtual DbSet<EventoAlumno> EventoAlumnos { get; set; }
        public virtual DbSet<EventoAlumnoHisto> EventoAlumnoHistos { get; set; }
        public virtual DbSet<EventoAula> EventoAulas { get; set; }
        public virtual DbSet<EventoCurso> EventoCursos { get; set; }
        public virtual DbSet<ExamenIsso> ExamenIssos { get; set; }
        public virtual DbSet<ExploCursoExon> ExploCursoExons { get; set; }
        public virtual DbSet<ExploPuntaje> ExploPuntajes { get; set; }
        public virtual DbSet<ExploRango> ExploRangos { get; set; }
        public virtual DbSet<ExploResultado> ExploResultados { get; set; }
        public virtual DbSet<Exploratorio> Exploratorios { get; set; }
        public virtual DbSet<ExportImportNotasVirtual> ExportImportNotasVirtuals { get; set; }
        public virtual DbSet<Facultad> Facultads { get; set; }
        public virtual DbSet<FaqContenido> FaqContenidos { get; set; }
        public virtual DbSet<Fecha> Fechas { get; set; }
        public virtual DbSet<Ficha> Fichas { get; set; }
        public virtual DbSet<Ficha2> Ficha2s { get; set; }
        public virtual DbSet<Ficha20> Ficha20s { get; set; }
        public virtual DbSet<FichaH> FichaHs { get; set; }
        public virtual DbSet<FichaHHasta20092> FichaHHasta20092s { get; set; }
        public virtual DbSet<FichaHasta20092> FichaHasta20092s { get; set; }
        public virtual DbSet<FichaMedicina> FichaMedicinas { get; set; }
        public virtual DbSet<FichaMigNono> FichaMigNonos { get; set; }
        public virtual DbSet<FichaMoodle> FichaMoodles { get; set; }
        public virtual DbSet<FilePersonal> FilePersonals { get; set; }
        public virtual DbSet<FilePersonalH> FilePersonalHs { get; set; }
        public virtual DbSet<Forum> Forums { get; set; }
        public virtual DbSet<ForumVisitum> ForumVisita { get; set; }
        public virtual DbSet<Foto> Fotos { get; set; }
        public virtual DbSet<FotoEclass> FotoEclasses { get; set; }
        public virtual DbSet<FotoH> FotoHs { get; set; }
        public virtual DbSet<FotoTemporal> FotoTemporals { get; set; }
        public virtual DbSet<Fotocheck> Fotochecks { get; set; }
        public virtual DbSet<Funcionario> Funcionarios { get; set; }
        public virtual DbSet<FuncionarioCarac> FuncionarioCaracs { get; set; }
        public virtual DbSet<FuncionarioWeb> FuncionarioWebs { get; set; }
        public virtual DbSet<FuncionarioWebActividade> FuncionarioWebActividades { get; set; }
        public virtual DbSet<FuncionarioWebActividadesH> FuncionarioWebActividadesHes { get; set; }
        public virtual DbSet<FuncionarioWebCarrera> FuncionarioWebCarreras { get; set; }
        public virtual DbSet<FuncionarioWebPermiso> FuncionarioWebPermisos { get; set; }
        public virtual DbSet<GradoAcademico> GradoAcademicos { get; set; }
        public virtual DbSet<Grupo> Grupos { get; set; }
        public virtual DbSet<GrupoMaterium> GrupoMateria { get; set; }
        public virtual DbSet<GrupoPersona> GrupoPersonas { get; set; }
        public virtual DbSet<Haccal00> Haccal00s { get; set; }
        public virtual DbSet<Halxcl00> Halxcl00s { get; set; }
        public virtual DbSet<Hartic00> Hartic00s { get; set; }
        public virtual DbSet<Havcuo01> Havcuo01s { get; set; }
        public virtual DbSet<Hbenef00> Hbenef00s { get; set; }
        public virtual DbSet<Hcacts00> Hcacts00s { get; set; }
        public virtual DbSet<Hcarcp00> Hcarcp00s { get; set; }
        public virtual DbSet<Hcenrp00> Hcenrp00s { get; set; }
        public virtual DbSet<Hclien00> Hclien00s { get; set; }
        public virtual DbSet<Hctact00> Hctact00s { get; set; }
        public virtual DbSet<Hctcaj00> Hctcaj00s { get; set; }
        public virtual DbSet<Hdccar00> Hdccar00s { get; set; }
        public virtual DbSet<Hdgfac00> Hdgfac00s { get; set; }
        public virtual DbSet<Hdgliq00> Hdgliq00s { get; set; }
        public virtual DbSet<Hdtcar00> Hdtcar00s { get; set; }
        public virtual DbSet<Hdtfac00> Hdtfac00s { get; set; }
        public virtual DbSet<Hdtliq00> Hdtliq00s { get; set; }
        public virtual DbSet<Henvba00> Henvba00s { get; set; }
        public virtual DbSet<Horario> Horarios { get; set; }
        public virtual DbSet<HorarioSesion> HorarioSesions { get; set; }
        public virtual DbSet<Importar> Importars { get; set; }
        public virtual DbSet<IndIndicador> IndIndicadors { get; set; }
        public virtual DbSet<IndIndxunidad> IndIndxunidads { get; set; }
        public virtual DbSet<IndOpcione> IndOpciones { get; set; }
        public virtual DbSet<IndSumIndicador> IndSumIndicadors { get; set; }
        public virtual DbSet<IndTcxperiodo> IndTcxperiodos { get; set; }
        public virtual DbSet<IndUnidNegocio> IndUnidNegocios { get; set; }
        public virtual DbSet<Indicacion> Indicacions { get; set; }
        public virtual DbSet<Indie> Indice { get; set; }
        public virtual DbSet<InformeSocioeconomico> InformeSocioeconomicos { get; set; }
        public virtual DbSet<InfosilAluCorreo> InfosilAluCorreos { get; set; }
        public virtual DbSet<InfosilUserLibre> InfosilUserLibres { get; set; }
        public virtual DbSet<Institucion> Institucions { get; set; }
        public virtual DbSet<InstitucionEducativa> InstitucionEducativas { get; set; }
        public virtual DbSet<InstitucionEducativaExtranjero> InstitucionEducativaExtranjeros { get; set; }
        public virtual DbSet<InstructivoArchivo> InstructivoArchivos { get; set; }
        public virtual DbSet<InvAlmacen> InvAlmacens { get; set; }
        public virtual DbSet<InvAlmacenH> InvAlmacenHs { get; set; }
        public virtual DbSet<InvEquipo> InvEquipos { get; set; }
        public virtual DbSet<InvEquipoAula> InvEquipoAulas { get; set; }
        public virtual DbSet<InvEquipoAulaH> InvEquipoAulaHs { get; set; }
        public virtual DbSet<InvEquipoH> InvEquipoHs { get; set; }
        public virtual DbSet<InvEquipoResponsable> InvEquipoResponsables { get; set; }
        public virtual DbSet<InvEquipoResponsableH> InvEquipoResponsableHs { get; set; }
        public virtual DbSet<InvEquipoSoftware> InvEquipoSoftwares { get; set; }
        public virtual DbSet<InvEquipoSoftwareH> InvEquipoSoftwareHs { get; set; }
        public virtual DbSet<InvParte> InvPartes { get; set; }
        public virtual DbSet<InvParteH> InvParteHs { get; set; }
        public virtual DbSet<InvParteResponsable> InvParteResponsables { get; set; }
        public virtual DbSet<InvParteResponsableH> InvParteResponsableHs { get; set; }
        public virtual DbSet<InvProvisional> InvProvisionals { get; set; }
        public virtual DbSet<InvTercero> InvTerceros { get; set; }
        public virtual DbSet<InvTerceroH> InvTerceroHs { get; set; }
        public virtual DbSet<IsEnvioAdmisionLetra> IsEnvioAdmisionLetras { get; set; }
        public virtual DbSet<Isi> Ises { get; set; }
        public virtual DbSet<ItemCsir> ItemCsirs { get; set; }
        public virtual DbSet<Juanf> Juanfs { get; set; }
        public virtual DbSet<Judakai> Judakais { get; set; }
        public virtual DbSet<Junior> Juniors { get; set; }
        public virtual DbSet<KinePasantium> KinePasantia { get; set; }
        public virtual DbSet<LectoraC> LectoraCs { get; set; }
        public virtual DbSet<LectoraD> LectoraDs { get; set; }
        public virtual DbSet<LectoraT> LectoraTs { get; set; }
        public virtual DbSet<LhNotahist> LhNotahists { get; set; }
        public virtual DbSet<Libreria> Librerias { get; set; }
        public virtual DbSet<Librerium> Libreria { get; set; }
        public virtual DbSet<LibroReclamoWeb> LibroReclamoWebs { get; set; }
        public virtual DbSet<LibroRecomendadoDocente> LibroRecomendadoDocentes { get; set; }
        public virtual DbSet<LiveEdu> LiveEdus { get; set; }
        public virtual DbSet<Local> Locals { get; set; }
        public virtual DbSet<LogEnviarAviso> LogEnviarAvisos { get; set; }
        public virtual DbSet<LogEnviarCorreo> LogEnviarCorreos { get; set; }
        public virtual DbSet<LogEnviarCorreoUnidum> LogEnviarCorreoUnida { get; set; }
        public virtual DbSet<LogFichado> LogFichados { get; set; }
        public virtual DbSet<LogImpresione> LogImpresiones { get; set; }
        public virtual DbSet<LoginRegistroApp> LoginRegistroApps { get; set; }
        public virtual DbSet<Ly22Aluno> Ly22Alunos { get; set; }
        public virtual DbSet<Ly2Aluno> Ly2Alunos { get; set; }
        public virtual DbSet<Ly2Curso> Ly2Cursos { get; set; }
        public virtual DbSet<Ly2Disciplina> Ly2Disciplinas { get; set; }
        public virtual DbSet<Ly2Docente1> Ly2Docentes1 { get; set; }
        public virtual DbSet<Ly2Grade> Ly2Grades { get; set; }
        public virtual DbSet<Ly2Hismat> Ly2Hismats { get; set; }
        public virtual DbSet<Ly2Hismat0909> Ly2Hismat0909s { get; set; }
        public virtual DbSet<Ly2Hismat9> Ly2Hismat9s { get; set; }
        public virtual DbSet<Ly2HorAula> Ly2HorAulas { get; set; }
        public virtual DbSet<Ly2Mat> Ly2Mats { get; set; }
        public virtual DbSet<Ly2Notahist> Ly2Notahists { get; set; }
        public virtual DbSet<Ly2Notahist0909> Ly2Notahist0909s { get; set; }
        public virtual DbSet<Ly2Notum> Ly2Nota { get; set; }
        public virtual DbSet<Ly2Pessoa> Ly2Pessoas { get; set; }
        public virtual DbSet<Ly2Turma> Ly2Turmas { get; set; }
        public virtual DbSet<Ly2docente> Ly2docentes { get; set; }
        public virtual DbSet<Ly3Hismat> Ly3Hismats { get; set; }
        public virtual DbSet<Ly3Notahist> Ly3Notahists { get; set; }
        public virtual DbSet<LyAluno> LyAlunos { get; set; }
        public virtual DbSet<LyAlunoNoAp> LyAlunoNoAps { get; set; }
        public virtual DbSet<LyDisciplina> LyDisciplinas { get; set; }
        public virtual DbSet<LyDocente> LyDocentes { get; set; }
        public virtual DbSet<LyFaltaHistmatr> LyFaltaHistmatrs { get; set; }
        public virtual DbSet<LyFaltum> LyFalta { get; set; }
        public virtual DbSet<LyGrade> LyGrades { get; set; }
        public virtual DbSet<LyHismat> LyHismats { get; set; }
        public virtual DbSet<LyHorAula> LyHorAulas { get; set; }
        public virtual DbSet<LyMat> LyMats { get; set; }
        public virtual DbSet<LyNotahist> LyNotahists { get; set; }
        public virtual DbSet<LyNotum> LyNota { get; set; }
        public virtual DbSet<LyTurma> LyTurmas { get; set; }
        public virtual DbSet<LyTurmaNadie> LyTurmaNadice { get; set; }
        public virtual DbSet<LyhHismat> LyhHismats { get; set; }
        public virtual DbSet<ManualArchivo> ManualArchivos { get; set; }
        public virtual DbSet<ManualControl> ManualControls { get; set; }
        public virtual DbSet<Marca2> Marca2s { get; set; }
        public virtual DbSet<Marcacione> Marcaciones { get; set; }
        public virtual DbSet<Marcaciones2> Marcaciones2s { get; set; }
        public virtual DbSet<Marcacionesfoto> Marcacionesfotos { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<MaterialDtipoTarea> MaterialDtipoTareas { get; set; }
        public virtual DbSet<MaterialH> MaterialHs { get; set; }
        public virtual DbSet<MateriasHorario> MateriasHorarios { get; set; }
        public virtual DbSet<Materium> Materia { get; set; }
        public virtual DbSet<Matricula> Matriculas { get; set; }
        public virtual DbSet<MatriculaAlumnoCurpend> MatriculaAlumnoCurpends { get; set; }
        public virtual DbSet<MatriculaAlumnoCurpend1> MatriculaAlumnoCurpend1s { get; set; }
        public virtual DbSet<MatriculaAlumnoTurno> MatriculaAlumnoTurnos { get; set; }
        public virtual DbSet<MatriculaCalculo> MatriculaCalculos { get; set; }
        public virtual DbSet<MatriculaControl> MatriculaControls { get; set; }
        public virtual DbSet<MatriculaCurso> MatriculaCursos { get; set; }
        public virtual DbSet<MatriculaCursoH> MatriculaCursoHs { get; set; }
        public virtual DbSet<MatriculaCursoValidum> MatriculaCursoValida { get; set; }
        public virtual DbSet<Mdbcarrera> Mdbcarreras { get; set; }
        public virtual DbSet<Mdbcarrera0> Mdbcarrera0s { get; set; }
        public virtual DbSet<Medicina> Medicinas { get; set; }
        public virtual DbSet<MenuAcreditacion> MenuAcreditacions { get; set; }
        public virtual DbSet<MigrationHistory> MigrationHistories { get; set; }
        public virtual DbSet<Miguel01> Miguel01s { get; set; }
        public virtual DbSet<Miguel03> Miguel03s { get; set; }
        public virtual DbSet<Mlgoperadoresinf> Mlgoperadoresinfs { get; set; }
        public virtual DbSet<Mlgpvotante> Mlgpvotantes { get; set; }
        public virtual DbSet<Modalidad> Modalidads { get; set; }
        public virtual DbSet<Modulo> Modulos { get; set; }
        public virtual DbSet<Monedum> Moneda { get; set; }
        public virtual DbSet<Motivo> Motivos { get; set; }
        public virtual DbSet<Mtraba01> Mtraba01s { get; set; }
        public virtual DbSet<NotaC> NotaCs { get; set; }
        public virtual DbSet<NotaC25102010> NotaC25102010s { get; set; }
        public virtual DbSet<NotaC3> NotaC3s { get; set; }
        public virtual DbSet<NotaC3mig> NotaC3migs { get; set; }
        public virtual DbSet<NotaCH> NotaCHes { get; set; }
        public virtual DbSet<NotaCMedicina> NotaCMedicinas { get; set; }
        public virtual DbSet<NotaCMig> NotaCMigs { get; set; }
        public virtual DbSet<NotaCMig0909> NotaCMig0909s { get; set; }
        public virtual DbSet<NotaCMig09099> NotaCMig09099s { get; set; }
        public virtual DbSet<NotaCMig09099dif> NotaCMig09099difs { get; set; }
        public virtual DbSet<NotaCMig09099difReup> NotaCMig09099difReups { get; set; }
        public virtual DbSet<NotaCMig9> NotaCMig9s { get; set; }
        public virtual DbSet<NotaCMigV0> NotaCMigV0s { get; set; }
        public virtual DbSet<NotaCredeb> NotaCredebs { get; set; }
        public virtual DbSet<NotaCredebD> NotaCredebDs { get; set; }
        public virtual DbSet<NotaCredebTipo> NotaCredebTipos { get; set; }
        public virtual DbSet<NotaD> NotaDs { get; set; }
        public virtual DbSet<NotaD2> NotaD2s { get; set; }
        public virtual DbSet<NotaD3mig> NotaD3migs { get; set; }
        public virtual DbSet<NotaDAutorizacion> NotaDAutorizacions { get; set; }
        public virtual DbSet<NotaDH> NotaDHs { get; set; }
        public virtual DbSet<NotaDMig> NotaDMigs { get; set; }
        public virtual DbSet<NotaDMig0909> NotaDMig0909s { get; set; }
        public virtual DbSet<NotaDMig09099> NotaDMig09099s { get; set; }
        public virtual DbSet<NotaDMig09099dif> NotaDMig09099difs { get; set; }
        public virtual DbSet<NotaDMig09099difReup> NotaDMig09099difReups { get; set; }
        public virtual DbSet<NotaDMig9> NotaDMig9s { get; set; }
        public virtual DbSet<NotasPasantiaEnf20102> NotasPasantiaEnf20102s { get; set; }
        public virtual DbSet<Numerador> Numeradors { get; set; }
        public virtual DbSet<Objeto> Objetos { get; set; }
        public virtual DbSet<ObjetoH> ObjetoHs { get; set; }
        public virtual DbSet<OldPersonaControlDatos2030306> OldPersonaControlDatos2030306s { get; set; }
        public virtual DbSet<Opcione> Opciones { get; set; }
        public virtual DbSet<OsilFicha> OsilFichas { get; set; }
        public virtual DbSet<Pabellon> Pabellons { get; set; }
        public virtual DbSet<Paciente> Pacientes { get; set; }
        public virtual DbSet<PacmanResultado> PacmanResultados { get; set; }
        public virtual DbSet<Padron> Padrons { get; set; }
        public virtual DbSet<Pagina> Paginas { get; set; }
        public virtual DbSet<PagoExterno> PagoExternos { get; set; }
        public virtual DbSet<Pariente> Parientes { get; set; }
        public virtual DbSet<ParticipacionEstudiante> ParticipacionEstudiantes { get; set; }
        public virtual DbSet<Participante> Participantes { get; set; }
        public virtual DbSet<Pasis2> Pasis2s { get; set; }
        public virtual DbSet<Paul> Pauls { get; set; }
        public virtual DbSet<PaulCasos20092> PaulCasos20092s { get; set; }
        public virtual DbSet<PaulCasos20101> PaulCasos20101s { get; set; }
        public virtual DbSet<Pbcatcol> Pbcatcols { get; set; }
        public virtual DbSet<Pbcatedt> Pbcatedts { get; set; }
        public virtual DbSet<Pbcatfmt> Pbcatfmts { get; set; }
        public virtual DbSet<Pbcattbl> Pbcattbls { get; set; }
        public virtual DbSet<Pbcatvld> Pbcatvlds { get; set; }
        public virtual DbSet<Perfil> Perfils { get; set; }
        public virtual DbSet<PerfilProfesor> PerfilProfesors { get; set; }
        public virtual DbSet<PerfilSeguridad> PerfilSeguridads { get; set; }
        public virtual DbSet<Periodo> Periodos { get; set; }
        public virtual DbSet<PeriodoBimestre> PeriodoBimestres { get; set; }
        public virtual DbSet<PeriodoBimestreH> PeriodoBimestreHs { get; set; }
        public virtual DbSet<PeriodoCarreraAsistencium> PeriodoCarreraAsistencia { get; set; }
        public virtual DbSet<PeriodoCarreraParametro> PeriodoCarreraParametros { get; set; }
        public virtual DbSet<PeriodoCurriculaH> PeriodoCurriculaHs { get; set; }
        public virtual DbSet<PeriodoCurriculum> PeriodoCurricula { get; set; }
        public virtual DbSet<PeriodoH> PeriodoHs { get; set; }
        public virtual DbSet<PeriodoParametro> PeriodoParametros { get; set; }
        public virtual DbSet<PeriodoParametroH> PeriodoParametroHs { get; set; }
        public virtual DbSet<PeriodoRangosTipoNotum> PeriodoRangosTipoNota { get; set; }
        public virtual DbSet<Permiso> Permisos { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<Persona2> Persona2s { get; set; }
        public virtual DbSet<Persona20082010> Persona20082010s { get; set; }
        public virtual DbSet<Persona212012012> Persona212012012s { get; set; }
        public virtual DbSet<PersonaActDato> PersonaActDatos { get; set; }
        public virtual DbSet<PersonaActividadC> PersonaActividadCs { get; set; }
        public virtual DbSet<PersonaActividadCH> PersonaActividadCHes { get; set; }
        public virtual DbSet<PersonaActividadD> PersonaActividadDs { get; set; }
        public virtual DbSet<PersonaActividadDH> PersonaActividadDHs { get; set; }
        public virtual DbSet<PersonaActualizacion> PersonaActualizacions { get; set; }
        public virtual DbSet<PersonaAfin> PersonaAfins { get; set; }
        public virtual DbSet<PersonaArea> PersonaAreas { get; set; }
        public virtual DbSet<PersonaCargo> PersonaCargos { get; set; }
        public virtual DbSet<PersonaCongreso> PersonaCongresos { get; set; }
        public virtual DbSet<PersonaControlDatos2> PersonaControlDatos2s { get; set; }
        public virtual DbSet<PersonaCv> PersonaCvs { get; set; }
        public virtual DbSet<PersonaDatoAcademico> PersonaDatoAcademicos { get; set; }
        public virtual DbSet<PersonaDatoAcademicoPeriodo> PersonaDatoAcademicoPeriodos { get; set; }
        public virtual DbSet<PersonaExperiencium> PersonaExperiencia { get; set; }
        public virtual DbSet<PersonaFamilium> PersonaFamilia { get; set; }
        public virtual DbSet<PersonaFormacion> PersonaFormacions { get; set; }
        public virtual DbSet<PersonaH> PersonaHs { get; set; }
        public virtual DbSet<PersonaIdioma> PersonaIdiomas { get; set; }
        public virtual DbSet<PersonaInvestigacion> PersonaInvestigacions { get; set; }
        public virtual DbSet<PersonaMencion> PersonaMencions { get; set; }
        public virtual DbSet<PersonaMig> PersonaMigs { get; set; }
        public virtual DbSet<PersonaPosgrado> PersonaPosgrados { get; set; }
        public virtual DbSet<PersonaPublicacion> PersonaPublicacions { get; set; }
        public virtual DbSet<PersonaRestringidum> PersonaRestringida { get; set; }
        public virtual DbSet<PersonaTesi> PersonaTeses { get; set; }
        public virtual DbSet<PersonaTitulo> PersonaTitulos { get; set; }
        public virtual DbSet<PersonaTrabajo> PersonaTrabajos { get; set; }
        public virtual DbSet<Personal> Personals { get; set; }
        public virtual DbSet<PfMedicina> PfMedicinas { get; set; }
        public virtual DbSet<PlanillaDetalle> PlanillaDetalles { get; set; }
        public virtual DbSet<PlanillaDetalleAsuVerano> PlanillaDetalleAsuVeranos { get; set; }
        public virtual DbSet<PlanillaDetalleCde> PlanillaDetalleCdes { get; set; }
        public virtual DbSet<PlanillaDetalleIngresoEgreso> PlanillaDetalleIngresoEgresos { get; set; }
        public virtual DbSet<PlanillaDetalleIngresoEgresoTemp> PlanillaDetalleIngresoEgresoTemps { get; set; }
        public virtual DbSet<PlanillaDetalleTemp> PlanillaDetalleTemps { get; set; }
        public virtual DbSet<PlanillaEquivale> PlanillaEquivales { get; set; }
        public virtual DbSet<PlanillaPeriodo> PlanillaPeriodos { get; set; }
        public virtual DbSet<PlanillaResuman> PlanillaResumen { get; set; }
        public virtual DbSet<PlanillaTexto> PlanillaTextos { get; set; }
        public virtual DbSet<Plima> Plimas { get; set; }
        public virtual DbSet<Postulante> Postulantes { get; set; }
        public virtual DbSet<PostulanteCarrera> PostulanteCarreras { get; set; }
        public virtual DbSet<PostulanteDoc> PostulanteDocs { get; set; }
        public virtual DbSet<PostulanteDocH> PostulanteDocHes { get; set; }
        public virtual DbSet<PostulanteEncuestaH> PostulanteEncuestaHs { get; set; }
        public virtual DbSet<PostulanteEncuestum> PostulanteEncuesta { get; set; }
        public virtual DbSet<PostulanteH> PostulanteHs { get; set; }
        public virtual DbSet<PreConvalidacionC> PreConvalidacionCs { get; set; }
        public virtual DbSet<PreConvalidacionD> PreConvalidacionDs { get; set; }
        public virtual DbSet<PrecioCategorium> PrecioCategoria { get; set; }
        public virtual DbSet<PreinscipcionFutbol> PreinscipcionFutbols { get; set; }
        public virtual DbSet<Prerequisito> Prerequisitos { get; set; }
        public virtual DbSet<PrerequisitoA> PrerequisitoAs { get; set; }
        public virtual DbSet<PrerequisitoH> PrerequisitoHs { get; set; }
        public virtual DbSet<PrerequisitoOld> PrerequisitoOlds { get; set; }
        public virtual DbSet<Presupuesto> Presupuestos { get; set; }
        public virtual DbSet<PresupuestoPosgrado> PresupuestoPosgrados { get; set; }
        public virtual DbSet<Prioridad> Prioridads { get; set; }
        public virtual DbSet<Proceso> Procesos { get; set; }
        public virtual DbSet<ProcesoDiario> ProcesoDiarios { get; set; }
        public virtual DbSet<ProcesoPeriodo> ProcesoPeriodos { get; set; }
        public virtual DbSet<ProcesoPeriodoLog> ProcesoPeriodoLogs { get; set; }
        public virtual DbSet<ProfAsistDistribucion> ProfAsistDistribucions { get; set; }
        public virtual DbSet<ProfExcepcione> ProfExcepciones { get; set; }
        public virtual DbSet<ProfPlanillaSalarioPost> ProfPlanillaSalarioPosts { get; set; }
        public virtual DbSet<ProfPlanillaSalarioPre> ProfPlanillaSalarioPres { get; set; }
        public virtual DbSet<ProfPlanillaSalarioTesi> ProfPlanillaSalarioTeses { get; set; }
        public virtual DbSet<ProfPlanillaSalarioVirt> ProfPlanillaSalarioVirts { get; set; }
        public virtual DbSet<Profesor> Profesors { get; set; }
        public virtual DbSet<ProfesorAsist> ProfesorAsists { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121119> ProfesorAsistBorrado20121119s { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121120> ProfesorAsistBorrado20121120s { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121121> ProfesorAsistBorrado20121121s { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121122> ProfesorAsistBorrado20121122s { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121123> ProfesorAsistBorrado20121123s { get; set; }
        public virtual DbSet<ProfesorAsistBorrado20121124> ProfesorAsistBorrado20121124s { get; set; }
        public virtual DbSet<ProfesorAsistD> ProfesorAsistDs { get; set; }
        public virtual DbSet<ProfesorAsistDH> ProfesorAsistDHs { get; set; }
        public virtual DbSet<ProfesorAsistH> ProfesorAsistHs { get; set; }
        public virtual DbSet<ProfesorAsistManual> ProfesorAsistManuals { get; set; }
        public virtual DbSet<ProfesorAsistManualVirtual> ProfesorAsistManualVirtuals { get; set; }
        public virtual DbSet<ProfesorAsistMayor27062010> ProfesorAsistMayor27062010s { get; set; }
        public virtual DbSet<ProfesorAviso> ProfesorAvisos { get; set; }
        public virtual DbSet<ProfesorContenido> ProfesorContenidos { get; set; }
        public virtual DbSet<ProfesorContenidoActividad> ProfesorContenidoActividads { get; set; }
        public virtual DbSet<ProfesorContenidoEstrategia> ProfesorContenidoEstrategias { get; set; }
        public virtual DbSet<ProfesorContenidoH> ProfesorContenidoHs { get; set; }
        public virtual DbSet<ProfesorContenidoTipoClase> ProfesorContenidoTipoClases { get; set; }
        public virtual DbSet<ProfesorCurso> ProfesorCursos { get; set; }
        public virtual DbSet<ProfesorCursoPrecio> ProfesorCursoPrecios { get; set; }
        public virtual DbSet<ProfesorDisp> ProfesorDisps { get; set; }
        public virtual DbSet<ProfesorEntregaNotum> ProfesorEntregaNota { get; set; }
        public virtual DbSet<ProfesorH> ProfesorHs { get; set; }
        public virtual DbSet<ProfesorIngresoEgreso> ProfesorIngresoEgresos { get; set; }
        public virtual DbSet<ProfesorTema> ProfesorTemas { get; set; }
        public virtual DbSet<ProfesorTipoPlanilla> ProfesorTipoPlanillas { get; set; }
        public virtual DbSet<ProfesorVirtual> ProfesorVirtuals { get; set; }
        public virtual DbSet<Programa> Programas { get; set; }
        public virtual DbSet<ProgramaEducativo> ProgramaEducativos { get; set; }
        public virtual DbSet<ProgramaPension> ProgramaPensions { get; set; }
        public virtual DbSet<PromFinalCsir> PromFinalCsirs { get; set; }
        public virtual DbSet<Promotor> Promotors { get; set; }
        public virtual DbSet<PropiedadEdicion> PropiedadEdicions { get; set; }
        public virtual DbSet<Rango> Rangos { get; set; }
        public virtual DbSet<RangoH> RangoHs { get; set; }
        public virtual DbSet<RegistroEntradaApp> RegistroEntradaApps { get; set; }
        public virtual DbSet<RegistroEntradum> RegistroEntrada { get; set; }
        public virtual DbSet<RegistroFuncionario> RegistroFuncionarios { get; set; }
        public virtual DbSet<RendimientoApp> RendimientoApps { get; set; }
        public virtual DbSet<ReqDpto> ReqDptos { get; set; }
        public virtual DbSet<Requerimiento> Requerimientos { get; set; }
        public virtual DbSet<Requerimiento1> Requerimientos1 { get; set; }
        public virtual DbSet<RequerimientoArea> RequerimientoAreas { get; set; }
        public virtual DbSet<RequerimientoAreaUsuario> RequerimientoAreaUsuarios { get; set; }
        public virtual DbSet<RequerimientoFlujo> RequerimientoFlujos { get; set; }
        public virtual DbSet<RequerimientoFlujoH> RequerimientoFlujoHs { get; set; }
        public virtual DbSet<RequerimientoH> RequerimientoHs { get; set; }
        public virtual DbSet<RequerimientoTipo> RequerimientoTipos { get; set; }
        public virtual DbSet<ReservaEquipo> ReservaEquipos { get; set; }
        public virtual DbSet<Resolucion> Resolucions { get; set; }
        public virtual DbSet<ResolucionArchivo> ResolucionArchivos { get; set; }
        public virtual DbSet<ResolucionH> ResolucionHs { get; set; }
        public virtual DbSet<RetroalimentacionCoordinadorDocente> RetroalimentacionCoordinadorDocentes { get; set; }
        public virtual DbSet<RevisaFicha> RevisaFichas { get; set; }
        public virtual DbSet<RobotFicha> RobotFichas { get; set; }
        public virtual DbSet<Sbenef00> Sbenef00s { get; set; }
        public virtual DbSet<Scarrera00> Scarrera00s { get; set; }
        public virtual DbSet<SeccionEvaluacion> SeccionEvaluacions { get; set; }
        public virtual DbSet<SeguimientoAlumno> SeguimientoAlumnos { get; set; }
        public virtual DbSet<SeguimientoAlumnoMatriculado> SeguimientoAlumnoMatriculados { get; set; }
        public virtual DbSet<SerieCelularesLima> SerieCelularesLimas { get; set; }
        public virtual DbSet<ServiciosUnidum> ServiciosUnida { get; set; }
        public virtual DbSet<ServisilAlertum> ServisilAlerta { get; set; }
        public virtual DbSet<ServisilArea> ServisilAreas { get; set; }
        public virtual DbSet<ServisilCola> ServisilColas { get; set; }
        public virtual DbSet<ServisilCola2> ServisilCola2s { get; set; }
        public virtual DbSet<ServisilMensaje> ServisilMensajes { get; set; }
        public virtual DbSet<ServisilMenuPersona> ServisilMenuPersonas { get; set; }
        public virtual DbSet<ServisilModulo> ServisilModulos { get; set; }
        public virtual DbSet<ServisilParametro> ServisilParametros { get; set; }
        public virtual DbSet<ServisilPermiso> ServisilPermisos { get; set; }
        public virtual DbSet<ServisilTipoMenu> ServisilTipoMenus { get; set; }
        public virtual DbSet<SigIndex> SigIndices { get; set; }
        public virtual DbSet<SigOpcionAutor> SigOpcionAutors { get; set; }
        public virtual DbSet<SigOpciones2> SigOpciones2s { get; set; }
        public virtual DbSet<SigOpcionesProg> SigOpcionesProgs { get; set; }
        public virtual DbSet<SigValoresIndex> SigValoresIndices { get; set; }
        public virtual DbSet<SistemaConfiguracion> SistemaConfiguracions { get; set; }
        public virtual DbSet<Software> Softwares { get; set; }
        public virtual DbSet<SpuControl> SpuControls { get; set; }
        public virtual DbSet<SpuControlParametro> SpuControlParametros { get; set; }
        public virtual DbSet<SpuControlPersonal> SpuControlPersonals { get; set; }
        public virtual DbSet<Spuclaves01> Spuclaves01s { get; set; }
        public virtual DbSet<StadMatriculaEvol> StadMatriculaEvols { get; set; }
        public virtual DbSet<Subperiodo> Subperiodos { get; set; }
        public virtual DbSet<SumAlumnoXEgresar> SumAlumnoXEgresars { get; set; }
        public virtual DbSet<SumAlumnoXEgresar2> SumAlumnoXEgresar2s { get; set; }
        public virtual DbSet<SumAutorizaMatri> SumAutorizaMatris { get; set; }
        public virtual DbSet<SumAvanceMatricula> SumAvanceMatriculas { get; set; }
        public virtual DbSet<SumAvanceMatriculaD> SumAvanceMatriculaDs { get; set; }
        public virtual DbSet<SumAvanceMatriculaH> SumAvanceMatriculaHs { get; set; }
        public virtual DbSet<SumControlCuotasC> SumControlCuotasCs { get; set; }
        public virtual DbSet<SumControlCuotasD> SumControlCuotasDs { get; set; }
        public virtual DbSet<SumEscalaDeudor> SumEscalaDeudors { get; set; }
        public virtual DbSet<SumEvolucion> SumEvolucions { get; set; }
        public virtual DbSet<SumEvolucionProg> SumEvolucionProgs { get; set; }
        public virtual DbSet<SumFactualizacion> SumFactualizacions { get; set; }
        public virtual DbSet<SumIngresantesC> SumIngresantesCs { get; set; }
        public virtual DbSet<SumIngresantesD> SumIngresantesDs { get; set; }
        public virtual DbSet<SumMonitoreoD> SumMonitoreoDs { get; set; }
        public virtual DbSet<SumPagosAlumno> SumPagosAlumnos { get; set; }
        public virtual DbSet<SumRecordAlumno> SumRecordAlumnos { get; set; }
        public virtual DbSet<SumRecordSinCurri> SumRecordSinCurris { get; set; }
        public virtual DbSet<SumRendimientoDeudum> SumRendimientoDeuda { get; set; }
        public virtual DbSet<SumRetiro> SumRetiros { get; set; }
        public virtual DbSet<SumRetirosAnual> SumRetirosAnuals { get; set; }
        public virtual DbSet<SumSeguimAlu> SumSeguimAlus { get; set; }
        public virtual DbSet<SumSeguimDet> SumSeguimDets { get; set; }
        public virtual DbSet<SumSeguimiento> SumSeguimientos { get; set; }
        public virtual DbSet<SumTricaDesertor> SumTricaDesertors { get; set; }
        public virtual DbSet<SumTricaExpulsado> SumTricaExpulsados { get; set; }
        public virtual DbSet<SumTricaExpulsadoD> SumTricaExpulsadoDs { get; set; }
        public virtual DbSet<SumTricaRecuperado> SumTricaRecuperados { get; set; }
        public virtual DbSet<SyAction> SyActions { get; set; }
        public virtual DbSet<SyCompany> SyCompanies { get; set; }
        public virtual DbSet<SyCountry> SyCountries { get; set; }
        public virtual DbSet<SyCurrency> SyCurrencies { get; set; }
        public virtual DbSet<SyDependence> SyDependences { get; set; }
        public virtual DbSet<SyDependenceArea> SyDependenceAreas { get; set; }
        public virtual DbSet<SyDependenceSub> SyDependenceSubs { get; set; }
        public virtual DbSet<SyLog> SyLogs { get; set; }
        public virtual DbSet<SyOption> SyOptions { get; set; }
        public virtual DbSet<SyOptionAction> SyOptionActions { get; set; }
        public virtual DbSet<SyProfile> SyProfiles { get; set; }
        public virtual DbSet<SyProfileOptionAction> SyProfileOptionActions { get; set; }
        public virtual DbSet<SyUser> SyUsers { get; set; }
        public virtual DbSet<SyUserHistorical> SyUserHistoricals { get; set; }
        public virtual DbSet<SyUserProfile> SyUserProfiles { get; set; }
        public virtual DbSet<Sysconstraint> Sysconstraints { get; set; }
        public virtual DbSet<Syssegment> Syssegments { get; set; }
        public virtual DbSet<T1> T1s { get; set; }
        public virtual DbSet<T100Ap> T100Aps { get; set; }
        public virtual DbSet<T10Car> T10Cars { get; set; }
        public virtual DbSet<T140Ap> T140Aps { get; set; }
        public virtual DbSet<T2> T2s { get; set; }
        public virtual DbSet<T2004100070> T2004100070s { get; set; }
        public virtual DbSet<T20081204Ap03> T20081204Ap03s { get; set; }
        public virtual DbSet<T20081204Bo03> T20081204Bo03s { get; set; }
        public virtual DbSet<T20081204Boc03> T20081204Boc03s { get; set; }
        public virtual DbSet<T20081204Bom03> T20081204Bom03s { get; set; }
        public virtual DbSet<T2ap> T2aps { get; set; }
        public virtual DbSet<T2apNoExAp> T2apNoExAps { get; set; }
        public virtual DbSet<T2apcam> T2apcams { get; set; }
        public virtual DbSet<T2apcamApl> T2apcamApls { get; set; }
        public virtual DbSet<T2bc> T2bcs { get; set; }
        public virtual DbSet<T2blA> T2blAs { get; set; }
        public virtual DbSet<T2bloqueSiglaCar> T2bloqueSiglaCars { get; set; }
        public virtual DbSet<T2bloqueSiglaCarEq> T2bloqueSiglaCarEqs { get; set; }
        public virtual DbSet<T2bsB> T2bsBs { get; set; }
        public virtual DbSet<T2bsS> T2bsSes { get; set; }
        public virtual DbSet<T2bsS2> T2bsS2s { get; set; }
        public virtual DbSet<T2fic> T2fics { get; set; }
        public virtual DbSet<T2fiex> T2fiices { get; set; }
        public virtual DbSet<T2insap> T2insaps { get; set; }
        public virtual DbSet<T2mialuequi> T2mialuequis { get; set; }
        public virtual DbSet<T2migraAluCalu> T2migraAluCalus { get; set; }
        public virtual DbSet<T2ncA> T2ncAs { get; set; }
        public virtual DbSet<T2ndum> T2ndAs { get; set; }
        public virtual DbSet<T2pc> T2pcs { get; set; }
        public virtual DbSet<T2pcca> T2pccas { get; set; }
        public virtual DbSet<T2persoUni> T2persoUnis { get; set; }
        public virtual DbSet<T2prono> T2pronos { get; set; }
        public virtual DbSet<T50Ap> T50Aps { get; set; }
        public virtual DbSet<T60Ap> T60Aps { get; set; }
        public virtual DbSet<T90Ap> T90Aps { get; set; }
        public virtual DbSet<TA090319> TA090319s { get; set; }
        public virtual DbSet<TA090320T> TA090320Ts { get; set; }
        public virtual DbSet<TANoAp> TANoAps { get; set; }
        public virtual DbSet<TAc> TAcs { get; set; }
        public virtual DbSet<TAc2> TAc2s { get; set; }
        public virtual DbSet<TAcue> TAcues { get; set; }
        public virtual DbSet<TAcueAp1> TAcueAp1s { get; set; }
        public virtual DbSet<TAcueAp1Up> TAcueAp1Ups { get; set; }
        public virtual DbSet<TAcueAp1minsec> TAcueAp1minsecs { get; set; }
        public virtual DbSet<TAcueAp2Up> TAcueAp2Ups { get; set; }
        public virtual DbSet<TAcueBcc> TAcueBccs { get; set; }
        public virtual DbSet<TAcueFir> TAcueFirs { get; set; }
        public virtual DbSet<TAcueNoExpe> TAcueNoExpes { get; set; }
        public virtual DbSet<TAcuePO> TAcuePOs { get; set; }
        public virtual DbSet<TAdmision> TAdmisions { get; set; }
        public virtual DbSet<TAdo> TAdos { get; set; }
        public virtual DbSet<TAl> TAls { get; set; }
        public virtual DbSet<TAl1> TAl1s { get; set; }
        public virtual DbSet<TAlco> TAlcos { get; set; }
        public virtual DbSet<TAlterado1> TAlterado1s { get; set; }
        public virtual DbSet<TAlterado2> TAlterado2s { get; set; }
        public virtual DbSet<TAlterado4> TAlterado4s { get; set; }
        public virtual DbSet<TAlumnoT> TAlumnoTs { get; set; }
        public virtual DbSet<TAna> TAnas { get; set; }
        public virtual DbSet<TAp> TAps { get; set; }
        public virtual DbSet<TAp1> TAp1s { get; set; }
        public virtual DbSet<TAp10> TAp10s { get; set; }
        public virtual DbSet<TAp11> TAp11s { get; set; }
        public virtual DbSet<TAp2> TAp2s { get; set; }
        public virtual DbSet<TAp3> TAp3s { get; set; }
        public virtual DbSet<TApCu> TApCus { get; set; }
        public virtual DbSet<TApNacu2808> TApNacu2808s { get; set; }
        public virtual DbSet<TApPAcuCro> TApPAcuCros { get; set; }
        public virtual DbSet<TApPCro> TApPCros { get; set; }
        public virtual DbSet<TApPpo> TApPpos { get; set; }
        public virtual DbSet<TApPpos2> TApPpos2s { get; set; }
        public virtual DbSet<TApPpos3> TApPpos3s { get; set; }
        public virtual DbSet<TApR5> TApR5s { get; set; }
        public virtual DbSet<TApad> TApads { get; set; }
        public virtual DbSet<TApagr> TApagrs { get; set; }
        public virtual DbSet<TApePat> TApePats { get; set; }
        public virtual DbSet<TApePatFila> TApePatFilas { get; set; }
        public virtual DbSet<TApf> TApfs { get; set; }
        public virtual DbSet<TApo> TApos { get; set; }
        public virtual DbSet<TAsi2> TAsi2s { get; set; }
        public virtual DbSet<TAsicu> TAsicus { get; set; }
        public virtual DbSet<TB> TBs { get; set; }
        public virtual DbSet<TB1> TBs1 { get; set; }
        public virtual DbSet<TB2> TB2s { get; set; }
        public virtual DbSet<TBF> TBFs { get; set; }
        public virtual DbSet<TBFU> TBFUs { get; set; }
        public virtual DbSet<TBb> TBbs { get; set; }
        public virtual DbSet<TBc> TBcs { get; set; }
        public virtual DbSet<TBkEe> TBkEes { get; set; }
        public virtual DbSet<TBkEe1> TBkEes1 { get; set; }
        public virtual DbSet<TBkPo> TBkPos { get; set; }
        public virtual DbSet<TBlA> TBlAs { get; set; }
        public virtual DbSet<TBlAh> TBlAhs { get; set; }
        public virtual DbSet<TBlaEq> TBlaEqs { get; set; }
        public virtual DbSet<TBlahNop> TBlahNops { get; set; }
        public virtual DbSet<TBloqueCursoRegistroEv> TBloqueCursoRegistroEvs { get; set; }
        public virtual DbSet<TBloqueSiglaCar> TBloqueSiglaCars { get; set; }
        public virtual DbSet<TBloqueSiglaCarEq> TBloqueSiglaCarEqs { get; set; }
        public virtual DbSet<TBloqueSiglaCarEqh> TBloqueSiglaCarEqhs { get; set; }
        public virtual DbSet<TBloqueSiglaCarHsi> TBloqueSiglaCarHsis { get; set; }
        public virtual DbSet<TBloqueSiglaCarh> TBloqueSiglaCarhs { get; set; }
        public virtual DbSet<TBob> TBobs { get; set; }
        public virtual DbSet<TBobRep> TBobReps { get; set; }
        public virtual DbSet<TBsS> TBsSes { get; set; }
        public virtual DbSet<TBsS2> TBsS2s { get; set; }
        public virtual DbSet<TBsp> TBsp { get; set; }
        public virtual DbSet<TCalu> TCalus { get; set; }
        public virtual DbSet<TCara> TCaras { get; set; }
        public virtual DbSet<TCarrera> TCarreras { get; set; }
        public virtual DbSet<TCb130> TCb130s { get; set; }
        public virtual DbSet<TCfMaxOrno> TCfMaxOrnos { get; set; }
        public virtual DbSet<TCfT> TCfTs { get; set; }
        public virtual DbSet<TCin> TCins { get; set; }
        public virtual DbSet<TCin2> TCin2s { get; set; }
        public virtual DbSet<TCla> TClas { get; set; }
        public virtual DbSet<TCla1> TClas1 { get; set; }
        public virtual DbSet<TClas2> TClas2s { get; set; }
        public virtual DbSet<TCom> TComs { get; set; }
        public virtual DbSet<TComparaNt> TComparaNts { get; set; }
        public virtual DbSet<TComparaNt2> TComparaNt2s { get; set; }
        public virtual DbSet<TComparaNt3> TComparaNt3s { get; set; }
        public virtual DbSet<TComparaNt3ApliI> TComparaNt3ApliIs { get; set; }
        public virtual DbSet<TComparaNt3r> TComparaNt3rs { get; set; }
        public virtual DbSet<TCua> TCuas { get; set; }
        public virtual DbSet<TCuano> TCuanos { get; set; }
        public virtual DbSet<TCumig> TCumigs { get; set; }
        public virtual DbSet<TCurri> TCurris { get; set; }
        public virtual DbSet<TCurriUsa> TCurriUsas { get; set; }
        public virtual DbSet<TCurric> TCurrics { get; set; }
        public virtual DbSet<TCurricF> TCurricFs { get; set; }
        public virtual DbSet<TCurriculum> TCurricula { get; set; }
        public virtual DbSet<TDato> TDatos { get; set; }
        public virtual DbSet<TDatoU> TDatoUs { get; set; }
        public virtual DbSet<TDatoUu> TDatoUus { get; set; }
        public virtual DbSet<TDeedu> TDeedus { get; set; }
        public virtual DbSet<TDisci> TDiscis { get; set; }
        public virtual DbSet<TDisciF> TDisciFs { get; set; }
        public virtual DbSet<TDisciFEquiv> TDisciFEquivs { get; set; }
        public virtual DbSet<TDisciFPre> TDisciFPres { get; set; }
        public virtual DbSet<TDocen> TDocens { get; set; }
        public virtual DbSet<TDocenEnper> TDocenEnpers { get; set; }
        public virtual DbSet<TDu> TDus { get; set; }
        public virtual DbSet<TDu2> TDu2s { get; set; }
        public virtual DbSet<TDuA> TDuAs { get; set; }
        public virtual DbSet<TDuasi2> TDuasi2s { get; set; }
        public virtual DbSet<TDumin> TDumins { get; set; }
        public virtual DbSet<TDup> TDups { get; set; }
        public virtual DbSet<TDup1> TDups1 { get; set; }
        public virtual DbSet<TDupblo> TDupblos { get; set; }
        public virtual DbSet<TDupe> TDupes { get; set; }
        public virtual DbSet<TDupef> TDupefs { get; set; }
        public virtual DbSet<TDupli> TDuplis { get; set; }
        public virtual DbSet<TEac> TEacs { get; set; }
        public virtual DbSet<TEgr> TEgrs { get; set; }
        public virtual DbSet<TEgr2> TEgr2s { get; set; }
        public virtual DbSet<TEq> TEqs { get; set; }
        public virtual DbSet<TEquivalenciaConYPreguntum> TEquivalenciaConYPregunta { get; set; }
        public virtual DbSet<TF1> TF1s { get; set; }
        public virtual DbSet<TF130> TF130s { get; set; }
        public virtual DbSet<TFCb> TFCbs { get; set; }
        public virtual DbSet<TFCb130> TFCb130s { get; set; }
        public virtual DbSet<TFigAp> TFigAps { get; set; }
        public virtual DbSet<TFigApGcondicion> TFigApGcondicions { get; set; }
        public virtual DbSet<TFigApGestado> TFigApGestados { get; set; }
        public virtual DbSet<TFigCarre> TFigCarres { get; set; }
        public virtual DbSet<TFigInsti> TFigInstis { get; set; }
        public virtual DbSet<TFigPeri> TFigPeris { get; set; }
        public virtual DbSet<TFigPerso> TFigPersos { get; set; }
        public virtual DbSet<TFigProgra> TFigProgras { get; set; }
        public virtual DbSet<TFila> TFilas { get; set; }
        public virtual DbSet<TFmin> TFmins { get; set; }
        public virtual DbSet<TH> THs { get; set; }
        public virtual DbSet<TInfoApNopaso> TInfoApNopasos { get; set; }
        public virtual DbSet<TIni> TInis { get; set; }
        public virtual DbSet<TLmar> TLmars { get; set; }
        public virtual DbSet<TLogBaseSaldo> TLogBaseSaldos { get; set; }
        public virtual DbSet<TLyfic> TLyfics { get; set; }
        public virtual DbSet<TLynt> TLynts { get; set; }
        public virtual DbSet<TM> TMs { get; set; }
        public virtual DbSet<TM2> TM2s { get; set; }
        public virtual DbSet<TM2m> TM2ms { get; set; }
        public virtual DbSet<TM2mu> TM2mus { get; set; }
        public virtual DbSet<TM2mum> TM2mums { get; set; }
        public virtual DbSet<TMadu> TMadus { get; set; }
        public virtual DbSet<TMau> TMaus { get; set; }
        public virtual DbSet<TMau3> TMau3s { get; set; }
        public virtual DbSet<TMax> TMaxes { get; set; }
        public virtual DbSet<TMax2> TMax2s { get; set; }
        public virtual DbSet<TMc> TMcs { get; set; }
        public virtual DbSet<TMctaco> TMctacos { get; set; }
        public virtual DbSet<TMi> TMis { get; set; }
        public virtual DbSet<TMialuequi> TMialuequis { get; set; }
        public virtual DbSet<TMicu> TMicus { get; set; }
        public virtual DbSet<TMigraAluCalu> TMigraAluCalus { get; set; }
        public virtual DbSet<TMigraCarre> TMigraCarres { get; set; }
        public virtual DbSet<TMigraCurso> TMigraCursos { get; set; }
        public virtual DbSet<TMigraFacul> TMigraFaculs { get; set; }
        public virtual DbSet<TMigraFacul2> TMigraFacul2s { get; set; }
        public virtual DbSet<TMigraFichah> TMigraFichahs { get; set; }
        public virtual DbSet<TMigraFichahDi> TMigraFichahDis { get; set; }
        public virtual DbSet<TMigraFichahDup> TMigraFichahDups { get; set; }
        public virtual DbSet<TMigraFichahDupD> TMigraFichahDupDs { get; set; }
        public virtual DbSet<TMigraFichahNomi> TMigraFichahNomis { get; set; }
        public virtual DbSet<TMigraPersoUni> TMigraPersoUnis { get; set; }
        public virtual DbSet<TMin> TMins { get; set; }
        public virtual DbSet<TMirar> TMirars { get; set; }
        public virtual DbSet<TMisAcue> TMisAcues { get; set; }
        public virtual DbSet<TMisAp1> TMisAp1s { get; set; }
        public virtual DbSet<TMisAp1Up> TMisAp1Ups { get; set; }
        public virtual DbSet<TMisAp1minsec> TMisAp1minsecs { get; set; }
        public virtual DbSet<TMisBcc> TMisBccs { get; set; }
        public virtual DbSet<TMisNoExpe> TMisNoExpes { get; set; }
        public virtual DbSet<TMisPO> TMisPOs { get; set; }
        public virtual DbSet<TModelo> TModelos { get; set; }
        public virtual DbSet<TMp> TMps { get; set; }
        public virtual DbSet<TN45> TN45s { get; set; }
        public virtual DbSet<TNc> TNcs { get; set; }
        public virtual DbSet<TNc2> TNc2s { get; set; }
        public virtual DbSet<TNcA> TNcAs { get; set; }
        public virtual DbSet<TNcRecal2000402V> TNcRecal2000402Vs { get; set; }
        public virtual DbSet<TNcRecal200402> TNcRecal200402s { get; set; }
        public virtual DbSet<TNcRecal200801> TNcRecal200801s { get; set; }
        public virtual DbSet<TNcRecalCer> TNcRecalCers { get; set; }
        public virtual DbSet<TNcaYa> TNcaYas { get; set; }
        public virtual DbSet<TNcm2> TNcm2s { get; set; }
        public virtual DbSet<TNcm3> TNcm3s { get; set; }
        public virtual DbSet<TNd> TNds { get; set; }
        public virtual DbSet<TNd2> TNd2s { get; set; }
        public virtual DbSet<TNdum> TNdAs { get; set; }
        public virtual DbSet<TNparti> TNpartis { get; set; }
        public virtual DbSet<TNparti2> TNparti2s { get; set; }
        public virtual DbSet<TNparti26> TNparti26s { get; set; }
        public virtual DbSet<TNparti3> TNparti3s { get; set; }
        public virtual DbSet<TNpartiNd> TNpartiNds { get; set; }
        public virtual DbSet<TNpartiNd2> TNpartiNd2s { get; set; }
        public virtual DbSet<TNpartiNd3> TNpartiNd3s { get; set; }
        public virtual DbSet<TNpartiNdPunPar> TNpartiNdPunPars { get; set; }
        public virtual DbSet<TNpartiNdPunPar2> TNpartiNdPunPar2s { get; set; }
        public virtual DbSet<TNpartiNdPunPar26> TNpartiNdPunPar26s { get; set; }
        public virtual DbSet<TNpartiNdPunPar3> TNpartiNdPunPar3s { get; set; }
        public virtual DbSet<TNt132> TNt132s { get; set; }
        public virtual DbSet<TNtd132> TNtd132s { get; set; }
        public virtual DbSet<TObma> TObmas { get; set; }
        public virtual DbSet<TOm2> TOm2s { get; set; }
        public virtual DbSet<TP> TPs { get; set; }
        public virtual DbSet<TP1> TP1s { get; set; }
        public virtual DbSet<TP2> TP2s { get; set; }
        public virtual DbSet<TPa160b> TPa160bs { get; set; }
        public virtual DbSet<TParti26AcuhasnotaPg> TParti26AcuhasnotaPgs { get; set; }
        public virtual DbSet<TParti26Acuhasnotum> TParti26Acuhasnota { get; set; }
        public virtual DbSet<TParti26Acuper> TParti26Acupers { get; set; }
        public virtual DbSet<TParti3AcuhasnotaPg> TParti3AcuhasnotaPgs { get; set; }
        public virtual DbSet<TParti3Acuhasnotum> TParti3Acuhasnota { get; set; }
        public virtual DbSet<TParti3Acuper> TParti3Acupers { get; set; }
        public virtual DbSet<TPc> TPcs { get; set; }
        public virtual DbSet<TPcca> TPccas { get; set; }
        public virtual DbSet<TPd> TPds { get; set; }
        public virtual DbSet<TPegCc> TPegCcs { get; set; }
        public virtual DbSet<TPegCc2> TPegCc2s { get; set; }
        public virtual DbSet<TPegCc3> TPegCc3s { get; set; }
        public virtual DbSet<TPegCcm> TPegCcms { get; set; }
        public virtual DbSet<TPeriodoT> TPeriodoTs { get; set; }
        public virtual DbSet<TPermig2> TPermig2s { get; set; }
        public virtual DbSet<TPfa> TPfas { get; set; }
        public virtual DbSet<TPh> TPhs { get; set; }
        public virtual DbSet<TPm2> TPm2s { get; set; }
        public virtual DbSet<TPm3> TPm3s { get; set; }
        public virtual DbSet<TPmig2> TPmig2s { get; set; }
        public virtual DbSet<TPmig2Dob> TPmig2Dobs { get; set; }
        public virtual DbSet<TPmig2Dob3> TPmig2Dob3s { get; set; }
        public virtual DbSet<TPn> TPns { get; set; }
        public virtual DbSet<TPpd> TPpds { get; set; }
        public virtual DbSet<TPpd081> TPpd081s { get; set; }
        public virtual DbSet<TPpd2> TPpd2s { get; set; }
        public virtual DbSet<TPpd3> TPpd3s { get; set; }
        public virtual DbSet<TPpd33> TPpd33s { get; set; }
        public virtual DbSet<TPrere92> TPrere92s { get; set; }
        public virtual DbSet<TPrereqNoEnCurriPreguntum> TPrereqNoEnCurriPregunta { get; set; }
        public virtual DbSet<TProf> TProfs { get; set; }
        public virtual DbSet<TProfesorT> TProfesorTs { get; set; }
        public virtual DbSet<TProno> TPronos { get; set; }
        public virtual DbSet<TRprufina> TRprufinas { get; set; }
        public virtual DbSet<TSu> TSus { get; set; }
        public virtual DbSet<TSum> TSums { get; set; }
        public virtual DbSet<TSuscom> TSuscoms { get; set; }
        public virtual DbSet<TTAp> TTAps { get; set; }
        public virtual DbSet<TTF> TTFs { get; set; }
        public virtual DbSet<TTNc> TTNcs { get; set; }
        public virtual DbSet<TTNd> TTNds { get; set; }
        public virtual DbSet<TTablaDatum> TTablaData { get; set; }
        public virtual DbSet<TTgcBk> TTgcBks { get; set; }
        public virtual DbSet<TTgcE> TTgcEs { get; set; }
        public virtual DbSet<TTgdBk> TTgdBks { get; set; }
        public virtual DbSet<TTgdE> TTgdEs { get; set; }
        public virtual DbSet<TTmasad> TTmasads { get; set; }
        public virtual DbSet<TTrabaT> TTrabaTs { get; set; }
        public virtual DbSet<TUni> TUnis { get; set; }
        public virtual DbSet<TUtr> TUtrs { get; set; }
        public virtual DbSet<TVAlumnoPeriodo> TVAlumnoPeriodos { get; set; }
        public virtual DbSet<TVCarrera> TVCarreras { get; set; }
        public virtual DbSet<TVInstitucion> TVInstitucions { get; set; }
        public virtual DbSet<TVPeriodo> TVPeriodos { get; set; }
        public virtual DbSet<TVPersona> TVPersonas { get; set; }
        public virtual DbSet<TVPrograma> TVProgramas { get; set; }
        public virtual DbSet<TVTgdAlumnoPeriodoGcondicion> TVTgdAlumnoPeriodoGcondicions { get; set; }
        public virtual DbSet<TVcalPf> TVcalPfs { get; set; }
        public virtual DbSet<TVcalPfV1> TVcalPfV1s { get; set; }
        public virtual DbSet<Tabla00> Tabla00s { get; set; }
        public virtual DbSet<Tabla01> Tabla01s { get; set; }
        public virtual DbSet<Tabla02> Tabla02s { get; set; }
        public virtual DbSet<TablaDia> TablaDias { get; set; }
        public virtual DbSet<TablaGeneralC> TablaGeneralCs { get; set; }
        public virtual DbSet<TablaGeneralCH> TablaGeneralCHes { get; set; }
        public virtual DbSet<TablaGeneralD> TablaGeneralDs { get; set; }
        public virtual DbSet<TablaGeneralDH> TablaGeneralDHs { get; set; }
        public virtual DbSet<Tablac> Tablacs { get; set; }
        public virtual DbSet<Tablad> Tablads { get; set; }
        public virtual DbSet<Taller> Tallers { get; set; }
        public virtual DbSet<TallerParticipante> TallerParticipantes { get; set; }
        public virtual DbSet<TallerTurno> TallerTurnos { get; set; }
        public virtual DbSet<Tcenrp01> Tcenrp01s { get; set; }
        public virtual DbSet<Tclaves00> Tclaves00s { get; set; }
        public virtual DbSet<Teindi00> Teindi00s { get; set; }
        public virtual DbSet<Temp> Temps { get; set; }
        public virtual DbSet<TempLog> TempLogs { get; set; }
        public virtual DbSet<Tempau> Tempaus { get; set; }
        public virtual DbSet<Tempau1> Tempau1s { get; set; }
        public virtual DbSet<Tempre00> Tempre00s { get; set; }
        public virtual DbSet<TicketUnidum> TicketUnida { get; set; }
        public virtual DbSet<Tindia00> Tindia00s { get; set; }
        public virtual DbSet<TipoActividad> TipoActividads { get; set; }
        public virtual DbSet<TipoCambio> TipoCambios { get; set; }
        public virtual DbSet<TipoExamenActa> TipoExamenActas { get; set; }
        public virtual DbSet<TituloEducativaExtranjero> TituloEducativaExtranjeros { get; set; }
        public virtual DbSet<Tly> Tlies { get; set; }
        public virtual DbSet<TmpFoto> TmpFotos { get; set; }
        public virtual DbSet<Token> Tokens { get; set; }
        public virtual DbSet<Torige00> Torige00s { get; set; }
        public virtual DbSet<TpaseA> TpaseAs { get; set; }
        public virtual DbSet<TpaseAa> TpaseAas { get; set; }
        public virtual DbSet<TpaseAdmi> TpaseAdmis { get; set; }
        public virtual DbSet<TpaseAp> TpaseAps { get; set; }
        public virtual DbSet<TpaseApc> TpaseApcs { get; set; }
        public virtual DbSet<TpaseB> TpaseBs { get; set; }
        public virtual DbSet<TpaseB1> TpaseBs1 { get; set; }
        public virtual DbSet<TpaseBc> TpaseBcs { get; set; }
        public virtual DbSet<TpaseBsp> TpaseBsps { get; set; }
        public virtual DbSet<TpaseC> TpaseCs { get; set; }
        public virtual DbSet<TpaseCam> TpaseCams { get; set; }
        public virtual DbSet<TpaseCarre> TpaseCarres { get; set; }
        public virtual DbSet<TpaseCucu> TpaseCucus { get; set; }
        public virtual DbSet<TpaseCurri> TpaseCurris { get; set; }
        public virtual DbSet<TpaseDum> TpaseDa { get; set; }
        public virtual DbSet<TpaseEspeci> TpaseEspecis { get; set; }
        public virtual DbSet<TpaseEva> TpaseEvas { get; set; }
        public virtual DbSet<TpaseEvaexo> TpaseEvaexos { get; set; }
        public virtual DbSet<TpaseEvapo> TpaseEvapos { get; set; }
        public virtual DbSet<TpaseF> TpaseFs { get; set; }
        public virtual DbSet<TpaseNc> TpaseNcs { get; set; }
        public virtual DbSet<TpaseNd> TpaseNds { get; set; }
        public virtual DbSet<TpaseP> TpasePs { get; set; }
        public virtual DbSet<TpaseP140> TpaseP140s { get; set; }
        public virtual DbSet<TpaseP90> TpaseP90s { get; set; }
        public virtual DbSet<TpasePc> TpasePcs { get; set; }
        public virtual DbSet<TpasePostul> TpasePostuls { get; set; }
        public virtual DbSet<TpasePrereq> TpasePrereqs { get; set; }
        public virtual DbSet<Tpeg> Tpegs { get; set; }
        public virtual DbSet<TransaccionCH> TransaccionCHes { get; set; }
        public virtual DbSet<TransaccionDH> TransaccionDHs { get; set; }
        public virtual DbSet<Traza> Trazas { get; set; }
        public virtual DbSet<Traza1> Trazas1 { get; set; }
        public virtual DbSet<Trazas2503> Trazas2503s { get; set; }
        public virtual DbSet<Tum> TAs { get; set; }
        public virtual DbSet<TurnoSpu> TurnoSpus { get; set; }
        public virtual DbSet<Ubicacion> Ubicacions { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<UsuarioAlerta> UsuarioAlertas { get; set; }
        public virtual DbSet<UsuarioAplicacion> UsuarioAplicacions { get; set; }
        public virtual DbSet<UsuarioC> UsuarioCs { get; set; }
        public virtual DbSet<UsuarioCarrera> UsuarioCarreras { get; set; }
        public virtual DbSet<UsuarioFirma> UsuarioFirmas { get; set; }
        public virtual DbSet<UsuarioGrupo> UsuarioGrupos { get; set; }
        public virtual DbSet<UsuarioH> UsuarioHs { get; set; }
        public virtual DbSet<UsuarioModuloCred> UsuarioModuloCreds { get; set; }
        public virtual DbSet<UsuarioPagina> UsuarioPaginas { get; set; }
        public virtual DbSet<UsuarioPeriodo> UsuarioPeriodos { get; set; }
        public virtual DbSet<UsuarioPrograma> UsuarioProgramas { get; set; }
        public virtual DbSet<UsuarioSql> UsuarioSqls { get; set; }
        public virtual DbSet<VAlumnoPeriodo> VAlumnoPeriodos { get; set; }
        public virtual DbSet<VAlumnoPeriodoListum> VAlumnoPeriodoLista { get; set; }
        public virtual DbSet<VBancaAlumnoContenido> VBancaAlumnoContenidos { get; set; }
        public virtual DbSet<VBancaComprobantePorInteraccion> VBancaComprobantePorInteraccions { get; set; }
        public virtual DbSet<VBancaObligacionMovimientoPagoPorInteraccion> VBancaObligacionMovimientoPagoPorInteraccions { get; set; }
        public virtual DbSet<VBibClasificacionDisponibilidad> VBibClasificacionDisponibilidads { get; set; }
        public virtual DbSet<VBibClasificacionDominio2Listum> VBibClasificacionDominio2Lista { get; set; }
        public virtual DbSet<VBibClasificacionInventario> VBibClasificacionInventarios { get; set; }
        public virtual DbSet<VBibClasificacionListum> VBibClasificacionLista { get; set; }
        public virtual DbSet<VBibClasificacionReservaPendienteListum> VBibClasificacionReservaPendienteLista { get; set; }
        public virtual DbSet<VBibClasificacionReservadaPendiente> VBibClasificacionReservadaPendientes { get; set; }
        public virtual DbSet<VBibObjetoDisponibilidad> VBibObjetoDisponibilidads { get; set; }
        public virtual DbSet<VBibObjetoListum> VBibObjetoLista { get; set; }
        public virtual DbSet<VBibObjetoPrestado> VBibObjetoPrestados { get; set; }
        public virtual DbSet<VBibObjetoPrestadoListum> VBibObjetoPrestadoLista { get; set; }
        public virtual DbSet<VBloqueCurso> VBloqueCursos { get; set; }
        public virtual DbSet<VBloqueCursoAlumno> VBloqueCursoAlumnos { get; set; }
        public virtual DbSet<VCarrera> VCarreras { get; set; }
        public virtual DbSet<VCarreraModalidad> VCarreraModalidads { get; set; }
        public virtual DbSet<VCertificadoEstudioV1> VCertificadoEstudioV1s { get; set; }
        public virtual DbSet<VCursorAula> VCursorAulas { get; set; }
        public virtual DbSet<VFicha> VFichas { get; set; }
        public virtual DbSet<VGetdate> VGetdates { get; set; }
        public virtual DbSet<VInstitucion> VInstitucions { get; set; }
        public virtual DbSet<VMatricRetirado> VMatricRetirados { get; set; }
        public virtual DbSet<VModalidad> VModalidads { get; set; }
        public virtual DbSet<VPeriodo> VPeriodos { get; set; }
        public virtual DbSet<VPersona> VPersonas { get; set; }
        public virtual DbSet<VPrograma> VProgramas { get; set; }
        public virtual DbSet<VTgdAlumnoPeriodoGcondicion> VTgdAlumnoPeriodoGcondicions { get; set; }
        public virtual DbSet<VTgdAlumnoPeriodoGestado> VTgdAlumnoPeriodoGestados { get; set; }
        public virtual DbSet<VUsuario> VUsuarios { get; set; }
        public virtual DbSet<ValidaBeca> ValidaBecas { get; set; }
        public virtual DbSet<ValidaBecasLog> ValidaBecasLogs { get; set; }
        public virtual DbSet<ValidacionNeweclass> ValidacionNeweclasses { get; set; }
        public virtual DbSet<ValoracionGrupo> ValoracionGrupos { get; set; }
        public virtual DbSet<Vencim062010> Vencim062010s { get; set; }
        public virtual DbSet<ViewCalendarioEclass> ViewCalendarioEclasses { get; set; }
        public virtual DbSet<VirtualWeb> VirtualWebs { get; set; }
        public virtual DbSet<Yyy> Yyys { get; set; }
        public virtual DbSet<Zzz> Zzzs { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=192.168.0.17;Initial Catalog=sofya_Acad;User ID=sa;password=l8h1RjhiChG#");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AI");

            modelBuilder.Entity<AcLgPractica>(entity =>
            {
                entity.HasKey(e => e.CodigoPractica);

                entity.ToTable("ac_lg_practicas");

                entity.Property(e => e.CodigoPractica).HasColumnName("codigo_practica");

                entity.Property(e => e.Abreviatura)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("abreviatura");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ip");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<AcreditacionArchivo>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Item, e.Subitem })
                    .HasName("PK_acreditacion_archivo_1");

                entity.ToTable("acreditacion_archivo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");

                entity.Property(e => e.Subitem)
                    .HasColumnName("subitem")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Anexo)
                    .HasColumnType("image")
                    .HasColumnName("anexo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.Orden).HasColumnName("orden");

                entity.Property(e => e.RespAdmistracion).HasColumnName("resp_admistracion");

                entity.Property(e => e.RespBiblioteca).HasColumnName("resp_biblioteca");

                entity.Property(e => e.RespCmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("resp_cmodificacion");

                entity.Property(e => e.RespCoordinacion).HasColumnName("resp_coordinacion");

                entity.Property(e => e.RespDecanato).HasColumnName("resp_decanato");

                entity.Property(e => e.RespDirreccionAcademico).HasColumnName("resp_dirreccion_academico");

                entity.Property(e => e.RespFinanzas).HasColumnName("resp_finanzas");

                entity.Property(e => e.RespFmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("resp_fmodificacion");

                entity.Property(e => e.RespLaboratorio).HasColumnName("resp_laboratorio");

                entity.Property(e => e.RespMarketing).HasColumnName("resp_marketing");

                entity.Property(e => e.RespRectorado).HasColumnName("resp_rectorado");

                entity.Property(e => e.RespRrhh).HasColumnName("resp_rrhh");

                entity.Property(e => e.RespSecretariaGeneral).HasColumnName("resp_secretaria_general");

                entity.Property(e => e.RespSga).HasColumnName("resp_sga");

                entity.Property(e => e.RespSgp).HasColumnName("resp_sgp");

                entity.Property(e => e.RespSistemas).HasColumnName("resp_sistemas");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(500)
                    .HasColumnName("tipo_documento");
            });

            modelBuilder.Entity<Acta>(entity =>
            {
                entity.ToTable("actas");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Ccarrera)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccurso");

                entity.Property(e => e.NumActa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("num_acta");

                entity.Property(e => e.Sigla)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sigla");
            });

            modelBuilder.Entity<ActaControl>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccurso, e.Cbloque });

                entity.ToTable("acta_control");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Nacta).HasColumnName("nacta");
            });

            modelBuilder.Entity<ActaParaAcad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("acta_para_acad");

                entity.Property(e => e.Fapertura)
                    .HasColumnType("datetime")
                    .HasColumnName("fapertura");

                entity.Property(e => e.Fcierre)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nacta).HasColumnName("nacta");
            });

            modelBuilder.Entity<ActasEclass>(entity =>
            {
                entity.HasKey(e => e.IdActas);

                entity.ToTable("actas_eclass");

                entity.Property(e => e.IdActas).HasColumnName("id_actas");

                entity.Property(e => e.Actas)
                    .HasColumnType("image")
                    .HasColumnName("actas");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(50)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cfacultad)
                    .HasColumnName("cfacultad")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cinstitucion)
                    .HasColumnName("cinstitucion")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(50)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma)
                    .HasColumnName("cprograma")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ctipoacta).HasColumnName("ctipoacta");

                entity.Property(e => e.DescripcionArchivo)
                    .HasMaxLength(1250)
                    .HasColumnName("descripcion_archivo");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Facta)
                    .HasColumnType("datetime")
                    .HasColumnName("facta");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TipoArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("tipo_archivo");

                entity.Property(e => e.TituloArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("titulo_archivo");

                entity.Property(e => e.Year)
                    .HasMaxLength(50)
                    .HasColumnName("year");
            });

            modelBuilder.Entity<ActasExaman>(entity =>
            {
                entity.ToTable("actas_examen");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Ccarrera)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccurso");

                entity.Property(e => e.NumActa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("num_acta");

                entity.Property(e => e.Sigla)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sigla");

                entity.Property(e => e.TipoEx)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_ex");
            });

            modelBuilder.Entity<Actividad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("actividad");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoActividad).HasColumnName("ctipo_actividad");

                entity.Property(e => e.Dactividad)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dactividad");

                entity.Property(e => e.Factividad)
                    .HasColumnType("datetime")
                    .HasColumnName("factividad");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GcitaDecano)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcita_decano")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GrequierePostul)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grequiere_postul")
                    .IsFixedLength(true);

                entity.Property(e => e.GrequiereTaller)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grequiere_taller")
                    .IsFixedLength(true);

                entity.Property(e => e.Sactividad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sactividad");
            });

            modelBuilder.Entity<ActividadApp>(entity =>
            {
                entity.HasKey(e => e.Cactividad);

                entity.ToTable("actividad_app");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasMaxLength(50)
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Ddescripcion)
                    .HasMaxLength(150)
                    .HasColumnName("ddescripcion");

                entity.Property(e => e.Dlugar)
                    .HasMaxLength(150)
                    .HasColumnName("dlugar");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Factividad)
                    .HasColumnType("datetime")
                    .HasColumnName("factividad");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ActividadDato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("actividad_dato");

                entity.Property(e => e.Cdato).HasColumnName("cdato");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CtipoActividad).HasColumnName("ctipo_actividad");

                entity.Property(e => e.Ddato)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ddato");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Sdato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sdato");
            });

            modelBuilder.Entity<Ad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ad");

                entity.Property(e => e.Accesibilidad).HasColumnName("ACCESIBILIDAD");

                entity.Property(e => e.AccesibleConsultas).HasColumnName("ACCESIBLE_CONSULTAS");

                entity.Property(e => e.AsistenciaClases).HasColumnName("ASISTENCIA_CLASES");

                entity.Property(e => e.CalificacionProfesor).HasColumnName("CALIFICACION_PROFESOR");

                entity.Property(e => e.CalificacionesPlazoEstablecido).HasColumnName("CALIFICACIONES_PLAZO_ESTABLECIDO");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CARRERA");

                entity.Property(e => e.ClasesPreparadas).HasColumnName("CLASES_PREPARADAS");

                entity.Property(e => e.ConceptosConsultas).HasColumnName("CONCEPTOS_CONSULTAS");

                entity.Property(e => e.EvaluacionFinal).HasColumnName("EVALUACION_FINAL");

                entity.Property(e => e.HorarioEntradaSalida).HasColumnName("HORARIO_ENTRADA_SALIDA");

                entity.Property(e => e.Liderazgo).HasColumnName("LIDERAZGO");

                entity.Property(e => e.Materia)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MATERIA");

                entity.Property(e => e.Profesor)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PROFESOR");

                entity.Property(e => e.ProgramaCurso).HasColumnName("PROGRAMA_CURSO");

                entity.Property(e => e.ResolverProblemas).HasColumnName("RESOLVER_PROBLEMAS");

                entity.Property(e => e.RespetoEstudiantes).HasColumnName("RESPETO_ESTUDIANTES");

                entity.Property(e => e.SeminariosAsignaturas).HasColumnName("SEMINARIOS_ASIGNATURAS");

                entity.Property(e => e.Turno).HasColumnName("TURNO");
            });

            modelBuilder.Entity<Admision>(entity =>
            {
                entity.HasKey(e => e.Cadmision)
                    .HasName("PK__admision__31583BA0");

                entity.ToTable("admision");

                entity.Property(e => e.Cadmision)
                    .ValueGeneratedNever()
                    .HasColumnName("cadmision");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cperiodo2).HasColumnName("cperiodo2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dadmision)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dadmision");

                entity.Property(e => e.FminExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fmin_examen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.GtipoCalculo).HasColumnName("gtipo_calculo");

                entity.Property(e => e.IgeneraFichaMatricula)
                    .HasColumnName("igenera_ficha_matricula")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IgnoraEducativo).HasColumnName("ignora_educativo");

                entity.Property(e => e.Naprobado).HasColumnName("naprobado");

                entity.Property(e => e.NmaxExamenes).HasColumnName("nmax_examenes");

                entity.Property(e => e.NminExamenes).HasColumnName("nmin_examenes");

                entity.Property(e => e.Sadmision)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sadmision");

                entity.HasOne(d => d.CperiodoNavigation)
                    .WithMany(p => p.Admisions)
                    .HasForeignKey(d => d.Cperiodo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_admision_a_periodo");
            });

            modelBuilder.Entity<AdmisionCompaniaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("admision_compania_h");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcompania)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcompania")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Scompania)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scompania")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AdmisionCompanium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("admision_compania");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcompania)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcompania")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Scompania)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scompania")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AdmisionDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("admision_documento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.GadmisionDoc).HasColumnName("gadmision_doc");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");
            });

            modelBuilder.Entity<AdmisionReporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("admision_reporte");

                entity.Property(e => e.A).HasColumnName("a");

                entity.Property(e => e.B).HasColumnName("b");

                entity.Property(e => e.Cgestor)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cgestor");

                entity.Property(e => e.Crespuesta).HasColumnName("crespuesta");

                entity.Property(e => e.Drespuesta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("drespuesta");
            });

            modelBuilder.Entity<AlertaAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alerta_alumno");

                entity.Property(e => e.Calerta).HasColumnName("calerta");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsable)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cresponsable");

                entity.Property(e => e.Dalerta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("dalerta");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtiponota).HasColumnName("gtiponota");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<AlertaAlumnoSeguimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alerta_alumno_seguimiento");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("dglosa")
                    .IsFixedLength(true);

                entity.Property(e => e.Dusuario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dusuario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoUsuario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_usuario")
                    .IsFixedLength(true);

                entity.Property(e => e.Gvigencia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvigencia")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<Alertum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alerta");

                entity.Property(e => e.Calerta).HasColumnName("calerta");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dalerta)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dalerta");

                entity.Property(e => e.Ddetallado)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ddetallado");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Dsubgrupo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dsubgrupo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro1).HasColumnName("gparametro1");

                entity.Property(e => e.Gparametro2).HasColumnName("gparametro2");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<AlternativaBeneficio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alternativa_beneficio");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("categoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Deducativo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("deducativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("grupo")
                    .IsFixedLength(true);

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Qalumnos1).HasColumnName("qalumnos1");

                entity.Property(e => e.Qalumnos2).HasColumnName("qalumnos2");

                entity.Property(e => e.Qalumnos3).HasColumnName("qalumnos3");

                entity.Property(e => e.Qalumnos4).HasColumnName("qalumnos4");

                entity.Property(e => e.Qalumnos5).HasColumnName("qalumnos5");

                entity.Property(e => e.Qalumnos6).HasColumnName("qalumnos6");

                entity.Property(e => e.Qalumnos7).HasColumnName("qalumnos7");

                entity.Property(e => e.Qalumnos8).HasColumnName("qalumnos8");
            });

            modelBuilder.Entity<AluCurBloLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alu_cur_blo_log");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CbloqueDest).HasColumnName("cbloque_dest");

                entity.Property(e => e.CbloqueOrig).HasColumnName("cbloque_orig");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Coperacion).HasColumnName("coperacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcruce)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcruce")
                    .IsFixedLength(true);

                entity.Property(e => e.Gextraordinario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gextraordinario")
                    .IsFixedLength(true);

                entity.Property(e => e.Gnotas)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnotas")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Alumno>(entity =>
            {
                entity.HasKey(e => e.Calumno)
                    .HasName("PK__alumno__10EB6C0E");

                entity.ToTable("alumno");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Calumno }, "alumno02");

                entity.Property(e => e.Calumno)
                    .ValueGeneratedNever()
                    .HasColumnName("calumno");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso)
                    .HasColumnName("gformaingreso")
                    .HasComment("");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso)
                    .HasColumnName("gtipoingreso")
                    .HasComment("");

                entity.Property(e => e.GturnoX).HasColumnName("gturno_x");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.OrigenVenta)
                    .HasColumnName("origen_venta")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OrigenVentaDescripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("origen_venta_descripcion");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclavepadre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tclavepadre");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.TesisFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("tesis_fecha");

                entity.Property(e => e.TesisNombre1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre1")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNombre2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre2")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNota).HasColumnName("tesis_nota");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.Alumnos)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_a_persona");
            });

            modelBuilder.Entity<AlumnoActividad>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota });

                entity.ToTable("alumno_actividad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NnotaActividad1).HasColumnName("nnota_actividad1");

                entity.Property(e => e.NnotaActividad2).HasColumnName("nnota_actividad2");

                entity.Property(e => e.NnotaActividad3).HasColumnName("nnota_actividad3");

                entity.Property(e => e.NnotaActividad4).HasColumnName("nnota_actividad4");
            });

            modelBuilder.Entity<AlumnoActividadConfiguracion>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cprofesor, e.Ccurso, e.Cbloque, e.GtipoNota });

                entity.ToTable("alumno_actividad_configuracion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NnotaActividad1).HasColumnName("nnota_actividad1");

                entity.Property(e => e.NnotaActividad10).HasColumnName("nnota_actividad10");

                entity.Property(e => e.NnotaActividad11).HasColumnName("nnota_actividad11");

                entity.Property(e => e.NnotaActividad12).HasColumnName("nnota_actividad12");

                entity.Property(e => e.NnotaActividad2).HasColumnName("nnota_actividad2");

                entity.Property(e => e.NnotaActividad3).HasColumnName("nnota_actividad3");

                entity.Property(e => e.NnotaActividad4).HasColumnName("nnota_actividad4");

                entity.Property(e => e.NnotaActividad5).HasColumnName("nnota_actividad5");

                entity.Property(e => e.NnotaActividad6).HasColumnName("nnota_actividad6");

                entity.Property(e => e.NnotaActividad7).HasColumnName("nnota_actividad7");

                entity.Property(e => e.NnotaActividad8).HasColumnName("nnota_actividad8");

                entity.Property(e => e.NnotaActividad9).HasColumnName("nnota_actividad9");
            });

            modelBuilder.Entity<AlumnoActividadConfiguracionExtension>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cprofesor, e.Ccurso, e.Cbloque });

                entity.ToTable("alumno_actividad_configuracion_extension");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NnotaActividad1).HasColumnName("nnota_actividad1");
            });

            modelBuilder.Entity<AlumnoActividadH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_actividad_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.NnotaActividad1).HasColumnName("nnota_actividad1");

                entity.Property(e => e.NnotaActividad2).HasColumnName("nnota_actividad2");

                entity.Property(e => e.NnotaActividad3).HasColumnName("nnota_actividad3");

                entity.Property(e => e.NnotaActividad4).HasColumnName("nnota_actividad4");
            });

            modelBuilder.Entity<AlumnoAsisteEvaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota, e.Fasistencia })
                    .HasName("PK__alumno_asiste_ev__762D5431");

                entity.ToTable("alumno_asiste_evaluacion");

                entity.HasIndex(e => new { e.Calumno, e.Cperiodo, e.Ccurso, e.Nfalta }, "I2_alumno_asiste_evaluacion_alpecunfa");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Corigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("corigen")
                    .IsFixedLength(true)
                    .HasComment("Guarda por donde vino la inscripcion al extraordinario: C-Coincidencia por web, P-Pago por caja, A-Autorizado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Importe)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Pago).HasColumnName("pago");
            });

            modelBuilder.Entity<AlumnoAsisteEvaluacionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_asiste_evaluacion_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AlumnoAsistenciaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_asistencia_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CprofesorDigita).HasColumnName("cprofesor_digita");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AlumnoAsistenciaMarzoJustificadum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_asistencia_marzo_justificada");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CprofesorDigita).HasColumnName("cprofesor_digita");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AlumnoAsistencium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Cbloque, e.Ccurso, e.GtipoHora, e.Fasistencia })
                    .HasName("PK__alumno_asistenci__7AB2122C");

                entity.ToTable("alumno_asistencia");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso }, "i02_alumno_asistencia");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CprofesorDigita).HasColumnName("cprofesor_digita");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.AlumnoAsistencia)
                    .HasForeignKey(d => new { d.Cperiodo, d.Calumno, d.Ccurso })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_asistencia_a_alumno");
            });

            modelBuilder.Entity<AlumnoAutorizaIngresoMiaula>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("alumno_autoriza_ingreso_miaula");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_vencimiento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("motivo");
            });

            modelBuilder.Entity<AlumnoCarreraTurnoLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_carrera_turno_log");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CcarreraNew).HasColumnName("ccarrera_new");

                entity.Property(e => e.CcarreraOld).HasColumnName("ccarrera_old");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CmodalidadNew).HasColumnName("cmodalidad_new");

                entity.Property(e => e.CmodalidadOld).HasColumnName("cmodalidad_old");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AlumnoCaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_caso");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso).HasColumnName("gformaingreso");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.GturnoX).HasColumnName("gturno_x");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<AlumnoCestadoCajaOriginal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_cestado_caja_original");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso).HasColumnName("gformaingreso");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.GturnoX).HasColumnName("gturno_x");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<AlumnoColaCred>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_cola_cred");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoCliente).HasColumnName("ctipo_cliente");

                entity.Property(e => e.Festado)
                    .HasColumnType("datetime")
                    .HasColumnName("festado");

                entity.Property(e => e.FfinalAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_atencion");

                entity.Property(e => e.FinicioAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_atencion");

                entity.Property(e => e.Fticket)
                    .HasColumnType("datetime")
                    .HasColumnName("fticket");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Natencion).HasColumnName("natencion");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Sticket)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("sticket")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoCrucePermitido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_cruce_permitido");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<AlumnoCurricEmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_curric_emp");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccodigo).HasColumnName("ccodigo");

                entity.Property(e => e.Ccurriculum).HasColumnName("ccurriculum");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Gcargo).HasColumnName("gcargo");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");
            });

            modelBuilder.Entity<AlumnoCurricMat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_curric_mat");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurriculum).HasColumnName("ccurriculum");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmateria).HasColumnName("cmateria");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gnivel).HasColumnName("gnivel");
            });

            modelBuilder.Entity<AlumnoCurriculum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_curriculum");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurriculum).HasColumnName("ccurriculum");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperfil).HasColumnName("cperfil");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Garea1).HasColumnName("garea1");

                entity.Property(e => e.Garea2).HasColumnName("garea2");

                entity.Property(e => e.Garea3).HasColumnName("garea3");

                entity.Property(e => e.Gdisponibilidad).HasColumnName("gdisponibilidad");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ggradoinstruccion).HasColumnName("ggradoinstruccion");

                entity.Property(e => e.Grubro).HasColumnName("grubro");

                entity.Property(e => e.Gsector).HasColumnName("gsector");

                entity.Property(e => e.Gtiempo).HasColumnName("gtiempo");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<AlumnoCursoAutoriza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_curso_autoriza");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CmodificacionFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_final");

                entity.Property(e => e.CmodificacionParcial)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_parcial");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FmodificacionFinal)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_final");

                entity.Property(e => e.FmodificacionParcial)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_parcial");

                entity.Property(e => e.GautorizaFinal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gautoriza_final")
                    .IsFixedLength(true);

                entity.Property(e => e.GautorizaParcial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gautoriza_parcial")
                    .IsFixedLength(true);

                entity.Property(e => e.IdeudaMe)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ideuda_me");

                entity.Property(e => e.IdeudaMn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ideuda_mn");
            });

            modelBuilder.Entity<AlumnoCursoAutorizaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_curso_autoriza_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CmodificacionFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_final");

                entity.Property(e => e.CmodificacionParcial)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_parcial");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FmodificacionFinal)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_final");

                entity.Property(e => e.FmodificacionParcial)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_parcial");

                entity.Property(e => e.GautorizaFinal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gautoriza_final")
                    .IsFixedLength(true);

                entity.Property(e => e.GautorizaParcial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gautoriza_parcial")
                    .IsFixedLength(true);

                entity.Property(e => e.IdeudaMe)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ideuda_me");

                entity.Property(e => e.IdeudaMn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ideuda_mn");
            });

            modelBuilder.Entity<AlumnoCursoBloqueLog>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso, e.CbloqueOrig, e.CbloqueDest });

                entity.ToTable("alumno_curso_bloque_log");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CbloqueOrig).HasColumnName("cbloque_orig");

                entity.Property(e => e.CbloqueDest).HasColumnName("cbloque_dest");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcruce)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcruce")
                    .IsFixedLength(true)
                    .HasComment("Campo que indica si al mover se generaba cruces o no");

                entity.Property(e => e.Gextraordinario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gextraordinario")
                    .IsFixedLength(true);

                entity.Property(e => e.Gnotas)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnotas")
                    .IsFixedLength(true)
                    .HasComment("Indica si al mover al alumno tenia notas registradas");
            });

            modelBuilder.Entity<AlumnoCursoEncuestum>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.Cbloque, e.Cprofesor });

                entity.ToTable("alumno_curso_encuesta");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.R01).HasColumnName("r01");

                entity.Property(e => e.R02).HasColumnName("r02");

                entity.Property(e => e.R03).HasColumnName("r03");

                entity.Property(e => e.R04).HasColumnName("r04");

                entity.Property(e => e.R05).HasColumnName("r05");

                entity.Property(e => e.R06).HasColumnName("r06");

                entity.Property(e => e.R07).HasColumnName("r07");

                entity.Property(e => e.R08).HasColumnName("r08");

                entity.Property(e => e.R09).HasColumnName("r09");

                entity.Property(e => e.R10).HasColumnName("r10");
            });

            modelBuilder.Entity<AlumnoDefensaFinal>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccarrera, e.Calumno });

                entity.ToTable("alumno_defensa_final");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Abrev1).HasColumnName("abrev1");

                entity.Property(e => e.Abrev2).HasColumnName("abrev2");

                entity.Property(e => e.Abrev3).HasColumnName("abrev3");

                entity.Property(e => e.Abrevtutor).HasColumnName("abrevtutor");

                entity.Property(e => e.AnioActa).HasColumnName("anio_acta");

                entity.Property(e => e.BorradorEstado).HasColumnName("borrador_estado");

                entity.Property(e => e.BorradorObservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("borrador_observacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.ClineaInvestigacion).HasColumnName("clinea_investigacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionTesis)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_tesis");

                entity.Property(e => e.ContentType).HasMaxLength(500);

                entity.Property(e => e.EstadoPago)
                    .HasColumnName("estado_pago")
                    .HasDefaultValueSql("((1))")
                    .HasComment("1:Nuevo 2:Pendiente 3:Pagado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FileName).HasMaxLength(500);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionTesis)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_tesis");

                entity.Property(e => e.Mesa1).HasColumnName("mesa1");

                entity.Property(e => e.Mesa2).HasColumnName("mesa2");

                entity.Property(e => e.Mesa3).HasColumnName("mesa3");

                entity.Property(e => e.NroActa).HasColumnName("nro_acta");

                entity.Property(e => e.Tesis)
                    .HasColumnType("image")
                    .HasColumnName("tesis");

                entity.Property(e => e.TesisFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("tesis_fecha");

                entity.Property(e => e.TesisNombre1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre1")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNombre2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre2")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNota).HasColumnName("tesis_nota");

                entity.Property(e => e.Tutor).HasColumnName("tutor");
            });

            modelBuilder.Entity<AlumnoDefensaFinalH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_defensa_final_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClineaInvestigacion).HasColumnName("clinea_investigacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Examinador1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("examinador1");

                entity.Property(e => e.Examinador2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("examinador2");

                entity.Property(e => e.Examinador3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("examinador3");

                entity.Property(e => e.Examinador4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("examinador4");

                entity.Property(e => e.Examinador5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("examinador5");

                entity.Property(e => e.Fauditoria).HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdefensa)
                    .HasColumnType("datetime")
                    .HasColumnName("fdefensa");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Nnota1)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nnota1");

                entity.Property(e => e.Nnota2)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nnota2");

                entity.Property(e => e.TesisFecha)
                    .HasMaxLength(10)
                    .HasColumnName("tesis_fecha")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNombre1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre1")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNombre2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tesis_nombre2")
                    .IsFixedLength(true);

                entity.Property(e => e.TesisNota)
                    .HasMaxLength(10)
                    .HasColumnName("tesis_nota")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasColumnType("datetime")
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<AlumnoDeteccionAuditorium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Ccarrera, e.Cperiodo, e.Calumno, e.ProcesoNumero });

                entity.ToTable("alumno_deteccion_auditoria");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.ProcesoNumero).HasColumnName("Proceso_numero");

                entity.Property(e => e.Comunicado1Archivo)
                    .HasColumnType("image")
                    .HasColumnName("comunicado1_archivo");

                entity.Property(e => e.Comunicado1Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("comunicado1_cmodificacion");

                entity.Property(e => e.Comunicado1ContentType)
                    .HasMaxLength(500)
                    .HasColumnName("comunicado1_ContentType");

                entity.Property(e => e.Comunicado1FileName)
                    .HasMaxLength(500)
                    .HasColumnName("comunicado1_FileName");

                entity.Property(e => e.Comunicado1Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("comunicado1_fmodificacion");

                entity.Property(e => e.Comunicado2Archivo)
                    .HasColumnType("image")
                    .HasColumnName("comunicado2_archivo");

                entity.Property(e => e.Comunicado2Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("comunicado2_cmodificacion");

                entity.Property(e => e.Comunicado2ContentType)
                    .HasMaxLength(500)
                    .HasColumnName("comunicado2_ContentType");

                entity.Property(e => e.Comunicado2FileName)
                    .HasMaxLength(500)
                    .HasColumnName("comunicado2_FileName");

                entity.Property(e => e.Comunicado2Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("comunicado2_fmodificacion");

                entity.Property(e => e.Informe1Archivo)
                    .HasColumnType("image")
                    .HasColumnName("informe1_archivo");

                entity.Property(e => e.Informe1Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("informe1_cmodificacion");

                entity.Property(e => e.Informe1ContentType)
                    .HasMaxLength(500)
                    .HasColumnName("informe1_ContentType");

                entity.Property(e => e.Informe1FileName)
                    .HasMaxLength(500)
                    .HasColumnName("informe1_FileName");

                entity.Property(e => e.Informe1Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("informe1_fmodificacion");

                entity.Property(e => e.Informe2Archivo)
                    .HasColumnType("image")
                    .HasColumnName("informe2_archivo");

                entity.Property(e => e.Informe2Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("informe2_cmodificacion");

                entity.Property(e => e.Informe2ContentType)
                    .HasMaxLength(500)
                    .HasColumnName("informe2_ContentType");

                entity.Property(e => e.Informe2FileName)
                    .HasMaxLength(500)
                    .HasColumnName("informe2_FileName");

                entity.Property(e => e.Informe2Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("informe2_fmodificacion");
            });

            modelBuilder.Entity<AlumnoDnerh>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso, e.Cbloque, e.Chospital, e.MesDesde });

                entity.ToTable("alumno_dnerhs");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Chospital).HasColumnName("chospital");

                entity.Property(e => e.MesDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("mes_desde");

                entity.Property(e => e.CcampoPractica).HasColumnName("ccampo_practica");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.ContratoFirmado)
                    .HasMaxLength(10)
                    .HasColumnName("contrato_firmado");

                entity.Property(e => e.Ctutor).HasColumnName("ctutor");

                entity.Property(e => e.CursoBioseguridad)
                    .HasMaxLength(5)
                    .HasColumnName("curso_bioseguridad");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1)
                    .HasColumnName("grupo");

                entity.Property(e => e.HorarioDesde)
                    .HasMaxLength(5)
                    .HasColumnName("horario_desde");

                entity.Property(e => e.HorarioHasta)
                    .HasMaxLength(5)
                    .HasColumnName("horario_hasta");

                entity.Property(e => e.Ju)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Lu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Ma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.MesHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("mes_hasta");

                entity.Property(e => e.Mi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Sa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TotalGuardia).HasColumnName("total_guardia");

                entity.Property(e => e.Vi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_documentos");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cdocumento).HasColumnName("cdocumento");

                entity.Property(e => e.Cintento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cintento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nintentos).HasColumnName("nintentos");
            });

            modelBuilder.Entity<AlumnoEgresadoImprentum>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cingreso, e.Cinteraccion });

                entity.ToTable("alumno_egresado_imprenta");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(200)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoEgreso).HasColumnName("cperiodo_egreso");

                entity.Property(e => e.CperiodoIngreso).HasColumnName("cperiodo_ingreso");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.DcarreraImprenta)
                    .HasMaxLength(200)
                    .HasColumnName("dcarrera_imprenta");

                entity.Property(e => e.DecanoDirector)
                    .HasMaxLength(200)
                    .HasColumnName("decano_director");

                entity.Property(e => e.DenominacionTitulo)
                    .HasMaxLength(200)
                    .HasColumnName("denominacion_titulo");

                entity.Property(e => e.Dperiodo)
                    .HasMaxLength(200)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(200)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaEgreso)
                    .HasMaxLength(200)
                    .HasColumnName("fecha_egreso");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_registro");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.ImpresionNro).HasColumnName("impresion_nro");

                entity.Property(e => e.Rector)
                    .HasMaxLength(200)
                    .HasColumnName("rector");

                entity.Property(e => e.SecretarioGeneral)
                    .HasMaxLength(200)
                    .HasColumnName("secretario_general");
            });

            modelBuilder.Entity<AlumnoEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_empresa");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cempresa).HasColumnName("cempresa");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Csolicitud).HasColumnName("csolicitud");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Gcargo).HasColumnName("gcargo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AlumnoEntrevistum>(entity =>
            {
                entity.HasKey(e => e.Centrevista);

                entity.ToTable("alumno_entrevista");

                entity.Property(e => e.Centrevista).HasColumnName("centrevista");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionEntrevista)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_entrevista");

                entity.Property(e => e.ContentType).HasMaxLength(500);

                entity.Property(e => e.Entrevista)
                    .HasColumnType("image")
                    .HasColumnName("entrevista");

                entity.Property(e => e.FileName).HasMaxLength(500);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionEntrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_entrevista");
            });

            modelBuilder.Entity<AlumnoExcluyeWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_excluye_web");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<AlumnoExploratorio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_exploratorio");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Gaprobacion).HasColumnName("gaprobacion");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("npuntaje");
            });

            modelBuilder.Entity<AlumnoExtensionUniversitarium>(entity =>
            {
                entity.HasKey(e => e.Asistencia);

                entity.ToTable("alumno_extension_universitaria");

                entity.Property(e => e.Asistencia).HasColumnName("asistencia");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cargahoraria)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("cargahoraria");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fechaasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fechaasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<AlumnoFlujoPorSemestre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_flujo_por_semestre");

                entity.Property(e => e.CcarreraAnalizar).HasColumnName("ccarrera_analizar");

                entity.Property(e => e.Ciclo1).HasColumnName("ciclo1");

                entity.Property(e => e.Ciclo10).HasColumnName("ciclo10");

                entity.Property(e => e.Ciclo11).HasColumnName("ciclo11");

                entity.Property(e => e.Ciclo12).HasColumnName("ciclo12");

                entity.Property(e => e.Ciclo2).HasColumnName("ciclo2");

                entity.Property(e => e.Ciclo3).HasColumnName("ciclo3");

                entity.Property(e => e.Ciclo4).HasColumnName("ciclo4");

                entity.Property(e => e.Ciclo5).HasColumnName("ciclo5");

                entity.Property(e => e.Ciclo6).HasColumnName("ciclo6");

                entity.Property(e => e.Ciclo7).HasColumnName("ciclo7");

                entity.Property(e => e.Ciclo8).HasColumnName("ciclo8");

                entity.Property(e => e.Ciclo9).HasColumnName("ciclo9");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnalizar).HasColumnName("cperiodo_analizar");

                entity.Property(e => e.Dperiodo)
                    .HasMaxLength(150)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Egresados).HasColumnName("egresados");

                entity.Property(e => e.Nalumnos).HasColumnName("nalumnos");
            });

            modelBuilder.Entity<AlumnoFuncionarioUnidum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Alumno_funcionario_unida");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.QcursosMax).HasColumnName("qcursos_max");
            });

            modelBuilder.Entity<AlumnoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_h");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso).HasColumnName("gformaingreso");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.GturnoX).HasColumnName("gturno_x");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<AlumnoHabilitaFinalExtraordinario>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota, e.Cbloque })
                    .HasName("PK__alumno_h__8C5C211F789D7C4D");

                entity.ToTable("alumno_habilita_final_extraordinario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nhabilita).HasColumnName("nhabilita");
            });

            modelBuilder.Entity<AlumnoHabilitaFinalExtraordinarioH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_habilita_final_extraordinario_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nhabilita).HasColumnName("nhabilita");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoHolograma>(entity =>
            {
                entity.ToTable("alumno_holograma");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cholograma)
                    .HasMaxLength(20)
                    .HasColumnName("cholograma");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(255)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AlumnoIncluyeWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_incluye_web");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<AlumnoInternado>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso });

                entity.ToTable("alumno_internado");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CargaDiaria)
                    .HasMaxLength(250)
                    .HasColumnName("carga_diaria");

                entity.Property(e => e.CargaSemanal)
                    .HasMaxLength(250)
                    .HasColumnName("carga_semanal");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CodigoPractica).HasColumnName("codigo_practica");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GuardiasSemanales)
                    .HasMaxLength(250)
                    .HasColumnName("guardias_semanales");

                entity.Property(e => e.HorarioRotacion)
                    .HasMaxLength(250)
                    .HasColumnName("horario_rotacion");
            });

            modelBuilder.Entity<AlumnoJustifica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_justifica");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmotivo).HasColumnName("cmotivo");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dsustento)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dsustento");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.GincluyeIngles)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gincluye_ingles")
                    .IsFixedLength(true);

                entity.Property(e => e.Gprocede)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gprocede")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nfaltas).HasColumnName("nfaltas");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AlumnoJustificaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_justifica_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmotivo).HasColumnName("cmotivo");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dsustento)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dsustento");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.GincluyeIngles)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gincluye_ingles")
                    .IsFixedLength(true);

                entity.Property(e => e.Gprocede)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gprocede")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nfaltas).HasColumnName("nfaltas");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AlumnoLiberaAsist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_libera_asist");

                entity.Property(e => e.Av1Ant)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("av1_ant");

                entity.Property(e => e.Av1eAnt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("av1e_ant");

                entity.Property(e => e.Av2Ant)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("av2_ant");

                entity.Property(e => e.Av2eAnt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("av2e_ant");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CbloqueAnt).HasColumnName("cbloque_ant");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoAnt).HasColumnName("ccurso_ant");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.GaprobadoAnt).HasColumnName("gaprobado_ant");

                entity.Property(e => e.GestadoFichaAnt).HasColumnName("gestado_ficha_ant");

                entity.Property(e => e.PasistenciaAnt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("pasistencia_ant");

                entity.Property(e => e.PfAnt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("pf_ant");

                entity.Property(e => e.PfaltaAnt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("pfalta_ant");

                entity.Property(e => e.Pfe1Ant)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("pfe1_ant");

                entity.Property(e => e.Pfe2Ant)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("pfe2_ant");

                entity.Property(e => e.Sflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sflag")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoLider>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_lider");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Nvotos).HasColumnName("nvotos");
            });

            modelBuilder.Entity<AlumnoLlamadaCallCenter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_llamada_call_center");

                entity.Property(e => e.Campo1).HasColumnName("campo1");

                entity.Property(e => e.Campo10)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo10");

                entity.Property(e => e.Campo11)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo11");

                entity.Property(e => e.Campo12)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo12");

                entity.Property(e => e.Campo13)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo13");

                entity.Property(e => e.Campo14)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo14");

                entity.Property(e => e.Campo15)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo15");

                entity.Property(e => e.Campo16)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo16");

                entity.Property(e => e.Campo17)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo17");

                entity.Property(e => e.Campo18)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo18");

                entity.Property(e => e.Campo19)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo19");

                entity.Property(e => e.Campo2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo2");

                entity.Property(e => e.Campo20)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo20");

                entity.Property(e => e.Campo21)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo21");

                entity.Property(e => e.Campo22)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo22");

                entity.Property(e => e.Campo23)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo23");

                entity.Property(e => e.Campo24)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo24");

                entity.Property(e => e.Campo25)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo25");

                entity.Property(e => e.Campo26)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo26");

                entity.Property(e => e.Campo27)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo27");

                entity.Property(e => e.Campo28)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo28");

                entity.Property(e => e.Campo29)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo29");

                entity.Property(e => e.Campo3)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo3");

                entity.Property(e => e.Campo30)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo30");

                entity.Property(e => e.Campo31)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo31");

                entity.Property(e => e.Campo32)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo32");

                entity.Property(e => e.Campo33)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo33");

                entity.Property(e => e.Campo34)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo34");

                entity.Property(e => e.Campo35)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo35");

                entity.Property(e => e.Campo36)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo36");

                entity.Property(e => e.Campo37)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo37");

                entity.Property(e => e.Campo38)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo38");

                entity.Property(e => e.Campo39)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo39");

                entity.Property(e => e.Campo4)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo4");

                entity.Property(e => e.Campo40)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo40");

                entity.Property(e => e.Campo41)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo41");

                entity.Property(e => e.Campo42)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo42");

                entity.Property(e => e.Campo43)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo43");

                entity.Property(e => e.Campo44)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo44");

                entity.Property(e => e.Campo5)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo5");

                entity.Property(e => e.Campo6)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo6");

                entity.Property(e => e.Campo7)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo7");

                entity.Property(e => e.Campo8)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo8");

                entity.Property(e => e.Campo9)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("campo9");
            });

            modelBuilder.Entity<AlumnoMaterium>(entity =>
            {
                entity.HasKey(e => new { e.Nmatricula, e.Cperiodo, e.Cgrupo, e.Cmateria });

                entity.ToTable("alumno_materia");

                entity.Property(e => e.Nmatricula)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("nmatricula")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cmateria).HasColumnName("cmateria");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoMerito>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_merito");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gbimestre).HasColumnName("gbimestre");

                entity.Property(e => e.Nmerito).HasColumnName("nmerito");

                entity.Property(e => e.Nparticipan).HasColumnName("nparticipan");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("npuntaje");
            });

            modelBuilder.Entity<AlumnoMeritoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_merito_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gbimestre).HasColumnName("gbimestre");

                entity.Property(e => e.Nmerito).HasColumnName("nmerito");

                entity.Property(e => e.Nparticipan).HasColumnName("nparticipan");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("npuntaje");
            });

            modelBuilder.Entity<AlumnoNota>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_notas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gmuestra)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gmuestra")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<AlumnoParaAcad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_para_acad");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccredito).HasColumnName("ccredito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GtipoCantidad).HasColumnName("gtipo_cantidad");

                entity.Property(e => e.Nacta).HasColumnName("nacta");

                entity.Property(e => e.Ncantidad).HasColumnName("ncantidad");
            });

            modelBuilder.Entity<AlumnoParaAcadH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_para_acad_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccredito).HasColumnName("ccredito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GtipoCantidad).HasColumnName("gtipo_cantidad");

                entity.Property(e => e.Ncantidad).HasColumnName("ncantidad");
            });

            modelBuilder.Entity<AlumnoPeriodo>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Cperiodo })
                    .HasName("PK__alumno_periodo__13C7D8B9");

                entity.ToTable("alumno_periodo");

                entity.HasIndex(e => e.Calumno, "alumno_per_calumno");

                entity.HasIndex(e => e.Cobligacion, "alumno_per_oblig");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CenteConvenio).HasColumnName("cente_convenio");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Czonaventa).HasColumnName("czonaventa");

                entity.Property(e => e.Estadocaja)
                    .HasColumnName("estadocaja")
                    .HasDefaultValueSql("((1))")
                    .HasComment("1 = Inicial ; 2 = Pendiente ; 3 = Aprobado");

                entity.Property(e => e.Fcontrato)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontrato");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Flagcalcularcuota)
                    .HasColumnName("flagcalcularcuota")
                    .HasDefaultValueSql("((1))")
                    .HasComment("0 = Caja Cerrada(Bloqueada) ; 1 = Caja Abierta(No Bloqueada)");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nponderado2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado2");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");

                entity.HasOne(d => d.CalumnoNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Calumno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_periodo_a_alumno");

                entity.HasOne(d => d.CcarreraNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Ccarrera)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_periodo_a_carrera");

                entity.HasOne(d => d.CcurriculaNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Ccurricula)
                    .HasConstraintName("fk_alumno_periodo_a_curricula");

                entity.HasOne(d => d.CmodalidadNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Cmodalidad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_periodo_a_modalidad");

                entity.HasOne(d => d.CperiodoNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Cperiodo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_periodo_a_periodo");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_alumno_periodo_a_persona");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => new { d.Cobligacion, d.Calumno, d.Cperiodo })
                    .HasConstraintName("fk_alumno_periodo_a_obligacion");

                entity.HasOne(d => d.CNavigation)
                    .WithMany(p => p.AlumnoPeriodos)
                    .HasForeignKey(d => new { d.Cperiodo, d.Ccurricula, d.Ccarrera })
                    .HasConstraintName("fk_alumno_periodo_a_periodo_curricula");
            });

            modelBuilder.Entity<AlumnoPeriodoCredito>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.GtipoCredito })
                    .HasName("PK__alumno_periodo_c__0FAD2F12");

                entity.ToTable("alumno_periodo_credito");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ncredito");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.AlumnoPeriodoCreditos)
                    .HasForeignKey(d => new { d.Calumno, d.Cperiodo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_ap_credito_a_ap");
            });

            modelBuilder.Entity<AlumnoPeriodoEsp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_periodo_esp");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");
            });

            modelBuilder.Entity<AlumnoPeriodoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_periodo_h");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CenteConvenio).HasColumnName("cente_convenio");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<AlumnoPeriodoMedicina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_periodo_medicina");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CenteConvenio).HasColumnName("cente_convenio");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nponderado2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado2");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<AlumnoPeriodoRevisarErnestoMatricula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_periodo_revisar_ernesto_matricula");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CenteConvenio).HasColumnName("cente_convenio");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcontrato)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontrato");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nponderado2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado2");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<AlumnoPierdeBeca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_pierde_beca");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Npoderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npoderado");
            });

            modelBuilder.Entity<AlumnoPrereq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_prereq");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoPr).HasColumnName("ccurso_pr");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Daprobado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("daprobado")
                    .IsFixedLength(true);

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso")
                    .IsFixedLength(true);

                entity.Property(e => e.DcursoPr)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_pr")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso")
                    .IsFixedLength(true);

                entity.Property(e => e.ScursoPr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso_pr")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoPresenciaPosgrado>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Ccarrera, e.Cperiodo, e.Calumno, e.Ccurricula, e.Ccurso });

                entity.ToTable("alumno_presencia_posgrado");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AlumnoProceso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_proceso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cempresa).HasColumnName("cempresa");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Csolicitud).HasColumnName("csolicitud");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AlumnoPromedioGeneral>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Ccarrera, e.Calumno });

                entity.ToTable("alumno_promedio_general");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.CperiodoUltimo).HasColumnName("cperiodo_ultimo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");
            });

            modelBuilder.Entity<AlumnoProrroga>(entity =>
            {
                entity.HasKey(e => e.Cprorroga);

                entity.ToTable("alumno_prorroga");

                entity.Property(e => e.Cprorroga).HasColumnName("cprorroga");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AlumnoPuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_puesto");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dsegmento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dsegmento");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nalumnos).HasColumnName("nalumnos");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<AlumnoQr>(entity =>
            {
                entity.HasKey(e => e.Calumno);

                entity.ToTable("alumno_qr");

                entity.Property(e => e.Calumno)
                    .ValueGeneratedNever()
                    .HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.ContentType).HasMaxLength(500);

                entity.Property(e => e.Estado)
                    .HasColumnName("estado")
                    .HasComment("1 : pendiente, 2 : procesado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FileName).HasMaxLength(500);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Qr)
                    .HasColumnType("image")
                    .HasColumnName("qr");
            });

            modelBuilder.Entity<AlumnoQueja>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_queja");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Garea).HasColumnName("garea");

                entity.Property(e => e.Gservicio).HasColumnName("gservicio");

                entity.Property(e => e.Svez)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svez")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoRecategorizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_recategorizacion");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CcatclAsignado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccatcl_asignado")
                    .IsFixedLength(true);

                entity.Property(e => e.CcatclPropuesto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccatcl_propuesto")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccnben)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccnben")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Gconvenio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gconvenio")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Iagua)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iagua");

                entity.Property(e => e.IalquilerPension)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ialquiler_pension");

                entity.Property(e => e.Ialumno)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ialumno");

                entity.Property(e => e.Ieducacion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ieducacion");

                entity.Property(e => e.Ihipoteca)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ihipoteca");

                entity.Property(e => e.Iluz)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iluz");

                entity.Property(e => e.Imadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("imadre");

                entity.Property(e => e.Iotros)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iotros");

                entity.Property(e => e.Ipadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ipadre");

                entity.Property(e => e.Ipredial)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ipredial");

                entity.Property(e => e.Isalud)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("isalud");

                entity.Property(e => e.Itelefono)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("itelefono");

                entity.Property(e => e.NcargaFamiliar).HasColumnName("ncarga_familiar");

                entity.Property(e => e.Pdscto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("pdscto");
            });

            modelBuilder.Entity<AlumnoReclamoC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_reclamo_c");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FrecojoPack)
                    .HasColumnType("datetime")
                    .HasColumnName("frecojo_pack");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<AlumnoReclamoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_reclamo_d");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FdevolucionProf)
                    .HasColumnType("datetime")
                    .HasColumnName("fdevolucion_prof");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Freclamo)
                    .HasColumnType("datetime")
                    .HasColumnName("freclamo");

                entity.Property(e => e.FrecojoAlumno)
                    .HasColumnType("datetime")
                    .HasColumnName("frecojo_alumno");

                entity.Property(e => e.SdevolucionProf).HasColumnName("sdevolucion_prof");

                entity.Property(e => e.SrecojoAlumno).HasColumnName("srecojo_alumno");
            });

            modelBuilder.Entity<AlumnoRegistroTitulo>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Calumno });

                entity.ToTable("alumno_registro_titulo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.ContentType).HasMaxLength(500);

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FileName).HasMaxLength(500);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Qr)
                    .HasColumnType("image")
                    .HasColumnName("qr");

                entity.Property(e => e.ResolucionAnio).HasColumnName("resolucion_anio");

                entity.Property(e => e.ResolucionNro).HasColumnName("resolucion_nro");
            });

            modelBuilder.Entity<AlumnoReporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_reportes");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.GtipoReporte).HasColumnName("gtipo_reporte");

                entity.Property(e => e.Nimpresion).HasColumnName("nimpresion");
            });

            modelBuilder.Entity<AlumnoResolucion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Calumno });

                entity.ToTable("alumno_resolucion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nomina1).HasColumnName("nomina1");

                entity.Property(e => e.Nomina2).HasColumnName("nomina2");

                entity.Property(e => e.Nomina3).HasColumnName("nomina3");

                entity.Property(e => e.Resolucion1).HasColumnName("resolucion1");
            });

            modelBuilder.Entity<AlumnoRestriccion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_restriccion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Gcaso).HasColumnName("gcaso");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<AlumnoRestriccionPsicologium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_restriccion_psicologia");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Gcaso).HasColumnName("gcaso");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<AlumnoRestringeExaman>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota })
                    .HasName("PK__alumno_r__3C4348C66FD32C22");

                entity.ToTable("alumno_restringe_examen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dmotivo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dmotivo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AlumnoRestringeExamenH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_restringe_examen_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmotivo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dmotivo");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AlumnoRestringeMatricula>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("alumno_restringe_matricula");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("motivo");
            });

            modelBuilder.Entity<AlumnoRetiro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_retiro");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fconfirmacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fconfirmacion");

                entity.Property(e => e.Ftransaccion)
                    .HasColumnType("datetime")
                    .HasColumnName("ftransaccion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmodulo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("gmodulo");

                entity.Property(e => e.Gmotivo).HasColumnName("gmotivo");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<AlumnoSeguroMed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_seguro_med");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpoliza)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("cpoliza")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");
            });

            modelBuilder.Entity<AlumnoVirtual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumno_virtual");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat");
            });

            modelBuilder.Entity<AlumnosPotenciale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumnos_potenciales");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.I20091).HasColumnName("i20091");

                entity.Property(e => e.I20092).HasColumnName("i20092");
            });

            modelBuilder.Entity<AlumnosRindieron>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("alumnos_rindieron");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccarrera)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Cmodalidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cmodalidad");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Pe)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pe");

                entity.Property(e => e.Pf1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pf1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pf2");
            });

            modelBuilder.Entity<Aplicacion>(entity =>
            {
                entity.HasKey(e => e.Caplicacion)
                    .HasName("PK__aplicacion__67E9567B");

                entity.ToTable("aplicacion");

                entity.Property(e => e.Caplicacion)
                    .ValueGeneratedNever()
                    .HasColumnName("caplicacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cversion).HasColumnName("cversion");

                entity.Property(e => e.Daplicacion)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("daplicacion");

                entity.Property(e => e.Ddirectoriod)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ddirectoriod");

                entity.Property(e => e.Ddirectorioo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ddirectorioo");

                entity.Property(e => e.Ddirectoriop)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ddirectoriop");

                entity.Property(e => e.Dini)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dini");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ruta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ruta");

                entity.Property(e => e.Saplicacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saplicacion");

                entity.Property(e => e.Tactualiza)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tactualiza");

                entity.Property(e => e.Tversion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tversion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<AreaAcademica>(entity =>
            {
                entity.HasKey(e => new { e.Cdepartamento, e.Carea });

                entity.ToTable("area_academica");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Carea)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("carea");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Darea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("darea");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sarea)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sarea");
            });

            modelBuilder.Entity<AreaEvaluacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("area_evaluacion");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Darea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("darea");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Sarea)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sarea");
            });

            modelBuilder.Entity<Artistum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("artista");

                entity.Property(e => e.Idartista).HasColumnName("idartista");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre")
                    .IsFixedLength(true);

                entity.Property(e => e.Votos).HasColumnName("votos");
            });

            modelBuilder.Entity<Asiento01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asiento01");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cctaco");

                entity.Property(e => e.CctacoD)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cctaco_d");

                entity.Property(e => e.CctacoH)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cctaco_h");

                entity.Property(e => e.Celaboracion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("celaboracion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dconcepto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dconcepto");

                entity.Property(e => e.DcondVenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dcond_venta");

                entity.Property(e => e.Dinstitucion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.Dperiodo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Dprograma)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsDeTutoria).HasColumnName("es_de_tutoria");

                entity.Property(e => e.Fcontable).HasColumnType("datetime");

                entity.Property(e => e.Femision).HasColumnType("datetime");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.GcondicionVenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("gcondicion_venta");

                entity.Property(e => e.ImporteImpuesto10)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_impuesto_10");

                entity.Property(e => e.ImporteImpuesto5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_impuesto_5");

                entity.Property(e => e.MontoBeneficioInteraccion)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("monto_beneficio_interaccion");

                entity.Property(e => e.NmontoBolsa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bolsa");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoGa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_ga");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoInteres)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_interes");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_pago");

                entity.Property(e => e.NmontoTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_total");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.NreferenteANmesCuota).HasColumnName("nreferente_a_nmes_cuota");

                entity.Property(e => e.Scontenido)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("scontenido");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.Property(e => e.Tcarrera)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("tcarrera");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");
            });

            modelBuilder.Entity<AsientoDiarioDetalleTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asiento_diario_detalle_temp");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cctaco");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.CndAsientoControlId).HasColumnName("cnd_asiento_control_id");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dconcepto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dconcepto");

                entity.Property(e => e.Dctaco)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dctaco");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsDeTutoria).HasColumnName("es_de_tutoria");

                entity.Property(e => e.FechaAsiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fecha_asiento");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("grupo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NmontoBolsa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bolsa");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoGa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_ga");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoInteres)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_interes");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_pago");

                entity.Property(e => e.NreferenteANmesCuota).HasColumnName("nreferente_a_nmes_cuota");

                entity.Property(e => e.Sprograma)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sprograma");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<Asis01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asis01");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CprofesorDigita).HasColumnName("cprofesor_digita");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AsistWebAcumula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asist_web_acumula");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AsistWebAcumulaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asist_web_acumula_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AsistWebAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asist_web_alumno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.FasistenciaMod)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistenciaMod");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<AsistWebProfesor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asist_web_profesor");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CdireccionIp)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("cdireccion_ip");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dtema)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("dtema");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<AsistenciaCsir>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asistencia_csir");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gasistencia).HasColumnName("gasistencia");

                entity.Property(e => e.Gbimestre).HasColumnName("gbimestre");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Ninasinjus).HasColumnName("ninasinjus");

                entity.Property(e => e.Ninasjus).HasColumnName("ninasjus");

                entity.Property(e => e.Ntardanza).HasColumnName("ntardanza");

                entity.Property(e => e.NtardanzaInjus).HasColumnName("ntardanza_injus");
            });

            modelBuilder.Entity<AsistenciaFormacion>(entity =>
            {
                entity.HasKey(e => new { e.Cprofesor, e.Fecha, e.Hformacion })
                    .HasName("PK__asistencia_forma__72A6DC10");

                entity.ToTable("asistencia_formacion");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Hformacion)
                    .HasColumnType("datetime")
                    .HasColumnName("hformacion");

                entity.Property(e => e.Fhmarca)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarca");
            });

            modelBuilder.Entity<AspNetRole>(entity =>
            {
                entity.HasIndex(e => e.Name, "RoleNameIndex")
                    .IsUnique();

                entity.Property(e => e.Id).HasMaxLength(128);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(256);
            });

            modelBuilder.Entity<AspNetUser>(entity =>
            {
                entity.HasIndex(e => e.UserName, "UserNameIndex")
                    .IsUnique();

                entity.Property(e => e.Id).HasMaxLength(128);

                entity.Property(e => e.Email).HasMaxLength(256);

                entity.Property(e => e.LockoutEndDateUtc).HasColumnType("datetime");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(256);
            });

            modelBuilder.Entity<AspNetUserClaim>(entity =>
            {
                entity.HasIndex(e => e.UserId, "IX_UserId");

                entity.Property(e => e.UserId)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserClaims)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId");
            });

            modelBuilder.Entity<AspNetUserLogin>(entity =>
            {
                entity.HasKey(e => new { e.LoginProvider, e.ProviderKey, e.UserId })
                    .HasName("PK_dbo.AspNetUserLogins");

                entity.HasIndex(e => e.UserId, "IX_UserId");

                entity.Property(e => e.LoginProvider).HasMaxLength(128);

                entity.Property(e => e.ProviderKey).HasMaxLength(128);

                entity.Property(e => e.UserId).HasMaxLength(128);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserLogins)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId");
            });

            modelBuilder.Entity<AspNetUserRole>(entity =>
            {
                entity.HasKey(e => new { e.UserId, e.RoleId })
                    .HasName("PK_dbo.AspNetUserRoles");

                entity.HasIndex(e => e.RoleId, "IX_RoleId");

                entity.HasIndex(e => e.UserId, "IX_UserId");

                entity.Property(e => e.UserId).HasMaxLength(128);

                entity.Property(e => e.RoleId).HasMaxLength(128);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.AspNetUserRoles)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserRoles)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId");
            });

            modelBuilder.Entity<Aula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Daula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("daula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcanon).HasColumnName("gcanon");

                entity.Property(e => e.Gconvertidor).HasColumnName("gconvertidor");

                entity.Property(e => e.Gecran).HasColumnName("gecran");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gpc).HasColumnName("gpc");

                entity.Property(e => e.Gretroproy).HasColumnName("gretroproy");

                entity.Property(e => e.GtipoAula).HasColumnName("gtipo_aula");

                entity.Property(e => e.Gtv).HasColumnName("gtv");

                entity.Property(e => e.Gvhs).HasColumnName("gvhs");

                entity.Property(e => e.Ncapacidad).HasColumnName("ncapacidad");

                entity.Property(e => e.NcapacidadA).HasColumnName("ncapacidad_a");

                entity.Property(e => e.NcapacidadB).HasColumnName("ncapacidad_b");

                entity.Property(e => e.NcapacidadC).HasColumnName("ncapacidad_c");

                entity.Property(e => e.NcapacidadMax).HasColumnName("ncapacidad_max");

                entity.Property(e => e.Nfotos).HasColumnName("nfotos");

                entity.Property(e => e.Nip)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Npiso).HasColumnName("npiso");

                entity.Property(e => e.Saula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saula");
            });

            modelBuilder.Entity<AulaCurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula_curso");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AulaCursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula_curso_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AulaDisp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula_disp");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<AulaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Daula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("daula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoAula).HasColumnName("gtipo_aula");

                entity.Property(e => e.Ncapacidad).HasColumnName("ncapacidad");

                entity.Property(e => e.NcapacidadA).HasColumnName("ncapacidad_a");

                entity.Property(e => e.NcapacidadB).HasColumnName("ncapacidad_b");

                entity.Property(e => e.NcapacidadC).HasColumnName("ncapacidad_c");

                entity.Property(e => e.NcapacidadMax).HasColumnName("ncapacidad_max");

                entity.Property(e => e.Nip)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Npiso).HasColumnName("npiso");

                entity.Property(e => e.Saula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saula");
            });

            modelBuilder.Entity<AulaSoftware>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aula_software");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Csoftware).HasColumnName("csoftware");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<AulasHorario>(entity =>
            {
                entity.HasKey(e => e.IdAulas);

                entity.ToTable("aulas_horarios");

                entity.Property(e => e.IdAulas)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_aulas");

                entity.Property(e => e.Alumnos)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("alumnos");

                entity.Property(e => e.Caula)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("caula");

                entity.Property(e => e.Estado)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("estado");

                entity.Property(e => e.Horafin)
                    .HasColumnType("datetime")
                    .HasColumnName("horafin");

                entity.Property(e => e.Horainicio)
                    .HasColumnType("datetime")
                    .HasColumnName("horainicio");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("id");

                entity.Property(e => e.Jueves)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("jueves");

                entity.Property(e => e.Lunes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lunes");

                entity.Property(e => e.Martes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("martes");

                entity.Property(e => e.Miercoles)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("miercoles");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ncapacidad");

                entity.Property(e => e.Sabado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sabado");

                entity.Property(e => e.Saula)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("saula");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");

                entity.Property(e => e.Viernes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("viernes");
            });

            modelBuilder.Entity<AutorizaExaman>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("autoriza_examen");

                entity.Property(e => e.Gavance).HasColumnName("gavance");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.GdeudaVencida).HasColumnName("gdeuda_vencida");

                entity.Property(e => e.Granking).HasColumnName("granking");

                entity.Property(e => e.Ncaso).HasColumnName("ncaso");

                entity.Property(e => e.PminimoPago)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("pminimo_pago");
            });

            modelBuilder.Entity<AutorizaUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("autoriza_usuario");

                entity.HasIndex(e => new { e.Cperiodo, e.Ctabla, e.Citem, e.Cusuario }, "autoriza_usuario_01")
                    .IsUnique();

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");
            });

            modelBuilder.Entity<AutorizacionAlum>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Sorigen, e.GtipoAutorizacion });

                entity.ToTable("autorizacion_alum");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Sorigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sorigen")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoAutorizacion).HasColumnName("gtipo_autorizacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Ncurso).HasColumnName("ncurso");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<AutorizacionAlumH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("autorizacion_alum_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoAutorizacion).HasColumnName("gtipo_autorizacion");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Ncurso).HasColumnName("ncurso");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sorigen")
                    .IsFixedLength(true);

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<AutorizacionBloqueCursoFecha>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Nautorizacion });

                entity.ToTable("autorizacion_bloque_curso_fechas");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Cautorizacion)
                    .HasMaxLength(15)
                    .HasColumnName("cautorizacion");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fautorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fautorizacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(150)
                    .HasColumnName("motivo");

                entity.Property(e => e.Seguimiento)
                    .HasMaxLength(150)
                    .HasColumnName("seguimiento");
            });

            modelBuilder.Entity<AutorizacionBloqueCursoNota>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Nautorizacion });

                entity.ToTable("autorizacion_bloque_curso_notas");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cautorizacion)
                    .HasMaxLength(15)
                    .HasColumnName("cautorizacion");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fautorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fautorizacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(150)
                    .HasColumnName("motivo");

                entity.Property(e => e.Seguimiento)
                    .HasMaxLength(150)
                    .HasColumnName("seguimiento");
            });

            modelBuilder.Entity<AutorizacionCurso>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Sorigen, e.Ccurso, e.GtipoAutorizacion });

                entity.ToTable("autorizacion_curso");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Sorigen, e.Ccurso, e.GtipoAutorizacion }, "autorizacion_curso_01");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno }, "autorizacion_curso_02");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Sorigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sorigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoAutorizacion).HasColumnName("gtipo_autorizacion");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<AutorizacionCursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("autorizacion_curso_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoAutorizacion).HasColumnName("gtipo_autorizacion");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sorigen")
                    .IsFixedLength(true);

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<Aviso>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Caviso });

                entity.ToTable("aviso");

                entity.HasIndex(e => e.Caviso, "aviso01");

                entity.HasIndex(e => new { e.Cperiodo, e.GtipoAviso }, "aviso02");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Caviso).HasColumnName("caviso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Daviso)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("daviso");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoAviso)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_aviso")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAviso)
                    .HasColumnName("tipo_aviso")
                    .HasComment("1 (\"Profesor a Alumno\") 2 (\"Coordinador a Profesor\")");
            });

            modelBuilder.Entity<AvisoMovilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("aviso_movilidad");

                entity.Property(e => e.Caviso).HasColumnName("caviso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AvisoPersona>(entity =>
            {
                entity.HasKey(e => e.Idaviso);

                entity.ToTable("aviso_persona");

                entity.HasIndex(e => e.Cpersona, "aviso_persona01");

                entity.HasIndex(e => new { e.Caviso, e.Cpersona }, "aviso_persona02");

                entity.Property(e => e.Idaviso).HasColumnName("idaviso");

                entity.Property(e => e.Caviso).HasColumnName("caviso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.EstadoLectura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("estado_lectura");

                entity.Property(e => e.FLectura)
                    .HasColumnName("f_lectura")
                    .HasDefaultValueSql("((0))")
                    .HasComment("0 (No leído) 1 (Leído)");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AvisoPersonaWeb>(entity =>
            {
                entity.HasKey(e => new { e.Caviso, e.Cpersona })
                    .HasName("PK__aviso_persona_we__0C66AE13");

                entity.ToTable("aviso_persona_web");

                entity.Property(e => e.Caviso).HasColumnName("caviso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cmodificacio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacio");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<AvisoWeb>(entity =>
            {
                entity.HasKey(e => e.Caviso)
                    .HasName("PK__aviso_web__0A7E65A1");

                entity.ToTable("aviso_web");

                entity.Property(e => e.Caviso)
                    .ValueGeneratedNever()
                    .HasColumnName("caviso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Daviso)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("daviso");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");
            });

            modelBuilder.Entity<AxMatri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ax_matri");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccarrera)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccurso");

                entity.Property(e => e.Ciclo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ciclo");

                entity.Property(e => e.Curso)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<AxMatriculado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ax_matriculado");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccarrera)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Curso)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Matriculado).HasColumnName("matriculado");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<BancaBanco>(entity =>
            {
                entity.HasKey(e => e.Cbanco)
                    .HasName("PK_BANCA_BANCO");

                entity.ToTable("BANCA_BANCOS");

                entity.Property(e => e.Cbanco)
                    .ValueGeneratedNever()
                    .HasColumnName("CBANCO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dbanco)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DBANCO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Gtipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GTIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Sbanco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SBANCO");
            });

            modelBuilder.Entity<BancaCatalogo>(entity =>
            {
                entity.HasKey(e => e.Ccatalogo);

                entity.ToTable("BANCA_CATALOGO");

                entity.Property(e => e.Ccatalogo)
                    .ValueGeneratedNever()
                    .HasColumnName("CCATALOGO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dcatalogo)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DCATALOGO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Scatalogo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SCATALOGO");
            });

            modelBuilder.Entity<BancaCatalogoTarifa>(entity =>
            {
                entity.HasKey(e => new { e.Ccatalogo, e.Ctarifa });

                entity.ToTable("BANCA_CATALOGO_TARIFA");

                entity.Property(e => e.Ccatalogo).HasColumnName("CCATALOGO");

                entity.Property(e => e.Ctarifa).HasColumnName("CTARIFA");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.HasOne(d => d.CcatalogoNavigation)
                    .WithMany(p => p.BancaCatalogoTarifas)
                    .HasForeignKey(d => d.Ccatalogo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_catalogo_tarifa_a_catalogo");

                entity.HasOne(d => d.CtarifaNavigation)
                    .WithMany(p => p.BancaCatalogoTarifas)
                    .HasForeignKey(d => d.Ctarifa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_catalogo_tarifa_a_tarifa");
            });

            modelBuilder.Entity<BancaCngAsiento>(entity =>
            {
                entity.HasKey(e => new { e.CndAsientoControlId, e.Sgrupo, e.Cctaco, e.Debhab })
                    .HasName("PK__banca_cng_asient__7E5885DE");

                entity.ToTable("banca_cng_asiento");

                entity.Property(e => e.CndAsientoControlId).HasColumnName("cnd_asiento_control_id");

                entity.Property(e => e.Sgrupo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo");

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctaco");

                entity.Property(e => e.Debhab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("debhab");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<BancaCngAsientoControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_cng_asiento_control");

                entity.Property(e => e.AaaammddDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("aaaammdd_desde");

                entity.Property(e => e.AaaammddHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("aaaammdd_hasta");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.CndAsientoControlId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cnd_asiento_control_id");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.NanoContable).HasColumnName("nano_contable");

                entity.Property(e => e.NdiaContable).HasColumnName("ndia_contable");

                entity.Property(e => e.NmesContable).HasColumnName("nmes_contable");

                entity.Property(e => e.Sasiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sasiento");

                entity.Property(e => e.ValidaCuadre)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("valida_cuadre");

                entity.Property(e => e.ValidaCuenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("valida_cuenta");
            });

            modelBuilder.Entity<BancaCngAsientoDataIngreso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_cng_asiento_data_ingreso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cctaco");

                entity.Property(e => e.CndAsientoControlId).HasColumnName("cnd_asiento_control_id");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dconcepto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dconcepto");

                entity.Property(e => e.Dctaco)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dctaco");

                entity.Property(e => e.EsDeTutoria).HasColumnName("es_de_tutoria");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.Grupo).HasColumnName("grupo");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.NmontoBolsa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bolsa");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoGa)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_ga");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoInteres)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_interes");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_pago");

                entity.Property(e => e.NreferenteANmesCuota).HasColumnName("nreferente_a_nmes_cuota");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<BancaComision>(entity =>
            {
                entity.HasKey(e => e.Ccomprobante);

                entity.ToTable("banca_comision");

                entity.Property(e => e.Ccomprobante)
                    .ValueGeneratedNever()
                    .HasColumnName("ccomprobante");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NmontoComision)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_comision");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");
            });

            modelBuilder.Entity<BancaComisionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_comision_h");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NmontoComision)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_comision");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");
            });

            modelBuilder.Entity<BancaComprobante>(entity =>
            {
                entity.HasKey(e => e.Ccomprobante)
                    .HasName("PK__banca_comprobant__456A2145");

                entity.ToTable("banca_comprobante");

                entity.HasIndex(e => e.Cinteraccion, "banca_compr_interacc");

                entity.Property(e => e.Ccomprobante)
                    .ValueGeneratedNever()
                    .HasColumnName("ccomprobante");

                entity.Property(e => e.BoletaExterna).HasColumnName("boleta_externa");

                entity.Property(e => e.CcomprobanteRelacionado).HasColumnName("ccomprobante_relacionado");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Celaboracion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celaboracion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Fimpresion)
                    .HasColumnType("datetime")
                    .HasColumnName("fimpresion");

                entity.Property(e => e.FlagDevolucion).HasColumnName("flag_devolucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Formato)
                    .HasColumnName("formato")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.Grupo)
                    .HasColumnName("grupo")
                    .HasComment("1(Presencial)\r\n2(Postgrado)\r\n3(Virtual)\r\n4(Otros)");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoTotal)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_total");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.NotaCreditoExterna)
                    .HasColumnName("nota_credito_externa")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NporcentajeImpuesto)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nporcentaje_impuesto");

                entity.Property(e => e.Nserie).HasColumnName("nserie");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.Property(e => e.Tcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcarrera");

                entity.Property(e => e.Tipofactura).HasColumnName("tipofactura");

                entity.Property(e => e.Tlugar)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tlugar");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Truc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("truc");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");

                entity.HasOne(d => d.CinteraccionNavigation)
                    .WithMany(p => p.BancaComprobantes)
                    .HasForeignKey(d => d.Cinteraccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_comprobante_a_interaccion");
            });

            modelBuilder.Entity<BancaComprobanteBorrame>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_comprobante_borrame");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteRelacionado).HasColumnName("ccomprobante_relacionado");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Celaboracion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celaboracion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Fimpresion)
                    .HasColumnType("datetime")
                    .HasColumnName("fimpresion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoTotal)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_total");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.NporcentajeImpuesto)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nporcentaje_impuesto");

                entity.Property(e => e.Nserie).HasColumnName("nserie");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.Property(e => e.Tcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcarrera");

                entity.Property(e => e.Tlugar)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tlugar");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Truc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("truc");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");
            });

            modelBuilder.Entity<BancaComprobanteD>(entity =>
            {
                entity.HasKey(e => e.Cmovimiento)
                    .HasName("PK__banca_comprobant__48468DF0");

                entity.ToTable("banca_comprobante_d");

                entity.Property(e => e.Cmovimiento)
                    .ValueGeneratedNever()
                    .HasColumnName("cmovimiento");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteD)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccomprobante_d");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.HasOne(d => d.CcomprobanteNavigation)
                    .WithMany(p => p.BancaComprobanteDs)
                    .HasForeignKey(d => d.Ccomprobante)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_comprobante_d_a_comprobante");
            });

            modelBuilder.Entity<BancaComprobanteDBorrame>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_comprobante_d_borrame");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteD)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccomprobante_d");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BancaComprobanteH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_comprobante_h");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteRelacionado).HasColumnName("ccomprobante_relacionado");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Celaboracion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celaboracion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Fimpresion)
                    .HasColumnType("datetime")
                    .HasColumnName("fimpresion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_bruto");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_impuesto");

                entity.Property(e => e.NmontoTotal)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_total");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.NporcentajeImpuesto)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nporcentaje_impuesto");

                entity.Property(e => e.Nserie).HasColumnName("nserie");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.Property(e => e.Tcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcarrera");

                entity.Property(e => e.Tlugar)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tlugar");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Truc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("truc");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");
            });

            modelBuilder.Entity<BancaConcepto>(entity =>
            {
                entity.HasKey(e => e.Cconcepto);

                entity.ToTable("BANCA_CONCEPTO");

                entity.Property(e => e.Cconcepto)
                    .ValueGeneratedNever()
                    .HasColumnName("CCONCEPTO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dconcepto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DCONCEPTO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Sconcepto)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SCONCEPTO");

                entity.Property(e => e.Sorigen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.Sresultado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Suso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("suso");
            });

            modelBuilder.Entity<BancaContenido>(entity =>
            {
                entity.HasKey(e => e.Ccontenido);

                entity.ToTable("BANCA_CONTENIDO");

                entity.Property(e => e.Ccontenido)
                    .ValueGeneratedNever()
                    .HasColumnName("CCONTENIDO");

                entity.Property(e => e.Cconcepto).HasColumnName("CCONCEPTO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dcontenido)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DCONTENIDO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Gvisible)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvisible")
                    .IsFixedLength(true);

                entity.Property(e => e.Habilitado).HasColumnName("habilitado");

                entity.Property(e => e.Precio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("precio");

                entity.Property(e => e.Scontenido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SCONTENIDO");

                entity.Property(e => e.SmomentoAplicacionImpuesto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smomento_aplicacion_impuesto");

                entity.HasOne(d => d.CconceptoNavigation)
                    .WithMany(p => p.BancaContenidos)
                    .HasForeignKey(d => d.Cconcepto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_banca_contenido_a_concepto");
            });

            modelBuilder.Entity<BancaCriterioObligacion>(entity =>
            {
                entity.HasKey(e => new { e.CgrupoCriterio, e.Cperiodo, e.Ccarrera, e.Cmodalidad, e.Cestancia });

                entity.ToTable("BANCA_CRITERIO_OBLIGACION");

                entity.HasIndex(e => e.Ccriterio, "ui_criterio_obligacion_ccriterio")
                    .IsUnique();

                entity.Property(e => e.CgrupoCriterio).HasColumnName("CGRUPO_CRITERIO");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Cmodalidad).HasColumnName("CMODALIDAD");

                entity.Property(e => e.Cestancia).HasColumnName("CESTANCIA");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccriterio).HasColumnName("ccriterio");

                entity.Property(e => e.Ccronograma).HasColumnName("CCRONOGRAMA");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BancaCronograma>(entity =>
            {
                entity.HasKey(e => e.Ccronograma);

                entity.ToTable("BANCA_CRONOGRAMA");

                entity.Property(e => e.Ccronograma)
                    .ValueGeneratedNever()
                    .HasColumnName("CCRONOGRAMA");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cprecio).HasColumnName("CPRECIO");

                entity.Property(e => e.Cproducto).HasColumnName("CPRODUCTO");

                entity.Property(e => e.Dcronograma)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DCRONOGRAMA");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Scronograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SCRONOGRAMA");
            });

            modelBuilder.Entity<BancaCronogramaContenido>(entity =>
            {
                entity.HasKey(e => new { e.Ccronograma, e.Ccontenido });

                entity.ToTable("BANCA_CRONOGRAMA_CONTENIDO");

                entity.Property(e => e.Ccronograma).HasColumnName("CCRONOGRAMA");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Crebaja).HasColumnName("CREBAJA");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Imonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imonto");

                entity.Property(e => e.NmontoGastoAdministrativo)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO_GASTO_ADMINISTRATIVO");

                entity.Property(e => e.NporcentajeInteresDiario)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("NPORCENTAJE_INTERES_DIARIO");

                entity.HasOne(d => d.CcontenidoNavigation)
                    .WithMany(p => p.BancaCronogramaContenidos)
                    .HasForeignKey(d => d.Ccontenido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_cronograma_definicion_a_contenido");

                entity.HasOne(d => d.CcronogramaNavigation)
                    .WithMany(p => p.BancaCronogramaContenidos)
                    .HasForeignKey(d => d.Ccronograma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_cronograma_contenido_a_cronograma");
            });

            modelBuilder.Entity<BancaCronogramaContenidoTemp>(entity =>
            {
                entity.HasKey(e => new { e.Ccronograma, e.Ccontenido, e.Calumno });

                entity.ToTable("BANCA_CRONOGRAMA_CONTENIDO_TEMP");

                entity.Property(e => e.Ccronograma).HasColumnName("CCRONOGRAMA");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Nprecio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NPRECIO");
            });

            modelBuilder.Entity<BancaDefinicion>(entity =>
            {
                entity.HasKey(e => e.Cdefinicion);

                entity.ToTable("BANCA_DEFINICION");

                entity.Property(e => e.Cdefinicion)
                    .ValueGeneratedNever()
                    .HasColumnName("CDEFINICION");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Ddefinicion)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DDEFINICION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Sdefinicion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SDEFINICION");
            });

            modelBuilder.Entity<BancaFormaPagoConfigura>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.SquePagar, e.SmedioPago, e.Flimite })
                    .HasName("pk_banca_forma_pago");

                entity.ToTable("banca_forma_pago_configura");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.SquePagar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sque_pagar");

                entity.Property(e => e.SmedioPago)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smedio_pago");

                entity.Property(e => e.Flimite)
                    .HasColumnType("datetime")
                    .HasColumnName("flimite");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NporcentajeDescuento)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nporcentaje_descuento");
            });

            modelBuilder.Entity<BancaInteraccion>(entity =>
            {
                entity.HasKey(e => e.Cinteraccion);

                entity.ToTable("BANCA_INTERACCION");

                entity.Property(e => e.Cinteraccion)
                    .ValueGeneratedNever()
                    .HasColumnName("CINTERACCION");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");
            });

            modelBuilder.Entity<BancaInteraccionCurso>(entity =>
            {
                entity.HasKey(e => new { e.Cinteraccion, e.Ccurso });

                entity.ToTable("BANCA_INTERACCION_CURSO");

                entity.Property(e => e.Cinteraccion).HasColumnName("CINTERACCION");

                entity.Property(e => e.Ccurso).HasColumnName("CCURSO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.GtipoCredito).HasColumnName("GTIPO_CREDITO");

                entity.Property(e => e.NcreditoReal).HasColumnName("NCREDITO_REAL");

                entity.HasOne(d => d.CinteraccionNavigation)
                    .WithMany(p => p.BancaInteraccionCursos)
                    .HasForeignKey(d => d.Cinteraccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_interaccion_curso_a_interaccion");
            });

            modelBuilder.Entity<BancaMctaco>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_mctaco");

                entity.HasIndex(e => new { e.Ctpplc, e.Cctaco }, "iu_ctpplc_cctaco")
                    .IsUnique();

                entity.Property(e => e.Cclctc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cclctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaaj)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaaj")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaau)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaau")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctacc)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctacc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cgrctc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cgrctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cnvsal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cnvsal")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpane)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpane")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpctc)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ctpctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpplc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpplc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpref)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpref")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dabctc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dabctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Dctaco)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Sajust)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sajust")
                    .IsFixedLength(true);

                entity.Property(e => e.Scontr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scontr")
                    .IsFixedLength(true);

                entity.Property(e => e.Sctaco)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Sctpry)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sctpry")
                    .IsFixedLength(true);

                entity.Property(e => e.Smonna)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("smonna")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<BancaObligacion>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Calumno, e.Cperiodo })
                    .HasName("PK_BANCA_OBLIGACION_3C");

                entity.ToTable("BANCA_OBLIGACION");

                entity.HasIndex(e => new { e.Calumno, e.Cperiodo, e.Nsecuencia }, "iu_obligacion_al_pe_control1")
                    .IsUnique();

                entity.HasIndex(e => e.Cobligacion, "iu_obligacion_al_pe_control2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cpersona }, "iu_obligacion_al_pe_llave");

                entity.HasIndex(e => e.Cpersona, "iu_obligacion_al_pe_persona");

                entity.HasIndex(e => new { e.Calumno, e.Cperiodo, e.Nsecuencia }, "iu_obligacion_al_pe_se")
                    .IsUnique();

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<BancaObligacion3101>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_3101");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<BancaObligacionBeneficio>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Ccontenido });

                entity.ToTable("BANCA_OBLIGACION_BENEFICIO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Nporcentaje)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("NPORCENTAJE");

                entity.Property(e => e.Tbeneficio)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("TBENEFICIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");

                entity.HasOne(d => d.CcontenidoNavigation)
                    .WithMany(p => p.BancaObligacionBeneficios)
                    .HasForeignKey(d => d.Ccontenido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_beneficio_a_contenido");

                entity.HasOne(d => d.CobligacionNavigation)
                    .WithMany(p => p.BancaObligacionBeneficios)
                    .HasPrincipalKey(p => p.Cobligacion)
                    .HasForeignKey(d => d.Cobligacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_beneficio_a_obligacion");
            });

            modelBuilder.Entity<BancaObligacionBeneficioH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_beneficio_h");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Ctipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Nporcentaje)
                    .HasColumnType("decimal(5, 3)")
                    .HasColumnName("NPORCENTAJE");

                entity.Property(e => e.Tbeneficio)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("TBENEFICIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<BancaObligacionContenido>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Ccontenido });

                entity.ToTable("BANCA_OBLIGACION_CONTENIDO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Caprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("caprobacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Faprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("faprobacion");

                entity.Property(e => e.Fcontable)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.IsaldoDw)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("isaldo_dw");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");

                entity.HasOne(d => d.CcontenidoNavigation)
                    .WithMany(p => p.BancaObligacionContenidos)
                    .HasForeignKey(d => d.Ccontenido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_contenido_a_contenido");

                entity.HasOne(d => d.CobligacionNavigation)
                    .WithMany(p => p.BancaObligacionContenidos)
                    .HasPrincipalKey(p => p.Cobligacion)
                    .HasForeignKey(d => d.Cobligacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_contenido_a_obligacion");
            });

            modelBuilder.Entity<BancaObligacionContenidoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_contenido_h");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Fcontable)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<BancaObligacionContenidoSinMora>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Ccontenido })
                    .HasName("PK_BANCA_OBLIGACION_CONTENIDO_SIN_MORA");

                entity.ToTable("banca_obligacion_contenido_sin_mora");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.CcreacionContenido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION_contenido");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionContenido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION_contenido");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FcreacionContenido)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION_contenido");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("FHASTA");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionContenido)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION_contenido");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");
            });

            modelBuilder.Entity<BancaObligacionContenidoSinMoraH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_contenido_sin_mora_h");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.CcreacionContenido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION_contenido");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionContenido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION_contenido");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FcreacionContenido)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION_contenido");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("FHASTA");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionContenido)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION_contenido");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<BancaObligacionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<BancaObligacionMora>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Ccontenido, e.Ninterno })
                    .HasName("pk_banca_obligacion_moras");

                entity.ToTable("banca_obligacion_moras");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.IgastoRebaja)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("igasto_rebaja");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.ImorasRebaja)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("imoras_rebaja");

                entity.Property(e => e.Mdescripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("mdescripcion");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");
            });

            modelBuilder.Entity<BancaObligacionMovimiento>(entity =>
            {
                entity.HasKey(e => new { e.Cobligacion, e.Calumno, e.Cperiodo, e.Ccontenido, e.Ndiferencial });

                entity.ToTable("BANCA_OBLIGACION_MOVIMIENTO");

                entity.HasIndex(e => new { e.Cobligacion, e.Calumno, e.Cperiodo, e.Ccontenido, e.Stipo, e.Cinteraccion }, "banca_obligacion_03");

                entity.HasIndex(e => e.Cinteraccion, "banca_obligacion_movimiento_cinteraccion");

                entity.HasIndex(e => new { e.Calumno, e.Cperiodo, e.Ccontenido, e.Stipo }, "banca_obligacion_movimiento_ik2");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ndiferencial).HasColumnName("NDIFERENCIAL");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cmovimiento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CMOVIMIENTO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fmovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FMOVIMIENTO");

                entity.Property(e => e.Fpublicacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FPUBLICACION");

                entity.Property(e => e.ImporteContenido)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_contenido");

                entity.Property(e => e.ImporteImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_impuesto");

                entity.Property(e => e.NAlSaldo)
                    .HasColumnName("n_al_saldo")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NcreditoNormal)
                    .HasColumnName("ncredito_normal")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NcreditoPasante)
                    .HasColumnName("ncredito_pasante")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO");

                entity.Property(e => e.Nrequerimiento).HasColumnName("nrequerimiento");

                entity.Property(e => e.Nsumar).HasColumnName("NSUMAR");

                entity.Property(e => e.PorcImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("porc_impuesto");

                entity.Property(e => e.Scalculo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCALCULO");

                entity.Property(e => e.Sefecto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEFECTO");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.SorigenBeneficio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen_beneficio");

                entity.Property(e => e.Sresultado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.Property(e => e.Tmovimiento)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("TMOVIMIENTO");

                entity.Property(e => e.Trequerimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trequerimiento")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");

                entity.HasOne(d => d.CinteraccionNavigation)
                    .WithMany(p => p.BancaObligacionMovimientos)
                    .HasForeignKey(d => d.Cinteraccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_movimiento_a_interaccion");

                entity.HasOne(d => d.CobligacionNavigation)
                    .WithMany(p => p.BancaObligacionMovimientos)
                    .HasPrincipalKey(p => p.Cobligacion)
                    .HasForeignKey(d => d.Cobligacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_movimiento_a_obligacion");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.BancaObligacionMovimientos)
                    .HasForeignKey(d => new { d.Cobligacion, d.Ccontenido })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_obligacion_movimiento_a_obligacion_contenido");
            });

            modelBuilder.Entity<BancaObligacionMovimientoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_movimiento_h");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cmovimiento).HasColumnName("CMOVIMIENTO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fmovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FMOVIMIENTO");

                entity.Property(e => e.Fpublicacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FPUBLICACION");

                entity.Property(e => e.ImporteContenido)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_contenido");

                entity.Property(e => e.ImporteImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_impuesto");

                entity.Property(e => e.NAlSaldo).HasColumnName("n_al_saldo");

                entity.Property(e => e.NcreditoNormal).HasColumnName("ncredito_normal");

                entity.Property(e => e.NcreditoPasante).HasColumnName("ncredito_pasante");

                entity.Property(e => e.Ndiferencial).HasColumnName("NDIFERENCIAL");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO");

                entity.Property(e => e.Nsumar).HasColumnName("NSUMAR");

                entity.Property(e => e.PorcImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("porc_impuesto");

                entity.Property(e => e.Scalculo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCALCULO");

                entity.Property(e => e.Sefecto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEFECTO");

                entity.Property(e => e.Sorigen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.SorigenBeneficio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen_beneficio");

                entity.Property(e => e.Sresultado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.Property(e => e.Tmovimiento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("TMOVIMIENTO");

                entity.Property(e => e.Trequerimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trequerimiento");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<BancaObligacionMovimientoPago>(entity =>
            {
                entity.HasKey(e => e.Cpago);

                entity.ToTable("BANCA_OBLIGACION_MOVIMIENTO_PAGO");

                entity.HasIndex(e => e.Cinteraccion, "banca_obligacion_movimiento_pago_cinteraccion");

                entity.Property(e => e.Cpago)
                    .ValueGeneratedNever()
                    .HasColumnName("CPAGO");

                entity.Property(e => e.AquiPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("aqui_pago")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.CanjePublicitarioRrhh)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("canje_publicitario_rrhh")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cbanco).HasColumnName("CBANCO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cheques)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("cheques")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cinteraccion).HasColumnName("CINTERACCION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cnotacredeb).HasColumnName("CNOTACREDEB");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.CobranzaPorCobrar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("cobranza_por_cobrar")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.DepositosEnCuenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("depositos_en_cuenta")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Documenta)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("documenta");

                entity.Property(e => e.Efectivo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("efectivo")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("FPAGO");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.GclaseTarjeta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gclase_tarjeta")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoTarjeta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_tarjeta")
                    .IsFixedLength(true);

                entity.Property(e => e.NmontoBeneficio)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_BENEFICIO");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_BRUTO");

                entity.Property(e => e.NmontoGasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_GASTO");

                entity.Property(e => e.NmontoMora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_MORA");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_PAGO");

                entity.Property(e => e.NmontoSaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_SALDO");

                entity.Property(e => e.NroBoletaCheques)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nro_boleta_cheques");

                entity.Property(e => e.NroBoletaDepositosEnCuenta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nro_boleta_depositos_en_cuenta");

                entity.Property(e => e.Otros)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("otros");

                entity.Property(e => e.PagoExpress)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("pago_express")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TarjetaCredito)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("tarjeta_credito")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TarjetaDebito)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("tarjeta_debito")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tipofactura).HasColumnName("tipofactura");

                entity.Property(e => e.Tnumero)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TNUMERO");

                entity.Property(e => e.TtipoPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TTIPO_PAGO");

                entity.Property(e => e.VisionBanco)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("vision_banco")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.CbancoNavigation)
                    .WithMany(p => p.BancaObligacionMovimientoPagos)
                    .HasForeignKey(d => d.Cbanco)
                    .HasConstraintName("fk_pago_a_bancos");

                entity.HasOne(d => d.CcontenidoNavigation)
                    .WithMany(p => p.BancaObligacionMovimientoPagos)
                    .HasForeignKey(d => d.Ccontenido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_pago_a_contenido");

                entity.HasOne(d => d.CinteraccionNavigation)
                    .WithMany(p => p.BancaObligacionMovimientoPagos)
                    .HasForeignKey(d => d.Cinteraccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_pago_a_interaccion");
            });

            modelBuilder.Entity<BancaObligacionMovimientoPagoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_obligacion_movimiento_pago_h");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Cbanco).HasColumnName("CBANCO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cinteraccion).HasColumnName("CINTERACCION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cnotacredeb).HasColumnName("CNOTACREDEB");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cpago).HasColumnName("CPAGO");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("FAUDITORIA");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("FPAGO");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.GclaseTarjeta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gclase_tarjeta")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoTarjeta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_tarjeta")
                    .IsFixedLength(true);

                entity.Property(e => e.NmontoBeneficio)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_BENEFICIO");

                entity.Property(e => e.NmontoBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_BRUTO");

                entity.Property(e => e.NmontoGasto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_GASTO");

                entity.Property(e => e.NmontoMora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_MORA");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_PAGO");

                entity.Property(e => e.NmontoSaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMONTO_SALDO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Tnumero)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TNUMERO");

                entity.Property(e => e.TtipoPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TTIPO_PAGO");
            });

            modelBuilder.Entity<BancaPorcentajeIncremento>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccarrera, e.Ccurricula, e.Nciclo });

                entity.ToTable("banca_porcentaje_incremento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("porcentaje");
            });

            modelBuilder.Entity<BancaPorcentajeIncrementoConfigura>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_porcentaje_incremento_configura");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnterior).HasColumnName("cperiodo_anterior");
            });

            modelBuilder.Entity<BancaPrecio>(entity =>
            {
                entity.HasKey(e => e.Cprecio);

                entity.ToTable("BANCA_PRECIO");

                entity.Property(e => e.Cprecio)
                    .ValueGeneratedNever()
                    .HasColumnName("CPRECIO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dprecio)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPRECIO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Sprecio)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPRECIO");

                entity.Property(e => e.StipoPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo_precio");
            });

            modelBuilder.Entity<BancaPrecioDefinicion>(entity =>
            {
                entity.HasKey(e => new { e.Cprecio, e.Cdefinicion });

                entity.ToTable("BANCA_PRECIO_DEFINICION");

                entity.Property(e => e.Cprecio).HasColumnName("CPRECIO");

                entity.Property(e => e.Cdefinicion).HasColumnName("CDEFINICION");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Ncantidad).HasColumnName("NCANTIDAD");

                entity.Property(e => e.Nprecio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NPRECIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");

                entity.HasOne(d => d.CdefinicionNavigation)
                    .WithMany(p => p.BancaPrecioDefinicions)
                    .HasForeignKey(d => d.Cdefinicion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_precio_definicion_a_definicion");

                entity.HasOne(d => d.CprecioNavigation)
                    .WithMany(p => p.BancaPrecioDefinicions)
                    .HasForeignKey(d => d.Cprecio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_precio_definicio_a_precio");
            });

            modelBuilder.Entity<BancaPrecioDefinicionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_precio_definicion_h");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cdefinicion).HasColumnName("CDEFINICION");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cprecio).HasColumnName("CPRECIO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Ncantidad).HasColumnName("NCANTIDAD");

                entity.Property(e => e.Nprecio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NPRECIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<BancaPrecioH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("banca_precio_h");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprecio).HasColumnName("cprecio");

                entity.Property(e => e.Dprecio)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dprecio");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Sprecio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sprecio");

                entity.Property(e => e.StipoPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo_precio");
            });

            modelBuilder.Entity<BancaProducto>(entity =>
            {
                entity.HasKey(e => e.Cproducto);

                entity.ToTable("BANCA_PRODUCTO");

                entity.Property(e => e.Cproducto)
                    .ValueGeneratedNever()
                    .HasColumnName("CPRODUCTO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dproducto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPRODUCTO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Sproducto)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPRODUCTO");
            });

            modelBuilder.Entity<BancaProductoContenido>(entity =>
            {
                entity.HasKey(e => new { e.Cproducto, e.Ccontenido });

                entity.ToTable("BANCA_PRODUCTO_CONTENIDO");

                entity.Property(e => e.Cproducto).HasColumnName("CPRODUCTO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Nsecuencia).HasColumnName("NSECUENCIA");

                entity.HasOne(d => d.CcontenidoNavigation)
                    .WithMany(p => p.BancaProductoContenidos)
                    .HasForeignKey(d => d.Ccontenido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_producto_contenido_a_contenido");

                entity.HasOne(d => d.CproductoNavigation)
                    .WithMany(p => p.BancaProductoContenidos)
                    .HasForeignKey(d => d.Cproducto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_producto_contenido_a_producto");
            });

            modelBuilder.Entity<BancaTarifa>(entity =>
            {
                entity.HasKey(e => e.Ctarifa);

                entity.ToTable("BANCA_TARIFA");

                entity.Property(e => e.Ctarifa)
                    .ValueGeneratedNever()
                    .HasColumnName("CTARIFA");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Dtarifa)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DTARIFA");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Starifa)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STARIFA");
            });

            modelBuilder.Entity<BancaTarifaPrecio>(entity =>
            {
                entity.HasKey(e => new { e.Ctarifa, e.Cprecio });

                entity.ToTable("BANCA_TARIFA_PRECIO");

                entity.Property(e => e.Ctarifa).HasColumnName("CTARIFA");

                entity.Property(e => e.Cprecio).HasColumnName("CPRECIO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.HasOne(d => d.CprecioNavigation)
                    .WithMany(p => p.BancaTarifaPrecios)
                    .HasForeignKey(d => d.Cprecio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_tarifa_precio_a_precio");

                entity.HasOne(d => d.CtarifaNavigation)
                    .WithMany(p => p.BancaTarifaPrecios)
                    .HasForeignKey(d => d.Ctarifa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_tarifa_precio_a_tarifa");
            });

            modelBuilder.Entity<BancaUsuarioConfigura>(entity =>
            {
                entity.HasKey(e => new { e.Susuario, e.StipoUso })
                    .HasName("PK__banca_usuario_co__4381D8D3");

                entity.ToTable("banca_usuario_configura");

                entity.Property(e => e.Susuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario");

                entity.Property(e => e.StipoUso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo_uso");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NnumeroUltimo).HasColumnName("nnumero_ultimo");

                entity.Property(e => e.NserieUltimo).HasColumnName("nserie_ultimo");

                entity.Property(e => e.Tlugar)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tlugar");

                entity.Property(e => e.Tobjeto)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto");

                entity.Property(e => e.Tobjeto2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto2");
            });

            modelBuilder.Entity<BancaUsuarioConfiguraTimbrado>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("banca_usuario_configura_timbrado");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NnumeroFinal).HasColumnName("nnumero_final");

                entity.Property(e => e.NnumeroInicio).HasColumnName("nnumero_inicio");

                entity.Property(e => e.Nserie).HasColumnName("nserie");

                entity.Property(e => e.StipoUso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo_uso");

                entity.Property(e => e.Timbrado).HasColumnName("timbrado");

                entity.Property(e => e.ValidacionDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("validacion_desde");

                entity.Property(e => e.ValidacionHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("validacion_hasta");
            });

            modelBuilder.Entity<BancaVCronogramaPrecioDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("banca_v_cronograma_precio_detalle");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cdefinicion).HasColumnName("cdefinicion");

                entity.Property(e => e.Cprecio).HasColumnName("cprecio");

                entity.Property(e => e.Ncantidad).HasColumnName("ncantidad");

                entity.Property(e => e.Nprecio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nprecio");
            });

            modelBuilder.Entity<BancaVPrecioDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("banca_v_precio_detalle");

                entity.Property(e => e.Ccatalogo).HasColumnName("ccatalogo");

                entity.Property(e => e.Cdefinicion).HasColumnName("cdefinicion");

                entity.Property(e => e.Cprecio).HasColumnName("cprecio");

                entity.Property(e => e.Ctarifa).HasColumnName("ctarifa");

                entity.Property(e => e.Dcatalogo)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dcatalogo");

                entity.Property(e => e.Ddefinicion)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ddefinicion");

                entity.Property(e => e.Dprecio)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dprecio");

                entity.Property(e => e.Dtarifa)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dtarifa");

                entity.Property(e => e.Ncantidad).HasColumnName("ncantidad");

                entity.Property(e => e.Nprecio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nprecio");
            });

            modelBuilder.Entity<BancaVProductoDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("banca_v_producto_detalle");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cproducto).HasColumnName("cproducto");

                entity.Property(e => e.Dconcepto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dconcepto");

                entity.Property(e => e.Dcontenido)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dcontenido");

                entity.Property(e => e.Dproducto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dproducto");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<BancaVencimientoConfigura>(entity =>
            {
                entity.HasKey(e => new { e.Scriterio, e.Cinicial })
                    .HasName("PK__banca_vencimient__5694AD47");

                entity.ToTable("banca_vencimiento_configura");

                entity.Property(e => e.Scriterio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scriterio");

                entity.Property(e => e.Cinicial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cinicial");

                entity.Property(e => e.Ndias).HasColumnName("ndias");
            });

            modelBuilder.Entity<BdContacto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bd_contactos");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.CmedioContacto).HasColumnName("cmedio_contacto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Crespuesta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("crespuesta")
                    .IsFixedLength(true);

                entity.Property(e => e.Csubrespuesta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("csubrespuesta")
                    .IsFixedLength(true);

                entity.Property(e => e.CtipoActividad).HasColumnName("ctipo_actividad");

                entity.Property(e => e.Dactividad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dactividad");

                entity.Property(e => e.Dcarrera1)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera1");

                entity.Property(e => e.Dcarrera2)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera2");

                entity.Property(e => e.Dcontacto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Drespuesta)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("drespuesta");

                entity.Property(e => e.Dsubrespuesta)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dsubrespuesta");

                entity.Property(e => e.Fgestion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestion");

                entity.Property(e => e.Finscripcion)
                    .HasColumnType("datetime")
                    .HasColumnName("finscripcion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fprocesa1)
                    .HasColumnType("datetime")
                    .HasColumnName("fprocesa1");

                entity.Property(e => e.Fprocesa2)
                    .HasColumnType("datetime")
                    .HasColumnName("fprocesa2");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.PersonaDpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("persona_dpersona");

                entity.Property(e => e.PersonaTcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_tcorreo");
            });

            modelBuilder.Entity<BecaUnidum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("beca_unida");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Materias)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("materias");

                entity.Property(e => e.Matricula)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("matricula");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Origen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("origen");

                entity.Property(e => e.Pe)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pe");

                entity.Property(e => e.Periodo).HasColumnName("periodo");

                entity.Property(e => e.PeriodoCursado1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("periodo_cursado1");

                entity.Property(e => e.PeriodoCursado2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("periodo_cursado2");

                entity.Property(e => e.Pf1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pf1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("pf2");

                entity.Property(e => e.PromCalifSemestre)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("prom_calif_semestre");

                entity.Property(e => e.PromPuntaje)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("prom_puntaje");

                entity.Property(e => e.Turno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<BecasComp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("becas_comp");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("calumno");
            });

            modelBuilder.Entity<BeneficioSinObligacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccontenido });

                entity.ToTable("beneficio_sin_obligacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nporcentaje)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nporcentaje");

                entity.Property(e => e.Tbeneficio)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tbeneficio");
            });

            modelBuilder.Entity<BibBloqueo>(entity =>
            {
                entity.HasKey(e => e.Cbloqueo)
                    .HasName("PK__bib_bloq__34DB22016D2BC9A1");

                entity.ToTable("bib_bloqueo");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dmotivo)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dmotivo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhfin)
                    .HasColumnType("datetime")
                    .HasColumnName("fhfin");

                entity.Property(e => e.Fhinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fhinicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<BibMovimiento>(entity =>
            {
                entity.HasKey(e => e.Cmovimiento)
                    .HasName("PK__bib_movimiento__10422BEF");

                entity.ToTable("bib_movimiento");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fhestado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.HasOne(d => d.CobjetoNavigation)
                    .WithMany(p => p.BibMovimientos)
                    .HasForeignKey(d => d.Cobjeto)
                    .HasConstraintName("fk_bib_movimiento_a_objeto");
            });

            modelBuilder.Entity<BibMultaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bib_multa_h");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmulta).HasColumnName("cmulta");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoUsuario).HasColumnName("gtipo_usuario");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto");
            });

            modelBuilder.Entity<BibMultum>(entity =>
            {
                entity.HasKey(e => e.Cmulta)
                    .HasName("PK__bib_multa__7094766C");

                entity.ToTable("bib_multa");

                entity.Property(e => e.Cmulta).HasColumnName("cmulta");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoUsuario).HasColumnName("gtipo_usuario");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto");
            });

            modelBuilder.Entity<BibPrestamo>(entity =>
            {
                entity.HasKey(e => e.Cprestamo)
                    .HasName("PK__bib_prestamo__17E34DB7");

                entity.ToTable("bib_prestamo");

                entity.Property(e => e.Cprestamo).HasColumnName("cprestamo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhfin)
                    .HasColumnType("datetime")
                    .HasColumnName("fhfin");

                entity.Property(e => e.Fhinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fhinicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.HasOne(d => d.CmovimientoNavigation)
                    .WithMany(p => p.BibPrestamos)
                    .HasForeignKey(d => d.Cmovimiento)
                    .HasConstraintName("fk_bib_prestamo_a_bib_movimiento");
            });

            modelBuilder.Entity<BibReserva>(entity =>
            {
                entity.HasKey(e => e.Creserva)
                    .HasName("PK__bib_reserva__1ABFBA62");

                entity.ToTable("bib_reserva");

                entity.Property(e => e.Creserva).HasColumnName("creserva");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Codalumprof).HasColumnName("codalumprof");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhexpiracion)
                    .HasColumnType("datetime")
                    .HasColumnName("fhexpiracion");

                entity.Property(e => e.Fhfin)
                    .HasColumnType("datetime")
                    .HasColumnName("fhfin");

                entity.Property(e => e.Fhinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fhinicio");

                entity.Property(e => e.Fhregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fhregistro");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.HasOne(d => d.CclasificacionNavigation)
                    .WithMany(p => p.BibReservas)
                    .HasForeignKey(d => d.Cclasificacion)
                    .HasConstraintName("fk_bib_reserva_a_clasificacion");
            });

            modelBuilder.Entity<Bloque>(entity =>
            {
                entity.HasKey(e => e.Cbloque)
                    .HasName("PK__bloque__4EB3945D");

                entity.ToTable("bloque");

                entity.HasIndex(e => new { e.Cperiodo, e.Dbloque }, "iu_bloque_cperiodo_dbloque")
                    .IsUnique();

                entity.Property(e => e.Cbloque)
                    .ValueGeneratedNever()
                    .HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<BloqueAlumnosPosgrado>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("bloque_alumnos_posgrado");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Condicion).HasColumnName("condicion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoOrigen).HasColumnName("cperiodo_origen");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nveces).HasColumnName("nveces");
            });

            modelBuilder.Entity<BloqueCarrera>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso, e.Ccarrera });

                entity.ToTable("bloque_carrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BloqueCarreraH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_carrera_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BloqueCurso>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cbloque, e.Ccurso })
                    .HasName("PK__bloque_curso__5654B625");

                entity.ToTable("bloque_curso");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso }, "bloque_curso_02");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CodigoPractica).HasColumnName("codigo_practica");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsable).HasColumnName("cresponsable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iingles).HasColumnName("iingles");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nreservado).HasColumnName("nreservado");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssesion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssesion")
                    .IsFixedLength(true);

                entity.Property(e => e.Tfolio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tfolio");

                entity.Property(e => e.Turl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("turl");

                entity.HasOne(d => d.CbloqueNavigation)
                    .WithMany(p => p.BloqueCursos)
                    .HasForeignKey(d => d.Cbloque)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bloque_curso_a_bloque");

                entity.HasOne(d => d.CcursoNavigation)
                    .WithMany(p => p.BloqueCursos)
                    .HasForeignKey(d => d.Ccurso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bloque_curso_a_curso");

                entity.HasOne(d => d.CperiodoNavigation)
                    .WithMany(p => p.BloqueCursos)
                    .HasForeignKey(d => d.Cperiodo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_bloque_curso_a_periodo");
            });

            modelBuilder.Entity<BloqueCursoActa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_curso_actas");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FentregaActa)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega_acta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<BloqueCursoAlumnoMoodle>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cbloque, e.Ccurso, e.Calumno });

                entity.ToTable("bloque_curso_alumno_moodle");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.AlumnoCursoEstado)
                    .HasMaxLength(40)
                    .HasColumnName("alumno_curso_estado");

                entity.Property(e => e.AlumnoEstado)
                    .HasMaxLength(40)
                    .HasColumnName("alumno_estado");

                entity.Property(e => e.AlumnoId).HasColumnName("alumno_id");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FechaCreacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion_moodle");

                entity.Property(e => e.FechaModificacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion_moodle");

                entity.Property(e => e.Link)
                    .HasMaxLength(250)
                    .HasColumnName("link");
            });

            modelBuilder.Entity<BloqueCursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_curso_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsable).HasColumnName("cresponsable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iingles).HasColumnName("iingles");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nreservado).HasColumnName("nreservado");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssesion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssesion")
                    .IsFixedLength(true);

                entity.Property(e => e.Tfolio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tfolio");

                entity.Property(e => e.Turl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("turl");
            });

            modelBuilder.Entity<BloqueCursoMoodle>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cbloque, e.Ccurso });

                entity.ToTable("bloque_curso_moodle");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CategoriaCod).HasColumnName("categoria_cod");

                entity.Property(e => e.CategoriaNombre)
                    .HasMaxLength(250)
                    .HasColumnName("categoria_nombre");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CursoId).HasColumnName("curso_id");

                entity.Property(e => e.CursoNombreCorto)
                    .HasMaxLength(250)
                    .HasColumnName("curso_nombre_corto");

                entity.Property(e => e.CursoNombreLargo)
                    .HasMaxLength(250)
                    .HasColumnName("curso_nombre_largo");

                entity.Property(e => e.Estado)
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechaCreacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion_moodle");

                entity.Property(e => e.FechaModificacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion_moodle");

                entity.Property(e => e.Link)
                    .HasMaxLength(250)
                    .HasColumnName("link");
            });

            modelBuilder.Entity<BloqueCursoRegistroEvaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Ccurso, e.Cbloque, e.GtipoNota })
                    .HasName("PK__bloque_curso_reg__7E038023");

                entity.ToTable("bloque_curso_registro_evaluacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.AutorizacionRegistroNota)
                    .HasColumnName("autorizacion_registro_nota")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cautorizacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cautorizacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(150)
                    .HasColumnName("comentario");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Cregistro)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cregistro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FdigitaDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_desde");

                entity.Property(e => e.FdigitaHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_hasta");

                entity.Property(e => e.FechaAutorizacionRegistroNota)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_autorizacion_registro_nota");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.FexamenAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenAVE");

                entity.Property(e => e.FexamenAve2)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenAVE2");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BloqueCursoRegistroEvaluacionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_curso_registro_evaluacion_h");

                entity.Property(e => e.AutorizacionRegistroNota).HasColumnName("autorizacion_registro_nota");

                entity.Property(e => e.Cautorizacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cautorizacion");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(150)
                    .HasColumnName("comentario");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Cregistro)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cregistro");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FdigitaDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_desde");

                entity.Property(e => e.FdigitaHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_hasta");

                entity.Property(e => e.FechaAutorizacionRegistroNota)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_autorizacion_registro_nota");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.FexamenAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenAVE");

                entity.Property(e => e.FexamenAve2)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenAVE2");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<BloqueCursoResponsable>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cbloque, e.Ccurso, e.GtipoResponsable, e.Cresponsable })
                    .HasName("PK__bloque_curso_responsable");

                entity.ToTable("bloque_curso_responsable");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoResponsable).HasColumnName("gtipo_responsable");

                entity.Property(e => e.Cresponsable).HasColumnName("cresponsable");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<BloqueExterno>(entity =>
            {
                entity.HasKey(e => new { e.Cbloque, e.Ccurso, e.Ndia, e.Hinicio })
                    .HasName("PK__bloque_e__1D821E2161EF211F");

                entity.ToTable("bloque_externo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");
            });

            modelBuilder.Entity<BloqueH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<BloqueSesion>(entity =>
            {
                entity.HasKey(e => new { e.Cbloque, e.Ccurso, e.Ndia, e.Hinicio })
                    .HasName("PK__bloque_sesion__5E9FE363");

                entity.ToTable("bloque_sesion");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso }, "bloque_sesion_01");

                entity.HasIndex(e => new { e.Cperiodo, e.Cbloque, e.Ccurso }, "bloque_sesion_02");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor }, "ik_ippp");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.HasOne(d => d.CprofesorNavigation)
                    .WithMany(p => p.BloqueSesions)
                    .HasForeignKey(d => d.Cprofesor)
                    .HasConstraintName("fk_bloque_sesion_a_profesor");
            });

            modelBuilder.Entity<BloqueSesionCon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_con");

                entity.Property(e => e.Ccorrelativo).HasColumnName("ccorrelativo");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Csondeo).HasColumnName("csondeo");

                entity.Property(e => e.Trespuesta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("trespuesta")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<BloqueSesionEnc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_enc");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Csondeo).HasColumnName("csondeo");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Gultimo).HasColumnName("gultimo");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Npromedio10)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_10");

                entity.Property(e => e.Npromedio11)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_11");

                entity.Property(e => e.Npromedio12)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_12");

                entity.Property(e => e.Npromedio2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_2");

                entity.Property(e => e.Npromedio3)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_3");

                entity.Property(e => e.Npromedio4)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_4");

                entity.Property(e => e.Npromedio5)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_5");

                entity.Property(e => e.Npromedio6)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_6");

                entity.Property(e => e.Npromedio7)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_7");

                entity.Property(e => e.Npromedio8)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_8");

                entity.Property(e => e.Npromedio9)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_9");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<BloqueSesionFecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_fechas");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fsesion)
                    .HasColumnType("datetime")
                    .HasColumnName("fsesion");
            });

            modelBuilder.Entity<BloqueSesionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<BloqueSesionPreg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_preg");

                entity.Property(e => e.Csondeo).HasColumnName("csondeo");

                entity.Property(e => e.Npeso)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso");

                entity.Property(e => e.Npregunta).HasColumnName("npregunta");

                entity.Property(e => e.Pa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pa");

                entity.Property(e => e.Pb)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pb");

                entity.Property(e => e.Pc)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pc");

                entity.Property(e => e.Pd)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pd");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pe");

                entity.Property(e => e.Pn)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pn");

                entity.Property(e => e.Px)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("px");

                entity.Property(e => e.Tpregunta)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tpregunta")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<BloqueSesionProf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_prof");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor }, "ik_inprogperprof");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");
            });

            modelBuilder.Entity<BloqueSesionProfH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_prof_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");
            });

            modelBuilder.Entity<BloqueSesionRe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bloque_sesion_res");

                entity.Property(e => e.CaK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ca_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CaP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ca_p");

                entity.Property(e => e.CbK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cb_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CbP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("cb_p");

                entity.Property(e => e.CcK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cc_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CcP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("cc_p");

                entity.Property(e => e.CdK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cd_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CdP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("cd_p");

                entity.Property(e => e.CeK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ce_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CeP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ce_p");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.CnK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cn_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CnP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("cn_p");

                entity.Property(e => e.Csondeo).HasColumnName("csondeo");

                entity.Property(e => e.CxK)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cx_k")
                    .IsFixedLength(true);

                entity.Property(e => e.CxP)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("cx_p");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Npregunta).HasColumnName("npregunta");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");
            });

            modelBuilder.Entity<BloqueoSemana>(entity =>
            {
                entity.HasKey(e => e.Idbloqueo);

                entity.ToTable("bloqueo_semanas");

                entity.Property(e => e.Idbloqueo).HasColumnName("idbloqueo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(150)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(150)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TipoTarea).HasColumnName("tipo_tarea");
            });

            modelBuilder.Entity<BoletinEclass>(entity =>
            {
                entity.HasKey(e => e.IdBoletin);

                entity.ToTable("boletin_eclass");

                entity.Property(e => e.IdBoletin).HasColumnName("idBoletin");

                entity.Property(e => e.Boletin).HasColumnType("image");

                entity.Property(e => e.Ccarrera)
                    .HasColumnName("ccarrera")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(50)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion)
                    .HasColumnName("cinstitucion")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(50)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma)
                    .HasColumnName("cprograma")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.ModuloAlumno)
                    .HasColumnName("modulo_alumno")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloEgresado)
                    .HasColumnName("modulo_egresado")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloFuncionario)
                    .HasColumnName("modulo_funcionario")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloPadres)
                    .HasColumnName("modulo_padres")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloProfesor)
                    .HasColumnName("modulo_profesor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(50)
                    .HasColumnName("tarchivo");
            });

            modelBuilder.Entity<BolsaTrabajoEclass>(entity =>
            {
                entity.HasKey(e => e.IdBtrabajo);

                entity.ToTable("bolsa_trabajo_eclass");

                entity.Property(e => e.IdBtrabajo).HasColumnName("idBTrabajo");

                entity.Property(e => e.Btrabajo)
                    .HasColumnType("image")
                    .HasColumnName("BTrabajo");

                entity.Property(e => e.Ccarrera)
                    .HasColumnName("ccarrera")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(50)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion)
                    .HasColumnName("cinstitucion")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(50)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma)
                    .HasColumnName("cprograma")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.ModuloAlumno)
                    .HasColumnName("modulo_alumno")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloEgresado)
                    .HasColumnName("modulo_egresado")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloFuncionario)
                    .HasColumnName("modulo_funcionario")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloPadres)
                    .HasColumnName("modulo_padres")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ModuloProfesor)
                    .HasColumnName("modulo_profesor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(50)
                    .HasColumnName("tarchivo");
            });

            modelBuilder.Entity<CabFact>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cab_fact");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccatcl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccatcl")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmtanu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cmtanu")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Crucpa)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("crucpa")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpcli)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpcli")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpref)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpref")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Cvende)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cvende")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fstatu)
                    .HasColumnType("datetime")
                    .HasColumnName("fstatu");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Hemisi)
                    .HasColumnType("datetime")
                    .HasColumnName("hemisi");

                entity.Property(e => e.Ibruto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ibruto");

                entity.Property(e => e.Idscto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idscto");

                entity.Property(e => e.Iimpue)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iimpue");

                entity.Property(e => e.Itneto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itneto");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Nbanco).HasColumnName("nbanco");

                entity.Property(e => e.Ndcref).HasColumnName("ndcref");

                entity.Property(e => e.Nfactu).HasColumnName("nfactu");

                entity.Property(e => e.Nimpre).HasColumnName("nimpre");

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nproce).HasColumnName("nproce");

                entity.Property(e => e.Nsecue).HasColumnName("nsecue");

                entity.Property(e => e.Scance)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scance")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfactu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfactu")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CafeteriaArticulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cafeteria_articulos");

                entity.Property(e => e.Carticulo).HasColumnName("carticulo");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Darticulo)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("darticulo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<CafeteriaGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cafeteria_grupos");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<CafeteriaPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cafeteria_precios");

                entity.Property(e => e.Carticulo).HasColumnName("carticulo");

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iprecio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iprecio");
            });

            modelBuilder.Entity<Calendario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("calendario");

                entity.HasIndex(e => new { e.Guso, e.Ffecha, e.Ccalendario }, "iu_calendario_guso_ffecha")
                    .IsUnique();

                entity.Property(e => e.Ccalendario)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccalendario");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.ColorEvento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("color_evento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffecha)
                    .HasColumnType("datetime")
                    .HasColumnName("ffecha");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Guso).HasColumnName("guso");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Tfecha)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tfecha");
            });

            modelBuilder.Entity<CalendarioAcademico>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.NroSemanaCalendario });

                entity.ToTable("calendario_academico");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.NroSemanaCalendario).HasColumnName("nro_semana_calendario");

                entity.Property(e => e.FechaFinalSemana)
                    .HasColumnType("date")
                    .HasColumnName("fecha_final_semana");

                entity.Property(e => e.FechaInicioSemana)
                    .HasColumnType("date")
                    .HasColumnName("fecha_inicio_semana");

                entity.Property(e => e.NroSemanaAcademico).HasColumnName("nro_semana_academico");
            });

            modelBuilder.Entity<CalendarioEclass>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("calendario_eclass");

                entity.HasIndex(e => new { e.Guso, e.Ffecha, e.Ccalendario }, "iu_calendario_eclass_guso_ffecha")
                    .IsUnique();

                entity.Property(e => e.Ccalendario)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccalendario");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.ColorEvento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("color_evento");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffecha)
                    .HasColumnType("datetime")
                    .HasColumnName("ffecha");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Guso).HasColumnName("guso");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Tfecha)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tfecha");
            });

            modelBuilder.Entity<CambioPagina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cambio_pagina");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CampaniaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("campania_h");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcampania)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcampania");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Scampania)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("scampania");
            });

            modelBuilder.Entity<Campanium>(entity =>
            {
                entity.HasKey(e => e.Ccampania)
                    .HasName("PK__campania__46535886");

                entity.ToTable("campania");

                entity.Property(e => e.Ccampania)
                    .ValueGeneratedNever()
                    .HasColumnName("ccampania");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcampania)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcampania");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Scampania)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("scampania");
            });

            modelBuilder.Entity<Canje>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("canje");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("monto");

                entity.Property(e => e.Nro)
                    .HasMaxLength(50)
                    .HasColumnName("nro");

                entity.Property(e => e.Persona)
                    .HasMaxLength(150)
                    .HasColumnName("persona");

                entity.Property(e => e.Tipo)
                    .HasColumnName("tipo")
                    .HasComment("1:Cheque, 2:Tarjeta Débito, 3: Tarjeta Crédito");

                entity.Property(e => e.Ucreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ucreacion");

                entity.Property(e => e.Umodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("umodificacion");
            });

            modelBuilder.Entity<CapacidadCantidad>(entity =>
            {
                entity.HasKey(e => new { e.I1, e.I2 });

                entity.ToTable("capacidad_cantidad");

                entity.Property(e => e.I1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("i1");

                entity.Property(e => e.I2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("i2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.Capacidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("capacidad");
            });

            modelBuilder.Entity<CapacidadCantidadUbicadum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("capacidad_cantidad_ubicada");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.Curso)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<CargoAcademico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cargo_academico");

                entity.Property(e => e.Ccargo).HasColumnName("ccargo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CdependeCargo).HasColumnName("cdepende_cargo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcargo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcargo");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Scargo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scargo");
            });

            modelBuilder.Entity<CargoCompanium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cargo_compania");

                entity.Property(e => e.Ccargo).HasColumnName("ccargo");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<Carrera>(entity =>
            {
                entity.HasKey(e => e.Ccarrera)
                    .HasName("PK__carrera__4282C7A2");

                entity.ToTable("carrera");

                entity.Property(e => e.Ccarrera)
                    .ValueGeneratedNever()
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Aprobadopor)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("aprobadopor");

                entity.Property(e => e.CcarreraEquiv)
                    .HasColumnName("ccarrera_equiv")
                    .HasComputedColumnSql("([ccarrera])", false);

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.DcarreraImprenta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera_imprenta");

                entity.Property(e => e.Dcarrerapostgrado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrerapostgrado");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.EstadoTesis).HasColumnName("estado_tesis");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gvisible)
                    .HasColumnName("gvisible")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Resolucion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("resolucion");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Sigla)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("sigla");

                entity.HasOne(d => d.CfacultadNavigation)
                    .WithMany(p => p.Carreras)
                    .HasForeignKey(d => d.Cfacultad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_carrera_a_facultad");
            });

            modelBuilder.Entity<CarreraCoordinador>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccarrera, e.Cprofesor });

                entity.ToTable("carrera_coordinador");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<CarreraEducativaExtranjero>(entity =>
            {
                entity.HasKey(e => e.Ccarrera);

                entity.ToTable("carrera_educativa_extranjero");

                entity.Property(e => e.Ccarrera)
                    .ValueGeneratedNever()
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(250)
                    .HasColumnName("dcarrera");
            });

            modelBuilder.Entity<CarreraExternaCordinador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("carrera_externa_cordinador");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccordinador).HasColumnName("ccordinador");
            });

            modelBuilder.Entity<CarreraH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("carrera_h");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.DcarreraImprenta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera_imprenta");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");
            });

            modelBuilder.Entity<CarreraJa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("carrera_ja");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<CarreraModalidad>(entity =>
            {
                entity.HasKey(e => new { e.Ccarrera, e.Cmodalidad })
                    .HasName("PK__carrera_modalida__06E2DEE7");

                entity.ToTable("carrera_modalidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ncategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ncategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategoria")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CcarreraNavigation)
                    .WithMany(p => p.CarreraModalidads)
                    .HasForeignKey(d => d.Ccarrera)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_carrera_modalidad_a_carrera");

                entity.HasOne(d => d.CmodalidadNavigation)
                    .WithMany(p => p.CarreraModalidads)
                    .HasForeignKey(d => d.Cmodalidad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_carrera_modalidad_a_modalidad");
            });

            modelBuilder.Entity<CarreraPeriodo>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Ccarrera });

                entity.ToTable("carrera_periodo");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");
            });

            modelBuilder.Entity<CarreraPeriodoTurno>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Ccarrera, e.Cmodalidad });

                entity.ToTable("carrera_periodo_turno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");
            });

            modelBuilder.Entity<CasosDiego>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Casos_diego");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");
            });

            modelBuilder.Entity<CasosDiego20092>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("casos_diego_20092");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");
            });

            modelBuilder.Entity<CasosDiego20101>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("casos_diego_20101");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");
            });

            modelBuilder.Entity<CasosDiego20102>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("casos_diego_20102");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");
            });

            modelBuilder.Entity<CategoriaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("categoria_h");

                entity.Property(e => e.CgrupoCatProf).HasColumnName("cgrupo_cat_prof");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmoneda)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoneda")
                    .IsFixedLength(true);

                entity.Property(e => e.CmonedaRef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoneda_ref")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.I6toGratiOrd)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("i6to_grati_ord");

                entity.Property(e => e.IbonifTransp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ibonif_transp");

                entity.Property(e => e.Irefrigerio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("irefrigerio");

                entity.Property(e => e.Iremuneracion)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iremuneracion");

                entity.Property(e => e.Itarifa)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itarifa");

                entity.Property(e => e.ItarifaRef)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itarifa_ref");

                entity.Property(e => e.Tcategoria)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Tglosa)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tglosa");
            });

            modelBuilder.Entity<CategoriaProfesor>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cpersona, e.CtipoProf, e.CgrupoCatProf })
                    .HasName("pk_categoria_profesor");

                entity.ToTable("categoria_profesor");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CtipoProf).HasColumnName("ctipo_prof");

                entity.Property(e => e.CgrupoCatProf).HasColumnName("cgrupo_cat_prof");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctrabajador)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctrabajador");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TcategoriaNew)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria_new");
            });

            modelBuilder.Entity<Categorium>(entity =>
            {
                entity.HasKey(e => new { e.CgrupoCatProf, e.Tcategoria, e.Cmoneda })
                    .HasName("pk_categoria");

                entity.ToTable("categoria");

                entity.HasIndex(e => new { e.CgrupoCatProf, e.Tcategoria }, "ii_cate2")
                    .IsUnique();

                entity.Property(e => e.CgrupoCatProf).HasColumnName("cgrupo_cat_prof");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Cmoneda).HasColumnName("cmoneda");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmonedaRef).HasColumnName("cmoneda_ref");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.I6toGratiOrd)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("i6to_grati_ord");

                entity.Property(e => e.IbonifTransp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ibonif_transp");

                entity.Property(e => e.Irefrigerio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("irefrigerio");

                entity.Property(e => e.Iremuneracion)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iremuneracion");

                entity.Property(e => e.Itarifa)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itarifa");

                entity.Property(e => e.ItarifaRef)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itarifa_ref");

                entity.Property(e => e.PorcIps25)
                    .HasColumnType("decimal(4, 3)")
                    .HasColumnName("porc_ips25");

                entity.Property(e => e.PorcIps55)
                    .HasColumnType("decimal(4, 3)")
                    .HasColumnName("porc_ips55");

                entity.Property(e => e.Tglosa)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tglosa");
            });

            modelBuilder.Entity<Cdepoc00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cdepoc00");

                entity.Property(e => e.Cdbspa)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdbspa")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctabla)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ctabla")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctabpr)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ctabpr")
                    .IsFixedLength(true);

                entity.Property(e => e.Fdepoc)
                    .HasColumnType("datetime")
                    .HasColumnName("fdepoc");

                entity.Property(e => e.Qmelag).HasColumnName("qmelag");

                entity.Property(e => e.Qmeloc).HasColumnName("qmeloc");

                entity.Property(e => e.Qtmxrg).HasColumnName("qtmxrg");
            });

            modelBuilder.Entity<CertificadoOb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("certificado_obs");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cprograma)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cprograma");

                entity.Property(e => e.Dglosa1)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dglosa1");

                entity.Property(e => e.Dglosa2)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dglosa2");

                entity.Property(e => e.Dglosa3)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dglosa3");

                entity.Property(e => e.Dglosa4)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dglosa4");
            });

            modelBuilder.Entity<Chat>(entity =>
            {
                entity.HasKey(e => e.Cchat);

                entity.ToTable("chat");

                entity.Property(e => e.Cchat).HasColumnName("cchat");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Opiniones)
                    .HasMaxLength(250)
                    .HasColumnName("opiniones");
            });

            modelBuilder.Entity<Clasificacion>(entity =>
            {
                entity.HasKey(e => e.Cclasificacion)
                    .HasName("PK__clasificacion__57FDD2CC");

                entity.ToTable("clasificacion");

                entity.HasIndex(e => e.Sclasificacion, "iu_clasificacion_sclasificacion")
                    .IsUnique();

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.CclasificacionPadre).HasColumnName("cclasificacion_padre");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.DclasificacionSub)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion_sub");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.Gsubdominio).HasColumnName("gsubdominio");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.HasOne(d => d.CestructuraNavigation)
                    .WithMany(p => p.Clasificacions)
                    .HasForeignKey(d => d.Cestructura)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_clasificacion_a_estructura");
            });

            modelBuilder.Entity<ClasificacionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("clasificacion_h");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.CclasificacionPadre).HasColumnName("cclasificacion_padre");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.DclasificacionSub)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion_sub");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.Gsubdominio).HasColumnName("gsubdominio");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");
            });

            modelBuilder.Entity<CngCuotaEsperadum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cng_cuota_esperada");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcontenido)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dcontenido");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fcreditos)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreditos");

                entity.Property(e => e.KCn).HasColumnName("k_cn");

                entity.Property(e => e.KNp).HasColumnName("k_np");

                entity.Property(e => e.NmontoCn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cn");

                entity.Property(e => e.NmontoCp)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cp");

                entity.Property(e => e.NmontoDescuento)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_descuento");

                entity.Property(e => e.NmontoNeto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nmonto_neto");

                entity.Property(e => e.NmontoTotal)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_total");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<Coin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("coin");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ave");

                entity.Property(e => e.FechaExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_examen");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");

                entity.Property(e => e.MarcaSys).HasColumnName("marca_sys");

                entity.Property(e => e.Revocado).HasColumnName("revocado");

                entity.Property(e => e.Solicitado).HasColumnName("solicitado");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_autoriza");
            });

            modelBuilder.Entity<CoincidenciasAve>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Cperiodo, e.Ccurso, e.Cbloque, e.GtipoNota })
                    .HasName("PK__coincidencias_av__37D8EBC2");

                entity.ToTable("coincidencias_ave");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ave");

                entity.Property(e => e.FechaExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_examen");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");

                entity.Property(e => e.MarcaSys).HasColumnName("marca_sys");

                entity.Property(e => e.Revocado).HasColumnName("revocado");

                entity.Property(e => e.Solicitado).HasColumnName("solicitado");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_autoriza");
            });

            modelBuilder.Entity<CoincidenciasAve5>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("coincidencias_ave_5");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ave");

                entity.Property(e => e.FechaExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_examen");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");

                entity.Property(e => e.MarcaSys).HasColumnName("marca_sys");

                entity.Property(e => e.Revocado).HasColumnName("revocado");

                entity.Property(e => e.Solicitado).HasColumnName("solicitado");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_autoriza");
            });

            modelBuilder.Entity<CoincidenciasAveMod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("coincidencias_ave_mod");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ave");

                entity.Property(e => e.FechaExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_examen");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.Fultimamod)
                    .HasColumnType("datetime")
                    .HasColumnName("fultimamod");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");

                entity.Property(e => e.MarcaSys).HasColumnName("marca_sys");

                entity.Property(e => e.Revocado).HasColumnName("revocado");

                entity.Property(e => e.Solicitado).HasColumnName("solicitado");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_autoriza");
            });

            modelBuilder.Entity<CoincidenciasAveOld>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Cperiodo, e.Ccurso })
                    .HasName("PK__coincidencias_av__2B7314DD");

                entity.ToTable("coincidencias_ave_old");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaAve)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ave");

                entity.Property(e => e.FechaExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_examen");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");

                entity.Property(e => e.MarcaSys).HasColumnName("marca_sys");

                entity.Property(e => e.Revocado).HasColumnName("revocado");

                entity.Property(e => e.Solicitado).HasColumnName("solicitado");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_autoriza");
            });

            modelBuilder.Entity<CoincidenciasAveTemp>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Ccurso, e.Cperiodo })
                    .HasName("PK__coincidencias_av__298ACC6B");

                entity.ToTable("coincidencias_ave_temp");

                entity.HasIndex(e => new { e.Calumno, e.Fexamen, e.Hexamen }, "coincidencias_ave_temp_idx");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fexamenave)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenave");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");
            });

            modelBuilder.Entity<CoincidenciasAveTempH>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Ccurso, e.Cperiodo })
                    .HasName("PK__coincidencias_av__35F0A350");

                entity.ToTable("coincidencias_ave_temp_h");

                entity.HasIndex(e => new { e.Calumno, e.Fexamen, e.Hexamen }, "coincidencias_ave_temp_idx");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fexamenave)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamenave");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Hexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("hexamen");
            });

            modelBuilder.Entity<CoincidenciasGen>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("coincidencias_gen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Generado).HasColumnName("generado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<Colacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Colacion");

                entity.Property(e => e.Cpromocion)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cpromocion");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Hora)
                    .HasColumnType("datetime")
                    .HasColumnName("hora");

                entity.Property(e => e.Instrucciones)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("instrucciones");

                entity.Property(e => e.Lema)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Lugar)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("lugar");

                entity.Property(e => e.Promocion)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ColacionDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Colacion_detalle");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconva)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("cconva");

                entity.Property(e => e.Cexamenes)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("cexamenes");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cmaterias)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("cmaterias");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cpasantias)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("cpasantias");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cpersona");

                entity.Property(e => e.Cpfs)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("cpfs");

                entity.Property(e => e.Cpromocion)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cpromocion");

                entity.Property(e => e.Crevalidas)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("crevalidas");

                entity.Property(e => e.Mencion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mencion");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Sumapuntajefinal)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("sumapuntajefinal");

                entity.Property(e => e.Sumapuntajes)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("sumapuntajes");

                entity.Property(e => e.Tieneconv).HasColumnName("tieneconv");
            });

            modelBuilder.Entity<Columna>(entity =>
            {
                entity.HasKey(e => e.Ccolumna)
                    .HasName("PK__columna__68343A95");

                entity.ToTable("columna");

                entity.Property(e => e.Ccolumna).HasColumnName("ccolumna");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dcolumna)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dcolumna");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Scolumna)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("scolumna");

                entity.HasOne(d => d.CestructuraNavigation)
                    .WithMany(p => p.Columnas)
                    .HasForeignKey(d => d.Cestructura)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_columna_a_estructura");
            });

            modelBuilder.Entity<Combinacione>(entity =>
            {
                entity.HasKey(e => e.IdCombinacion);

                entity.ToTable("combinaciones");

                entity.Property(e => e.IdCombinacion)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_combinacion");

                entity.Property(e => e.Alumnos)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("alumnos");

                entity.Property(e => e.Cantidad1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad1");

                entity.Property(e => e.Cantidad2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad2");

                entity.Property(e => e.Capacidad1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("capacidad1");

                entity.Property(e => e.Capacidad2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("capacidad2");

                entity.Property(e => e.Libres)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("libres");

                entity.Property(e => e.SumAulas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("sum_aulas");
            });

            modelBuilder.Entity<CombinacionesInsert>(entity =>
            {
                entity.HasKey(e => e.IdCombinacion);

                entity.ToTable("combinaciones_insert");

                entity.Property(e => e.IdCombinacion)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_combinacion");

                entity.Property(e => e.Alumnos)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("alumnos");

                entity.Property(e => e.Cantidad1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad1");

                entity.Property(e => e.Cantidad2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad2");

                entity.Property(e => e.Capacidad1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("capacidad1");

                entity.Property(e => e.Capacidad2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("capacidad2");

                entity.Property(e => e.Libres)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("libres");

                entity.Property(e => e.SumAulas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("sum_aulas");
            });

            modelBuilder.Entity<Companium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("compania");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcompania)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcompania");

                entity.Property(e => e.Ddireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ddireccion");

                entity.Property(e => e.Dproducto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dproducto");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nacciones).HasColumnName("nacciones");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Scompania)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scompania");
            });

            modelBuilder.Entity<Comprobante>(entity =>
            {
                entity.HasKey(e => e.Ccomprobante);

                entity.ToTable("comprobante");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.BocaCobranza)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("boca_cobranza");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso).HasColumnName("cingreso");

                entity.Property(e => e.CmodificacionProcesa)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_procesa");

                entity.Property(e => e.Comprobante1)
                    .HasColumnType("image")
                    .HasColumnName("comprobante");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FmodificacionProcesa)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_procesa");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("motivo");

                entity.Property(e => e.RazonSocial)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("razon_social");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ruc");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tipo");

                entity.Property(e => e.Tpago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tpago");
            });

            modelBuilder.Entity<ConcursoUnidum>(entity =>
            {
                entity.HasKey(e => e.GrupoId)
                    .HasName("PK__concurso__A0BD40FFAE40F5E0");

                entity.ToTable("concurso_unida");

                entity.Property(e => e.GrupoId).HasColumnName("grupoID");

                entity.Property(e => e.Cconcurso).HasColumnName("cconcurso");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Par1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par1");

                entity.Property(e => e.Par2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par2");

                entity.Property(e => e.Par3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par3");

                entity.Property(e => e.Par4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par4");

                entity.Property(e => e.Par5)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par5");
            });

            modelBuilder.Entity<ConfigReporte>(entity =>
            {
                entity.HasKey(e => e.Treporte)
                    .HasName("PK__config_reporte__0E39E7EC");

                entity.ToTable("config_reporte");

                entity.Property(e => e.Treporte)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("treporte");

                entity.Property(e => e.Nlineaxpagina).HasColumnName("nlineaxpagina");
            });

            modelBuilder.Entity<ConfigurarPlanillaAsuVerano>(entity =>
            {
                entity.HasKey(e => e.Cplanilla)
                    .HasName("PK_configurar_planilla_asuncion_verano");

                entity.ToTable("configurar_planilla_asu_verano");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dplanilla)
                    .HasMaxLength(250)
                    .HasColumnName("dplanilla");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ConfigurarPlanillaCde>(entity =>
            {
                entity.HasKey(e => e.Cplanilla);

                entity.ToTable("configurar_planilla_cde");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dplanilla)
                    .HasMaxLength(250)
                    .HasColumnName("dplanilla");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ConfigurarPlanillaPosgrado>(entity =>
            {
                entity.HasKey(e => e.Cplanilla);

                entity.ToTable("configurar_planilla_posgrado");

                entity.Property(e => e.Cplanilla)
                    .ValueGeneratedNever()
                    .HasColumnName("cplanilla");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dplanilla)
                    .HasMaxLength(150)
                    .HasColumnName("dplanilla");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ConfigurarPlanillaTesi>(entity =>
            {
                entity.HasKey(e => e.Cplanilla)
                    .HasName("PK_configura_planilla_tesis");

                entity.ToTable("configurar_planilla_tesis");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dplanilla)
                    .HasMaxLength(150)
                    .HasColumnName("dplanilla");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ConsultaDudaSugerencium>(entity =>
            {
                entity.HasKey(e => e.Ccds);

                entity.ToTable("consulta_duda_sugerencia");

                entity.Property(e => e.Ccds).HasColumnName("ccds");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcdsPadre).HasColumnName("ccds_padre");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TipoCds).HasColumnName("tipo_cds");

                entity.Property(e => e.TipoPersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_persona")
                    .IsFixedLength(true);

                entity.Property(e => e.Titulo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<ConsultaTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("consulta_temp");

                entity.Property(e => e.Anio)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("anio");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Periodo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("periodo");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Consultum>(entity =>
            {
                entity.HasKey(e => e.Cconsulta)
                    .HasName("PK__consulta__7F9342B835A68A8D");

                entity.ToTable("consulta");

                entity.Property(e => e.Cconsulta)
                    .ValueGeneratedNever()
                    .HasColumnName("cconsulta");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cespecialista).HasColumnName("cespecialista");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmodificacionexonerado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacionexonerado");

                entity.Property(e => e.Cpaciente).HasColumnName("cpaciente");

                entity.Property(e => e.Fconsulta)
                    .HasColumnType("datetime")
                    .HasColumnName("fconsulta");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FlagExonerado)
                    .HasColumnName("flagExonerado")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fmodificacionexonerado)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacionexonerado");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Motivoconsulta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("motivoconsulta");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Precio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("precio");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Sobservacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("sobservacion");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.HasOne(d => d.CespecialistaNavigation)
                    .WithMany(p => p.Consulta)
                    .HasForeignKey(d => d.Cespecialista)
                    .HasConstraintName("fk_consulta_a_especialista");

                entity.HasOne(d => d.CpacienteNavigation)
                    .WithMany(p => p.Consulta)
                    .HasForeignKey(d => d.Cpaciente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_consulta_a_paciente");
            });

            modelBuilder.Entity<Contacto>(entity =>
            {
                entity.HasKey(e => e.Ncontacto);

                entity.ToTable("contacto");

                entity.Property(e => e.Ncontacto)
                    .ValueGeneratedNever()
                    .HasColumnName("ncontacto");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Cciudad).HasColumnName("cciudad");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcontacto).HasColumnName("gcontacto");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Tconsulta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tconsulta");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Tedad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tedad")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo).HasColumnName("tipo");

                entity.Property(e => e.Tnombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tnombre");

                entity.Property(e => e.TporqueEstudiar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tporque_estudiar")
                    .IsFixedLength(true);

                entity.Property(e => e.Tsexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tsexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Tturno)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tturno")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Contribuyente>(entity =>
            {
                entity.HasKey(e => e.Ccontribuyente);

                entity.ToTable("contribuyente");

                entity.Property(e => e.Ccontribuyente).HasColumnName("ccontribuyente");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Truc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("truc");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");
            });

            modelBuilder.Entity<ControlAcceso>(entity =>
            {
                entity.ToTable("control_accesos");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Ip)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ip");

                entity.Property(e => e.Susuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario");
            });

            modelBuilder.Entity<ControlAccesosVista>(entity =>
            {
                entity.HasKey(e => e.IdRegistro);

                entity.ToTable("control_accesos_vistas");

                entity.Property(e => e.IdRegistro).HasColumnName("idRegistro");

                entity.Property(e => e.Cinsitucion).HasColumnName("cinsitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dvista)
                    .HasMaxLength(150)
                    .HasColumnName("dvista");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Tipousuario)
                    .HasMaxLength(50)
                    .HasColumnName("tipousuario");
            });

            modelBuilder.Entity<ControlBatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("control_batch");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cperiodo")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Nregistros).HasColumnName("nregistros");
            });

            modelBuilder.Entity<ControlEntregaEx>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cevento, e.Ccurso, e.Cbloque, e.Cprofesor })
                    .HasName("PK__control_entrega___025333F4");

                entity.ToTable("control_entrega_ex");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.FDevolProf)
                    .HasColumnType("datetime")
                    .HasColumnName("f_devol_prof");

                entity.Property(e => e.FDevolReal)
                    .HasColumnType("datetime")
                    .HasColumnName("f_devol_real");

                entity.Property(e => e.FentregaProf)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega_prof");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ControlExportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("control_exportacion");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cusuario");

                entity.Property(e => e.Dquery)
                    .IsRequired()
                    .HasMaxLength(6000)
                    .IsUnicode(false)
                    .HasColumnName("dquery")
                    .IsFixedLength(true);

                entity.Property(e => e.Dventana)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dventana");

                entity.Property(e => e.Fexportacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fexportacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nexportacion).HasColumnName("nexportacion");
            });

            modelBuilder.Entity<ControlFoto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("control_foto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<ControlOpcion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("control_opcion");

                entity.HasIndex(e => e.Cusuario, "control_opcion01");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Tobjeto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto");
            });

            modelBuilder.Entity<Convalidacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("convalidacion");

                entity.Property(e => e.Cactual).HasColumnName("cactual");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cnuevo).HasColumnName("cnuevo");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dactual)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dactual");

                entity.Property(e => e.Dnuevo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dnuevo");

                entity.Property(e => e.GtipoAccion).HasColumnName("gtipo_accion");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("observacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Convenio>(entity =>
            {
                entity.HasKey(e => e.Cconvenio);

                entity.ToTable("convenio");

                entity.Property(e => e.Cconvenio)
                    .ValueGeneratedNever()
                    .HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dconvenio)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dconvenio");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Ffirma)
                    .HasColumnType("datetime")
                    .HasColumnName("ffirma");

                entity.Property(e => e.Fincio)
                    .HasColumnType("datetime")
                    .HasColumnName("fincio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ggrupo).HasColumnName("ggrupo");

                entity.Property(e => e.Gprorrogable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gprorrogable")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoConvenio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_convenio")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoDuracion).HasColumnName("gtipo_duracion");

                entity.Property(e => e.Gvia).HasColumnName("gvia");

                entity.Property(e => e.Nalumno).HasColumnName("nalumno");

                entity.Property(e => e.Npotenciales).HasColumnName("npotenciales");

                entity.Property(e => e.Tcomentario)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tcomentario");

                entity.Property(e => e.Tduracion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tduracion");

                entity.Property(e => e.Tfin)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tfin");

                entity.Property(e => e.Tofrecemos)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tofrecemos");

                entity.Property(e => e.Trecibimos)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("trecibimos");
            });

            modelBuilder.Entity<ConvenioArchivo>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cfacultad, e.TipoConvenio, e.NroConvenio, e.AnioConvenio });

                entity.ToTable("convenio_archivo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cfacultad)
                    .HasColumnName("cfacultad")
                    .HasDefaultValueSql("((1))")
                    .HasComment("1:UNIDA,2:Fac. Salud,3:Fac. Ciencias Jurídicas,4:Fac. Gestión,5:Fac. Ingenierias");

                entity.Property(e => e.TipoConvenio).HasColumnName("tipo_convenio");

                entity.Property(e => e.NroConvenio).HasColumnName("nro_convenio");

                entity.Property(e => e.AnioConvenio).HasColumnName("anio_convenio");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Convenio)
                    .HasColumnType("image")
                    .HasColumnName("convenio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.NroConvenioCadena)
                    .HasMaxLength(5)
                    .HasColumnName("nro_convenio_cadena");

                entity.Property(e => e.NroConvenioOrden)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nro_convenio_orden");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(500)
                    .HasColumnName("tipo_documento");
            });

            modelBuilder.Entity<ConvenioDetalle>(entity =>
            {
                entity.HasKey(e => new { e.Cconvenio, e.Ccontenido });

                entity.ToTable("convenio_detalle");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("porcentaje");
            });

            modelBuilder.Entity<ConvenioDetalleH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("convenio_detalle_h");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("porcentaje");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ConvenioH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("convenio_h");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dconvenio)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dconvenio");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Ffirma)
                    .HasColumnType("datetime")
                    .HasColumnName("ffirma");

                entity.Property(e => e.Fincio)
                    .HasColumnType("datetime")
                    .HasColumnName("fincio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ggrupo).HasColumnName("ggrupo");

                entity.Property(e => e.GtipoConvenio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_convenio")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoDuracion).HasColumnName("gtipo_duracion");

                entity.Property(e => e.Gvia).HasColumnName("gvia");

                entity.Property(e => e.Nalumno).HasColumnName("nalumno");

                entity.Property(e => e.Npotenciales).HasColumnName("npotenciales");

                entity.Property(e => e.Tcomentario)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tcomentario");

                entity.Property(e => e.Tduracion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tduracion");

                entity.Property(e => e.Tfin)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tfin");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Tofrecemos)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tofrecemos");

                entity.Property(e => e.Trecibimos)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("trecibimos");
            });

            modelBuilder.Entity<CorreoMasivoC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("correo_masivo_c");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcorreo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcorreo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Ncorreo).HasColumnName("ncorreo");

                entity.Property(e => e.Nenvio).HasColumnName("nenvio");
            });

            modelBuilder.Entity<CorreoMasivoConfirmacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("correo_masivo_confirmacion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gconfirmacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gconfirmacion")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoConfirmacion).HasColumnName("gtipo_confirmacion");

                entity.Property(e => e.Ncorreo).HasColumnName("ncorreo");
            });

            modelBuilder.Entity<CorreoMasivoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("correo_masivo_d");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Dasunto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dasunto");

                entity.Property(e => e.Dcorreo)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("dcorreo");

                entity.Property(e => e.Ncorreo).HasColumnName("ncorreo");

                entity.Property(e => e.TarchivoFisico1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_fisico1");

                entity.Property(e => e.TarchivoFisico2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_fisico2");

                entity.Property(e => e.TarchivoFisico3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_fisico3");

                entity.Property(e => e.TarchivoLogico1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_logico1");

                entity.Property(e => e.TarchivoLogico2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_logico2");

                entity.Property(e => e.TarchivoLogico3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo_logico3");
            });

            modelBuilder.Entity<CorreosMat218>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("correos_mat_218");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Tcorreo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<Corrije21032013>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("corrije_21032013");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<Corrije210320132>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("corrije_21032013_2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<CostosAluper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_aluper");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.NcursoMatriculado).HasColumnName("ncurso_matriculado");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosAluperH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_aluper_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.NcursoMatriculado).HasColumnName("ncurso_matriculado");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosAulse>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_aulses");

                entity.Property(e => e.Alumnos).HasColumnName("alumnos");

                entity.Property(e => e.Canses).HasColumnName("canses");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Participacion).HasColumnName("participacion");
            });

            modelBuilder.Entity<CostosAulsesH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_aulses_h");

                entity.Property(e => e.Alumnos).HasColumnName("alumnos");

                entity.Property(e => e.Canses).HasColumnName("canses");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Participacion).HasColumnName("participacion");
            });

            modelBuilder.Entity<CostosBlose>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_bloses");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosBlosesH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_bloses_h");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_car");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.NuevosAlumnos).HasColumnName("nuevos_alumnos");
            });

            modelBuilder.Entity<CostosCarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_car_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.NuevosAlumnos).HasColumnName("nuevos_alumnos");
            });

            modelBuilder.Entity<CostosCarloc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_carloc");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCarlocH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_carloc_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCentCost>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_cent_cost");

                entity.Property(e => e.CoCentCost)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("co_cent_cost");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DeCentCost)
                    .IsRequired()
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("de_cent_cost");
            });

            modelBuilder.Entity<CostosCur>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_cur");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCurH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_cur_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCurblocar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curblocar");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCurblocarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curblocar_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCurblopro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curblopro");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.TotproCurblo).HasColumnName("totpro_curblo");
            });

            modelBuilder.Entity<CostosCurbloproH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curblopro_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.TotproCurblo).HasColumnName("totpro_curblo");
            });

            modelBuilder.Entity<CostosCurcar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curcar");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosCurcarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_curcar_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosFic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_fic");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosFicH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_fic_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosMtrabaCor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_mtraba_cor");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CostosParam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_param");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cusuario")
                    .IsFixedLength(true);

                entity.Property(e => e.Fgenerado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgenerado");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosParamPlaac>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_param_plaac");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.CgeneradoPras).HasColumnName("cgenerado_pras");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffinplan)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinplan");

                entity.Property(e => e.Fgenerado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgenerado");

                entity.Property(e => e.Finiplan)
                    .HasColumnType("datetime")
                    .HasColumnName("finiplan");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nevolucion).HasColumnName("nevolucion");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosPerDic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_per_dic");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ctraba)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosPerDicH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_per_dic_h");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ctraba)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosProfAsi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_prof_asis");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CgeneradoPras).HasColumnName("cgenerado_pras");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CoTrab)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("co_trab")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gfalta).HasColumnName("gfalta");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Straba)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("straba")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CostosProfAsisH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_prof_asis_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CgeneradoPras).HasColumnName("cgenerado_pras");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CoTrab)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("co_trab")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gfalta).HasColumnName("gfalta");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Straba)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("straba")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CostosTransaccionC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_transaccion_c");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CostosTransaccionCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("costos_transaccion_c_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<Criterio>(entity =>
            {
                entity.ToTable("criterios");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("id");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");
            });

            modelBuilder.Entity<CronogramaActC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cronograma_act_c");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcronograma)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dcronograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoActividad).HasColumnName("gtipo_actividad");
            });

            modelBuilder.Entity<CronogramaActD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cronograma_act_d");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Dactividad)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dactividad");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<CruceMateria>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cruce_materias");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Cbloque)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cbloque");

                entity.Property(e => e.Ccurso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccurso");

                entity.Property(e => e.Fin)
                    .HasColumnType("datetime")
                    .HasColumnName("fin");

                entity.Property(e => e.Inicio)
                    .HasColumnType("datetime")
                    .HasColumnName("inicio");

                entity.Property(e => e.Nciclo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("nciclo");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<CsAluperH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_aluper_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.NcursoMatriculado).HasColumnName("ncurso_matriculado");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsAulsesH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_aulses_h");

                entity.Property(e => e.Alumnos).HasColumnName("alumnos");

                entity.Property(e => e.Canses).HasColumnName("canses");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Participacion).HasColumnName("participacion");
            });

            modelBuilder.Entity<CsBlosesH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_bloses_h");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsCarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_car_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.NuevosAlumnos).HasColumnName("nuevos_alumnos");
            });

            modelBuilder.Entity<CsCarlocH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_carloc_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsCurH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_cur_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsCurblocarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_curblocar_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsCurbloproH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_curblopro_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.TotproCurblo).HasColumnName("totpro_curblo");
            });

            modelBuilder.Entity<CsCurcarH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_curcar_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsFicH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_fic_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CantidadSesiones).HasColumnName("cantidad_sesiones");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsPerDicH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_per_dic_h");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ctraba)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CsProfAsisH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_prof_asis_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CgeneradoPras).HasColumnName("cgenerado_pras");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CoTrab)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("co_trab")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gfalta).HasColumnName("gfalta");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmes).HasColumnName("nmes");

                entity.Property(e => e.Straba)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("straba")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CsTransaccionCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cs_transaccion_c_h");

                entity.Property(e => e.CantidadAlumnos).HasColumnName("cantidad_alumnos");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nmes).HasColumnName("nmes");
            });

            modelBuilder.Entity<CurriculaAdd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_add");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dobservacion)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ncorrelativo)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorrelativo");

                entity.Property(e => e.NnotaAprob).HasColumnName("nnota_aprob");

                entity.Property(e => e.Scurricula)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");
            });

            modelBuilder.Entity<CurriculaCambioCurricular>(entity =>
            {
                entity.HasKey(e => e.CcurriculaNueva);

                entity.ToTable("curricula_cambio_curricular");

                entity.Property(e => e.CcurriculaNueva)
                    .ValueGeneratedNever()
                    .HasColumnName("ccurricula_nueva");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcurriculaAntigua).HasColumnName("ccurricula_antigua");

                entity.Property(e => e.CperiodoAntiguo).HasColumnName("cperiodo_antiguo");

                entity.Property(e => e.CperiodoNuevo).HasColumnName("cperiodo_nuevo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");
            });

            modelBuilder.Entity<CurriculaCcAnalisi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_cc_analisis");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CrNARealizar).HasColumnName("cr_n_a_realizar");

                entity.Property(e => e.CredCursados).HasColumnName("cred_cursados");

                entity.Property(e => e.CredCursadosN).HasColumnName("cred_cursados_n");

                entity.Property(e => e.CredNuevos).HasColumnName("cred_nuevos");

                entity.Property(e => e.CredTotal).HasColumnName("cred_total");

                entity.Property(e => e.CredTotalN).HasColumnName("cred_total_n");

                entity.Property(e => e.CrpAntiguosEnNc).HasColumnName("crp_antiguos_en_nc");

                entity.Property(e => e.CrpCa).HasColumnName("crp_ca");

                entity.Property(e => e.CrpCn).HasColumnName("crp_cn");

                entity.Property(e => e.CrpNc).HasColumnName("crp_nc");

                entity.Property(e => e.MaxCrNm).HasColumnName("max_cr_nm");

                entity.Property(e => e.NcicloAprobado).HasColumnName("nciclo_aprobado");

                entity.Property(e => e.NcicloAprobadoN).HasColumnName("nciclo_aprobado_n");

                entity.Property(e => e.NcicloSinAprobar).HasColumnName("nciclo_sin_aprobar");

                entity.Property(e => e.NcicloSinAprobarN).HasColumnName("nciclo_sin_aprobar_n");
            });

            modelBuilder.Entity<CurriculaCcAnalisisEq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_cc_analisis_eq");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CrNARealizar).HasColumnName("cr_n_a_realizar");

                entity.Property(e => e.CredCursados).HasColumnName("cred_cursados");

                entity.Property(e => e.CredCursadosN).HasColumnName("cred_cursados_n");

                entity.Property(e => e.CredNuevos).HasColumnName("cred_nuevos");

                entity.Property(e => e.CredTotal).HasColumnName("cred_total");

                entity.Property(e => e.CredTotalN).HasColumnName("cred_total_n");

                entity.Property(e => e.CrpAntiguosEnNc).HasColumnName("crp_antiguos_en_nc");

                entity.Property(e => e.CrpCa).HasColumnName("crp_ca");

                entity.Property(e => e.CrpCn).HasColumnName("crp_cn");

                entity.Property(e => e.CrpNc).HasColumnName("crp_nc");

                entity.Property(e => e.MaxCrNm).HasColumnName("max_cr_nm");

                entity.Property(e => e.NcicloAprobado).HasColumnName("nciclo_aprobado");

                entity.Property(e => e.NcicloAprobadoN).HasColumnName("nciclo_aprobado_n");

                entity.Property(e => e.NcicloSinAprobar).HasColumnName("nciclo_sin_aprobar");

                entity.Property(e => e.NcicloSinAprobarN).HasColumnName("nciclo_sin_aprobar_n");
            });

            modelBuilder.Entity<CurriculaCcAnalisisOverload>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_cc_analisis_overload");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CredAprobados).HasColumnName("cred_aprobados");

                entity.Property(e => e.CredEquiparados).HasColumnName("cred_equiparados");

                entity.Property(e => e.CredNuevosCn).HasColumnName("cred_nuevos_cn");

                entity.Property(e => e.CredPendCa).HasColumnName("cred_pend_ca");

                entity.Property(e => e.CredPendCn).HasColumnName("cred_pend_cn");

                entity.Property(e => e.CredTotalCa).HasColumnName("cred_total_ca");

                entity.Property(e => e.CredTotalCn).HasColumnName("cred_total_cn");
            });

            modelBuilder.Entity<CurriculaCcDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_cc_detalles");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CrNARealizar).HasColumnName("cr_n_a_realizar");

                entity.Property(e => e.CredCursados).HasColumnName("cred_cursados");

                entity.Property(e => e.CredCursadosN).HasColumnName("cred_cursados_n");

                entity.Property(e => e.CredNuevos).HasColumnName("cred_nuevos");

                entity.Property(e => e.CredTotal).HasColumnName("cred_total");

                entity.Property(e => e.CredTotalN).HasColumnName("cred_total_n");

                entity.Property(e => e.CrpAntiguosEnNc).HasColumnName("crp_antiguos_en_nc");

                entity.Property(e => e.CrpCa).HasColumnName("crp_ca");

                entity.Property(e => e.CrpCn).HasColumnName("crp_cn");

                entity.Property(e => e.CrpNc).HasColumnName("crp_nc");

                entity.Property(e => e.MaxCrNm).HasColumnName("max_cr_nm");

                entity.Property(e => e.NcicloAprobado).HasColumnName("nciclo_aprobado");

                entity.Property(e => e.NcicloAprobadoN).HasColumnName("nciclo_aprobado_n");

                entity.Property(e => e.NcicloSinAprobar).HasColumnName("nciclo_sin_aprobar");

                entity.Property(e => e.NcicloSinAprobarN).HasColumnName("nciclo_sin_aprobar_n");
            });

            modelBuilder.Entity<CurriculaCurso>(entity =>
            {
                entity.HasKey(e => new { e.Ccurricula, e.Ccurso })
                    .HasName("PK__curricula_curso__2121D3D7");

                entity.ToTable("curricula_curso");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoMinimo)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito_minimo");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Silabo)
                    .IsUnicode(false)
                    .HasColumnName("silabo");

                entity.HasOne(d => d.CcurriculaNavigation)
                    .WithMany(p => p.CurriculaCursos)
                    .HasForeignKey(d => d.Ccurricula)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_curricula_curso_a_curricula");

                entity.HasOne(d => d.CcursoNavigation)
                    .WithMany(p => p.CurriculaCursos)
                    .HasForeignKey(d => d.Ccurso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_curricula_curso_a_curso");
            });

            modelBuilder.Entity<CurriculaCursoA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_curso_as");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoMinimo)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito_minimo");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<CurriculaCursoAdd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_curso_add");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Mas).HasColumnName("mas");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoMinimo).HasColumnName("ncredito_minimo");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.Scurricula)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<CurriculaCursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_curso_h");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.NcreditoMinimo).HasColumnName("ncredito_minimo");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<CurriculaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_h");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoInicio).HasColumnName("cperiodo_inicio");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");
            });

            modelBuilder.Entity<CurriculaTempNueva>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_temp_nuevas");

                entity.Property(e => e.DcursoU)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_u");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncreditos).HasColumnName("ncreditos");

                entity.Property(e => e.Nhoras).HasColumnName("nhoras");

                entity.Property(e => e.Prereq)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("prereq");

                entity.Property(e => e.ScursoU)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");
            });

            modelBuilder.Entity<CurriculaTempNuevasCh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curricula_temp_nuevas_ch");

                entity.Property(e => e.DcursoU)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_u");

                entity.Property(e => e.Hpra).HasColumnName("hpra");

                entity.Property(e => e.Hteo).HasColumnName("hteo");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncreditos).HasColumnName("ncreditos");

                entity.Property(e => e.Nhoras).HasColumnName("nhoras");

                entity.Property(e => e.ScursoU)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");
            });

            modelBuilder.Entity<Curriculum>(entity =>
            {
                entity.HasKey(e => e.Ccurricula)
                    .HasName("PK__curricula__1F398B65");

                entity.ToTable("curricula");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Ccurricula }, "curricula02");

                entity.Property(e => e.Ccurricula)
                    .ValueGeneratedNever()
                    .HasColumnName("ccurricula");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoInicio).HasColumnName("cperiodo_inicio");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NnotaAprob)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("nnota_aprob");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");
            });

            modelBuilder.Entity<Curso>(entity =>
            {
                entity.HasKey(e => e.Ccurso)
                    .HasName("PK__curso__1A74D648");

                entity.ToTable("curso");

                entity.HasIndex(e => new { e.Cprograma, e.ScursoU }, "iu_curso_cprograma_scurso_u")
                    .IsUnique();

                entity.Property(e => e.Ccurso)
                    .ValueGeneratedNever()
                    .HasColumnName("ccurso");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Careaconocimiento).HasColumnName("careaconocimiento");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso")
                    .HasComputedColumnSql("([dcurso_u])", false);

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado")
                    .HasComputedColumnSql("([dcurso_certificado_u])", false);

                entity.Property(e => e.DcursoCertificadoU)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado_u");

                entity.Property(e => e.DcursoU)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_u");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra)
                    .HasColumnName("gcobra")
                    .HasComputedColumnSql("([gcobra_u])", false);

                entity.Property(e => e.GcobraU).HasColumnName("gcobra_u");

                entity.Property(e => e.Ginasistencia)
                    .HasColumnName("ginasistencia")
                    .HasComputedColumnSql("([ginasistencia_u])", false);

                entity.Property(e => e.GinasistenciaU).HasColumnName("ginasistencia_u");

                entity.Property(e => e.GtieneHorario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtiene_horario")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoCredito)
                    .HasColumnName("gtipo_credito")
                    .HasComputedColumnSql("([gtipo_credito_u])", false);

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.Gtipocurso).HasColumnName("gtipocurso");

                entity.Property(e => e.Ncadena)
                    .HasColumnName("ncadena")
                    .HasComputedColumnSql("([ncadena_u])", false);

                entity.Property(e => e.NcadenaU).HasColumnName("ncadena_u");

                entity.Property(e => e.Ncredito)
                    .HasColumnName("ncredito")
                    .HasComputedColumnSql("([ncredito_u])", false);

                entity.Property(e => e.NcreditoReal)
                    .HasColumnName("ncredito_real")
                    .HasComputedColumnSql("([ncredito_real_u])", false);

                entity.Property(e => e.NcreditoRealU).HasColumnName("ncredito_real_u");

                entity.Property(e => e.NcreditoU).HasColumnName("ncredito_u");

                entity.Property(e => e.Nfamilia)
                    .HasColumnName("nfamilia")
                    .HasComputedColumnSql("([nfamilia_u])", false);

                entity.Property(e => e.NfamiliaU).HasColumnName("nfamilia_u");

                entity.Property(e => e.Nlaboratorio)
                    .HasColumnName("nlaboratorio")
                    .HasComputedColumnSql("([nlaboratorio_u])", false);

                entity.Property(e => e.NlaboratorioU).HasColumnName("nlaboratorio_u");

                entity.Property(e => e.Npractica)
                    .HasColumnName("npractica")
                    .HasComputedColumnSql("([npractica_u])", false);

                entity.Property(e => e.NpracticaU).HasColumnName("npractica_u");

                entity.Property(e => e.Nteoria)
                    .HasColumnName("nteoria")
                    .HasComputedColumnSql("([nteoria_u])", false);

                entity.Property(e => e.NteoriaU).HasColumnName("nteoria_u");

                entity.Property(e => e.NvezMaxima)
                    .HasColumnName("nvez_maxima")
                    .HasComputedColumnSql("([nvez_maxima_u])", false);

                entity.Property(e => e.NvezMaximaU).HasColumnName("nvez_maxima_u");

                entity.Property(e => e.PlantillaCurso)
                    .HasMaxLength(100)
                    .HasColumnName("plantilla_curso");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia")
                    .HasComputedColumnSql("([porc_inasistencia_u])", false);

                entity.Property(e => e.PorcInasistenciaU)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia_u");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso")
                    .HasComputedColumnSql("([scurso_u])", false);

                entity.Property(e => e.ScursoU)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");

                entity.Property(e => e.Silabo).HasColumnName("silabo");
            });

            modelBuilder.Entity<CursoCoordinador>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cprofesor, e.Ccurso })
                    .HasName("PK__curso_coordinado__72BBEAA9");

                entity.ToTable("curso_coordinador");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprofesor2).HasColumnName("cprofesor2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.HasOne(d => d.CprofesorNavigation)
                    .WithMany(p => p.CursoCoordinadors)
                    .HasForeignKey(d => d.Cprofesor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_curso_coordinador_a_profesor");
            });

            modelBuilder.Entity<CursoFamilium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curso_familia");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cfamilia).HasColumnName("cfamilia");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<CursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curso_h");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.DcursoCertificadoU)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado_u");

                entity.Property(e => e.DcursoU)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_u");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.GcobraU).HasColumnName("gcobra_u");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.GinasistenciaU).HasColumnName("ginasistencia_u");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.Gtipocurso).HasColumnName("gtipocurso");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.NcadenaU).HasColumnName("ncadena_u");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.NcreditoRealU).HasColumnName("ncredito_real_u");

                entity.Property(e => e.NcreditoU).HasColumnName("ncredito_u");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.NfamiliaU).HasColumnName("nfamilia_u");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.NlaboratorioU).HasColumnName("nlaboratorio_u");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.NpracticaU).HasColumnName("npractica_u");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NteoriaU).HasColumnName("nteoria_u");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.NvezMaximaU).HasColumnName("nvez_maxima_u");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.PorcInasistenciaU)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia_u");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.ScursoU)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");
            });

            modelBuilder.Entity<CursoLlevado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curso_llevado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoAprobacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_aprobacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Npromedio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("npromedio")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<CursoMaterial>(entity =>
            {
                entity.ToTable("curso_material");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");
            });

            modelBuilder.Entity<CursoParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curso_parametro");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gconsolidado).HasColumnName("gconsolidado");

                entity.Property(e => e.Gfichas).HasColumnName("gfichas");

                entity.Property(e => e.Gnota).HasColumnName("gnota");
            });

            modelBuilder.Entity<CursoSoftware>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("curso_software");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Csoftware).HasColumnName("csoftware");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<CursosDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cursos_documentos");

                entity.Property(e => e.BinArchivo)
                    .HasColumnType("image")
                    .HasColumnName("bin_archivo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdocumento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cdocumento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesormod).HasColumnName("cprofesormod");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nintentos).HasColumnName("nintentos");

                entity.Property(e => e.Ntamano)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("ntamano");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo");

                entity.Property(e => e.Tdescripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdescripcion");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<CursosFueraMalla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cursos_fuera_malla");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(140)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<Datacook>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("datacook");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<Dato>(entity =>
            {
                entity.HasKey(e => e.Cdato)
                    .HasName("PK__dato__6A1C8307");

                entity.ToTable("dato");

                entity.HasIndex(e => new { e.Cclasificacion, e.Ccolumna }, "iu_dato_cobjeto_ccomposicion")
                    .IsUnique();

                entity.Property(e => e.Cdato).HasColumnName("cdato");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccolumna).HasColumnName("ccolumna");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Tdato)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tdato");

                entity.HasOne(d => d.CclasificacionNavigation)
                    .WithMany(p => p.Datos)
                    .HasForeignKey(d => d.Cclasificacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dato_clasificacion");

                entity.HasOne(d => d.CcolumnaNavigation)
                    .WithMany(p => p.Datos)
                    .HasForeignKey(d => d.Ccolumna)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_dato_a_columna");
            });

            modelBuilder.Entity<DatosDiscapacidad>(entity =>
            {
                entity.HasKey(e => e.IdDiscapacidad);

                entity.ToTable("datos_discapacidad");

                entity.Property(e => e.IdDiscapacidad).HasColumnName("idDiscapacidad");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(100)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Descripciondiscapacidad)
                    .HasMaxLength(2550)
                    .HasColumnName("descripciondiscapacidad");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Tipodiscapacidad).HasColumnName("tipodiscapacidad");
            });

            modelBuilder.Entity<Dbenef00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("dbenef00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusmod)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusmod")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("dglosa")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Fusmod)
                    .HasColumnType("datetime")
                    .HasColumnName("fusmod");

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Husmod)
                    .HasColumnType("datetime")
                    .HasColumnName("husmod");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Nglosa).HasColumnName("nglosa");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<DeclaracionVacunaCovid>(entity =>
            {
                entity.HasKey(e => e.IdDeclaracion);

                entity.ToTable("declaracion_vacuna_covid");

                entity.Property(e => e.IdDeclaracion).HasColumnName("idDeclaracion");

                entity.Property(e => e.CantDosis).HasColumnName("cant_dosis");

                entity.Property(e => e.CertificadoFrente)
                    .HasColumnType("image")
                    .HasColumnName("certificado_frente");

                entity.Property(e => e.CertificadoPosterior)
                    .HasColumnType("image")
                    .HasColumnName("certificado_posterior");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(50)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TcertificadoFrente)
                    .HasMaxLength(150)
                    .HasColumnName("tcertificado_frente");

                entity.Property(e => e.TcertificadoPosterior)
                    .HasMaxLength(150)
                    .HasColumnName("tcertificado_posterior");

                entity.Property(e => e.TipoDosis)
                    .HasMaxLength(50)
                    .HasColumnName("tipo_dosis");
            });

            modelBuilder.Entity<DepartamentoAcad>(entity =>
            {
                entity.HasKey(e => e.Cdepartamento);

                entity.ToTable("departamento_acad");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ddepartamento)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddepartamento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sdepartamento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sdepartamento");
            });

            modelBuilder.Entity<DocenteGrupoCursoConfig>(entity =>
            {
                entity.HasKey(e => e.IdGrupo)
                    .HasName("PK__docente___EC597A874C2B7316");

                entity.ToTable("docente_grupo_curso_config");

                entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dgrupo).HasMaxLength(10);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");
            });

            modelBuilder.Entity<DocenteGrupoCursoConfigH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("docente_grupo_curso_config_h");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(10)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            });

            modelBuilder.Entity<DocumCompaniaPer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("docum_compania_per");

                entity.Property(e => e.Cdocumento).HasColumnName("cdocumento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Flimite)
                    .HasColumnType("datetime")
                    .HasColumnName("flimite");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdocumento).HasColumnName("gdocumento");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nsesion).HasColumnName("nsesion");
            });

            modelBuilder.Entity<DocumCompanium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("docum_compania");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fentrego)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrego");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gentrego).HasColumnName("gentrego");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<Documento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("documento");

                entity.Property(e => e.Cartic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdocumento).HasColumnName("cdocumento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ddocumento)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ddocumento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gpago).HasColumnName("gpago");
            });

            modelBuilder.Entity<DocumentoExtension>(entity =>
            {
                entity.HasKey(e => e.IdExtension)
                    .HasName("PK__document__31A3DD89DC95BBB2");

                entity.ToTable("documento_extension");

                entity.Property(e => e.IdExtension).HasColumnName("id_extension");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(100)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(100)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Extension).HasColumnName("extension");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FcreacionInforme)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion_informe");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionInforme)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_informe");

                entity.Property(e => e.Informe).HasColumnName("informe");

                entity.Property(e => e.TipoArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("tipo_archivo");

                entity.Property(e => e.TipoArchivoInforme)
                    .HasMaxLength(250)
                    .HasColumnName("tipo_archivo_informe");

                entity.Property(e => e.TituloArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("titulo_archivo");

                entity.Property(e => e.TituloArchivoInforme)
                    .HasMaxLength(250)
                    .HasColumnName("titulo_archivo_informe");
            });

            modelBuilder.Entity<DocumentoNumero>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("documento_numero");

                entity.Property(e => e.Cdocumento).HasColumnName("cdocumento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nano).HasColumnName("nano");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");
            });

            modelBuilder.Entity<DocumentoPlanificacion>(entity =>
            {
                entity.HasKey(e => e.IdPlanificacion)
                    .HasName("PK__document__505228F9164C3259");

                entity.ToTable("documento_planificacion");

                entity.Property(e => e.IdPlanificacion).HasColumnName("id_planificacion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(100)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(100)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Planificacion).HasColumnName("planificacion");

                entity.Property(e => e.TipoArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("tipo_archivo");

                entity.Property(e => e.TituloArchivo)
                    .HasMaxLength(250)
                    .HasColumnName("titulo_archivo");
            });

            modelBuilder.Entity<DocumentoVersion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("documento_version");

                entity.Property(e => e.Cdocumento).HasColumnName("cdocumento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nderecho)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nderecho");

                entity.Property(e => e.Ninferior)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ninferior");

                entity.Property(e => e.Nizquierdo)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nizquierdo");

                entity.Property(e => e.Nsuperior)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nsuperior");

                entity.Property(e => e.Nversion).HasColumnName("nversion");

                entity.Property(e => e.Ttexto)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("ttexto")
                    .IsFixedLength(true);

                entity.Property(e => e.Tversion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tversion");
            });

            modelBuilder.Entity<DocumentoWeb>(entity =>
            {
                entity.HasKey(e => e.CdocumentoWeb)
                    .HasName("PK__documento_web__08961D2F");

                entity.ToTable("documento_web");

                entity.Property(e => e.CdocumentoWeb)
                    .ValueGeneratedNever()
                    .HasColumnName("cdocumento_web");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoDestino)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctipo_destino")
                    .IsFixedLength(true);

                entity.Property(e => e.CtipoDocumento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctipo_documento");

                entity.Property(e => e.Druta)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("druta");

                entity.Property(e => e.Dsumilla)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dsumilla");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Tdocumento)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdocumento");
            });

            modelBuilder.Entity<DocumentosProvisionado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("documentos_provisionados");

                entity.Property(e => e.Ccarre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Dobser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dobser");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fmasum)
                    .HasColumnType("datetime")
                    .HasColumnName("fmasum");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Idocum)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum");

                entity.Property(e => e.Imonna)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imonna");

                entity.Property(e => e.IsaldoOrig)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_orig");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");
            });

            modelBuilder.Entity<EAlumnoAsist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("e_alumno_asist");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Nsesion).HasColumnName("nsesion");
            });

            modelBuilder.Entity<EProfesorAsist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("e_profesor_asist");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_asist");

                entity.Property(e => e.FinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_asist");

                entity.Property(e => e.Gcerrado).HasColumnName("gcerrado");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.NvecesGrabo).HasColumnName("nveces_grabo");
            });

            modelBuilder.Entity<EducativoAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("educativo_alumno");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccarrera3).HasColumnName("ccarrera3");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Cregistro).HasColumnName("cregistro");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ggrado).HasColumnName("ggrado");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");
            });

            modelBuilder.Entity<EducativoCateg>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Ceducativo, e.Ceducativo2 })
                    .HasName("PK__educativo_categ__7DEE718A");

                entity.ToTable("educativo_categ");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Scategoria)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("scategoria");
            });

            modelBuilder.Entity<EducativoContacto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("educativo_contacto");

                entity.Property(e => e.Ccontacto).HasColumnName("ccontacto");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Dmaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dmaterno");

                entity.Property(e => e.Dnombre)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dnombre");

                entity.Property(e => e.Dpaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dpaterno");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gcargo).HasColumnName("gcargo");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Stitulo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("stitulo");

                entity.Property(e => e.Stitulo1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("stitulo1");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<EducativoEvento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("educativo_evento");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Dmaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dmaterno");

                entity.Property(e => e.Dnombre)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dnombre");

                entity.Property(e => e.Dpaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("dpaterno");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Gevento).HasColumnName("gevento");

                entity.Property(e => e.Nficha).HasColumnName("nficha");

                entity.Property(e => e.Tactividad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tactividad");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<Empleado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("empleado");

                entity.Property(e => e.Ccodtra)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ccodtra")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempleado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cempleado");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistenciaInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistencia_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gregimen).HasColumnName("gregimen");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.Tbancaria)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tbancaria");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<Empresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("empresa");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cempresa).HasColumnName("cempresa");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dempresa)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dempresa");

                entity.Property(e => e.Dpostal)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dpostal");

                entity.Property(e => e.Drazonsocial)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("drazonsocial");

                entity.Property(e => e.Durbanizacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("durbanizacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ggiro).HasColumnName("ggiro");

                entity.Property(e => e.Gsector).HasColumnName("gsector");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.Nranking).HasColumnName("nranking");

                entity.Property(e => e.Nruc)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("nruc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<EmpresaContacto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("empresa_contacto");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("apellidos");

                entity.Property(e => e.Ccontacto).HasColumnName("ccontacto");

                entity.Property(e => e.Cempresa).HasColumnName("cempresa");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Datencion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("datencion");

                entity.Property(e => e.Dcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcargo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gresponsable).HasColumnName("gresponsable");

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombres");

                entity.Property(e => e.Temail)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("temail");
            });

            modelBuilder.Entity<Encuesta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("encuestas");

                entity.Property(e => e.Accesibilidad).HasColumnName("ACCESIBILIDAD");

                entity.Property(e => e.AccesibleConsultas).HasColumnName("ACCESIBLE_CONSULTAS");

                entity.Property(e => e.AsistenciaClases).HasColumnName("ASISTENCIA_CLASES");

                entity.Property(e => e.CalificacionProfesor).HasColumnName("CALIFICACION_PROFESOR");

                entity.Property(e => e.CalificacionesPlazoEstablecido).HasColumnName("CALIFICACIONES_PLAZO_ESTABLECIDO");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CARRERA");

                entity.Property(e => e.ClasesPreparadas).HasColumnName("CLASES_PREPARADAS");

                entity.Property(e => e.ConceptosConsultas).HasColumnName("CONCEPTOS_CONSULTAS");

                entity.Property(e => e.EvaluacionFinal).HasColumnName("EVALUACION_FINAL");

                entity.Property(e => e.HorarioEntradaSalida).HasColumnName("HORARIO_ENTRADA_SALIDA");

                entity.Property(e => e.Liderazgo).HasColumnName("LIDERAZGO");

                entity.Property(e => e.Materia)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MATERIA");

                entity.Property(e => e.Profesor)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PROFESOR");

                entity.Property(e => e.ProgramaCurso).HasColumnName("PROGRAMA_CURSO");

                entity.Property(e => e.ResolverProblemas).HasColumnName("RESOLVER_PROBLEMAS");

                entity.Property(e => e.RespetoEstudiantes).HasColumnName("RESPETO_ESTUDIANTES");

                entity.Property(e => e.SeminariosAsignaturas).HasColumnName("SEMINARIOS_ASIGNATURAS");

                entity.Property(e => e.Turno).HasColumnName("TURNO");
            });

            modelBuilder.Entity<EncuestaAlumnoABiblioteca>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_biblioteca");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAlumnoACafeterium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_cafeteria");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAlumnoACoordinador>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_coordinador");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaAlumnoADocente>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso, e.Calumno, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_docente");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaAlumnoAInfraestructura>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_infraestructura");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAlumnoALaboratorio>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_laboratorio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAlumnoALibrerium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_libreria");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAlumnoASga>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_alumno_a_sga");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaAutoevaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero, e.Cuestionario, e.NumeroEncuesta });

                entity.ToTable("encuesta_autoevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero)
                    .HasMaxLength(50)
                    .HasColumnName("preguntanumero");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.NumeroEncuesta).HasColumnName("numero_encuesta");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaAutoevaluacionComentario>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Cuestionario, e.NumeroEncuesta });

                entity.ToTable("encuesta_autoevaluacion_comentario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.NumeroEncuesta).HasColumnName("numero_encuesta");

                entity.Property(e => e.Cencuestacomentario)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuestacomentario");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(600)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");
            });

            modelBuilder.Entity<EncuestaCoordinadorAAutoevaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Anio, e.CusuarioFuncionario, e.Preguntanumero });

                entity.ToTable("encuesta_coordinador_a_autoevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CusuarioFuncionario).HasColumnName("cusuario_funcionario");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(250)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaCoordinadorAProfesor>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Anio, e.CusuarioCoordinador, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_coordinador_a_profesor");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(250)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(250)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo)
                    .HasMaxLength(250)
                    .HasColumnName("nciclo");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaCovid19>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Modulo, e.Codigo, e.Preguntanumero })
                    .HasName("PK_encuesta_covid-19");

                entity.ToTable("encuesta_covid_19");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(3)
                    .HasColumnName("modulo")
                    .IsFixedLength(true);

                entity.Property(e => e.Codigo)
                    .HasColumnName("codigo")
                    .HasComment("Alumno/Profesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");
            });

            modelBuilder.Entity<EncuestaDecanoACoordinador>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Anio, e.CusuarioDecano, e.CusuarioCoordinador, e.Preguntanumero });

                entity.ToTable("encuesta_decano_a_coordinador");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CusuarioDecano).HasColumnName("cusuario_decano");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(250)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaDeslaboral>(entity =>
            {
                entity.HasKey(e => e.Claboral);

                entity.ToTable("ENCUESTA_DESLABORAL");

                entity.Property(e => e.Claboral)
                    .ValueGeneratedNever()
                    .HasColumnName("claboral");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Dempresa)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("dempresa");

                entity.Property(e => e.Ndireccion).HasColumnName("ndireccion");

                entity.Property(e => e.Ntelefono)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono");

                entity.Property(e => e.Tciudad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tciudad");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdepartamento");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Tempresa).HasColumnName("tempresa");

                entity.HasOne(d => d.CencuestaNavigation)
                    .WithMany(p => p.EncuestaDeslaborals)
                    .HasForeignKey(d => d.Cencuesta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_encuesta_deslaboral_encuesta");
            });

            modelBuilder.Entity<EncuestaDirectorAcademicoADecano>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Anio, e.CusuarioDirectorAcademico, e.CusuarioDecano, e.Preguntanumero });

                entity.ToTable("encuesta_director_academico_a_decanos");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CusuarioDirectorAcademico).HasColumnName("cusuario_director_academico");

                entity.Property(e => e.CusuarioDecano).HasColumnName("cusuario_decano");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaDocenteAAlumno>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_alumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.AntiguedadAsignatura)
                    .HasMaxLength(250)
                    .HasColumnName("antiguedad_asignatura");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(250)
                    .HasColumnName("responsable");
            });

            modelBuilder.Entity<EncuestaDocenteAAutoevaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccurso, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_autoevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaDocenteABiblioteca>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_biblioteca");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteACafeterium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_cafeteria");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteACoordinador>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_coordinador");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<EncuestaDocenteAInfraestructura>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_infraestructura");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteALaboratorio>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_laboratorio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteALibrerium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_libreria");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteASgp>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Preguntanumero });

                entity.ToTable("encuesta_docente_a_sgp");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(250)
                    .HasColumnName("observacion");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<EncuestaDocenteInvestigacion>(entity =>
            {
                entity.HasKey(e => e.Cencuesta)
                    .HasName("PK__encuesta__E2D9E06357A557A8");

                entity.ToTable("encuesta_docente_investigacion");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Respuesta)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("respuesta");
            });

            modelBuilder.Entity<EncuestaEgresado>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_egresado");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");

                entity.Property(e => e.Resp6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("resp6");
            });

            modelBuilder.Entity<EncuestaEgresado1>(entity =>
            {
                entity.HasKey(e => e.Cencuesta);

                entity.ToTable("ENCUESTA_EGRESADOS");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedNever()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.ActInvestigacion).HasColumnName("act_investigacion");

                entity.Property(e => e.Aegreso).HasColumnName("aegreso");

                entity.Property(e => e.Aingreso).HasColumnName("aingreso");

                entity.Property(e => e.AreaPostgrado)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("area_postgrado");

                entity.Property(e => e.Aspectos).HasColumnName("aspectos");

                entity.Property(e => e.CantCargos).HasColumnName("cant_cargos");

                entity.Property(e => e.CausaNoTrabaja).HasColumnName("causa_no_trabaja");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ciudad");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Contribuye).HasColumnName("contribuye");

                entity.Property(e => e.ContribuyeAct).HasColumnName("contribuye_act");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DactInvestigacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dact_investigacion");

                entity.Property(e => e.Daspectos)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("daspectos");

                entity.Property(e => e.DcausaNoTrabaja)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dcausa_no_trabaja");

                entity.Property(e => e.DdificIniciarse)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ddific_iniciarse");

                entity.Property(e => e.DepNacimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dep_nacimiento");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("departamento");

                entity.Property(e => e.DificIniciarse).HasColumnName("dific_iniciarse");

                entity.Property(e => e.Dnacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dnacionalidad");

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DtipoExtension)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_extension");

                entity.Property(e => e.DtipoOcupaActual)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_ocupa_actual");

                entity.Property(e => e.ExtensionUniv).HasColumnName("extension_univ");

                entity.Property(e => e.FacPlanEstudio).HasColumnName("fac_plan_estudio");

                entity.Property(e => e.Fencuesta)
                    .HasColumnType("datetime")
                    .HasColumnName("fencuesta");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.FunProfesion).HasColumnName("fun_profesion");

                entity.Property(e => e.GconEstudios).HasColumnName("gcon_estudios");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GestadoCivil).HasColumnName("gestado_civil");

                entity.Property(e => e.GsegEstudiando).HasColumnName("gseg_estudiando");

                entity.Property(e => e.GsegEstudiando2).HasColumnName("gseg_estudiando2");

                entity.Property(e => e.IntPostgrado).HasColumnName("int_postgrado");

                entity.Property(e => e.NdificIniciarse).HasColumnName("ndific_iniciarse");

                entity.Property(e => e.Ndireccion).HasColumnName("ndireccion");

                entity.Property(e => e.NdocIdentidad)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NivPostgrado).HasColumnName("niv_postgrado");

                entity.Property(e => e.NivSalario).HasColumnName("niv_salario");

                entity.Property(e => e.Ntelefono)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono");

                entity.Property(e => e.PertinenciaCursos).HasColumnName("pertinencia_cursos");

                entity.Property(e => e.PrepCarrera).HasColumnName("prep_carrera");

                entity.Property(e => e.Sexo).HasColumnName("sexo");

                entity.Property(e => e.Sugerencias)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("sugerencias");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TipoExtension).HasColumnName("tipo_extension");

                entity.Property(e => e.TipoOcupaActual).HasColumnName("tipo_ocupa_actual");

                entity.Property(e => e.TrabActualmente).HasColumnName("trab_actualmente");
            });

            modelBuilder.Entity<EncuestaEgresadoARetroalimentacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Anio, e.Calumno, e.Preguntanumero });

                entity.ToTable("encuesta_egresado_a_retroalimentacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero)
                    .HasMaxLength(250)
                    .HasColumnName("preguntanumero");

                entity.Property(e => e.AnioConclucionCarrera).HasColumnName("anio_conclucion_carrera");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cedula)
                    .HasMaxLength(250)
                    .HasColumnName("cedula");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(250)
                    .HasColumnName("ciudad");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Contrato)
                    .HasMaxLength(250)
                    .HasColumnName("contrato");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Demanda)
                    .HasMaxLength(250)
                    .HasColumnName("demanda");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(250)
                    .HasColumnName("departamento");

                entity.Property(e => e.Domicilio)
                    .HasMaxLength(250)
                    .HasColumnName("domicilio");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .HasColumnName("email");

                entity.Property(e => e.EstadoCivil)
                    .HasMaxLength(1)
                    .HasColumnName("estado_civil")
                    .IsFixedLength(true);

                entity.Property(e => e.Facultad)
                    .HasMaxLength(250)
                    .HasColumnName("facultad");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("fecha_nacimiento");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.IngresoAnio).HasColumnName("ingreso_anio");

                entity.Property(e => e.IngresoMes)
                    .HasMaxLength(250)
                    .HasColumnName("ingreso_mes");

                entity.Property(e => e.LugarTrabajo)
                    .HasMaxLength(250)
                    .HasColumnName("lugar_trabajo");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(1)
                    .HasColumnName("nacionalidad")
                    .IsFixedLength(true);

                entity.Property(e => e.OtroEspecificar)
                    .HasMaxLength(250)
                    .HasColumnName("otro_especificar");

                entity.Property(e => e.Otros)
                    .HasMaxLength(250)
                    .HasColumnName("otros");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp10).HasColumnName("resp10");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");

                entity.Property(e => e.Resp6).HasColumnName("resp6");

                entity.Property(e => e.Resp7).HasColumnName("resp7");

                entity.Property(e => e.Resp8).HasColumnName("resp8");

                entity.Property(e => e.Resp9).HasColumnName("resp9");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(250)
                    .HasColumnName("telefono");
            });

            modelBuilder.Entity<EncuestaEmisora>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Idencuesta, e.Calumno });

                entity.ToTable("encuesta_emisoras");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Idencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("idencuesta");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fechacreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fechacreacion");

                entity.Property(e => e.Otro)
                    .HasMaxLength(50)
                    .HasColumnName("otro");

                entity.Property(e => e.Radio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("radio");

                entity.Property(e => e.Television)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("television");
            });

            modelBuilder.Entity<EncuestaEmpleador>(entity =>
            {
                entity.HasKey(e => e.CencuestaEmp)
                    .HasName("PK_ENCUESTA_EMPLEADORES");

                entity.ToTable("ENCUESTA_EMPLEADOR");

                entity.Property(e => e.CencuestaEmp)
                    .ValueGeneratedNever()
                    .HasColumnName("cencuesta_emp");

                entity.Property(e => e.ActitudDes).HasColumnName("actitud_des");

                entity.Property(e => e.ApoyoCapac).HasColumnName("apoyo_capac");

                entity.Property(e => e.AspectosFormacion).HasColumnName("aspectos_formacion");

                entity.Property(e => e.CantEgresados).HasColumnName("cant_egresados");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ciudad");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DapoyoCapac)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dapoyo_capac");

                entity.Property(e => e.Degresado)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("degresado");

                entity.Property(e => e.Dempleador)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dempleador");

                entity.Property(e => e.DepNacimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dep_nacimiento");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("departamento");

                entity.Property(e => e.Desempenio).HasColumnName("desempenio");

                entity.Property(e => e.Dnacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dnacionalidad");

                entity.Property(e => e.DproporcionaCapac)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dproporciona_capac");

                entity.Property(e => e.DsectorEcon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dsector_econ");

                entity.Property(e => e.DtamanhoEmp)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtamanho_emp");

                entity.Property(e => e.DtipoEmp).HasColumnName("dtipo_emp");

                entity.Property(e => e.EgresadosEmp).HasColumnName("egresados_emp");

                entity.Property(e => e.EntrenamientoPractico).HasColumnName("entrenamiento_practico");

                entity.Property(e => e.Etica).HasColumnName("etica");

                entity.Property(e => e.Fencuesta)
                    .HasColumnType("datetime")
                    .HasColumnName("fencuesta");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.FormacionTeorica).HasColumnName("formacion_teorica");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GestadoCivil).HasColumnName("gestado_civil");

                entity.Property(e => e.GradoPertinencia).HasColumnName("grado_pertinencia");

                entity.Property(e => e.HabilidadesRequeridas)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("habilidades_requeridas");

                entity.Property(e => e.MotivoSalida)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("motivo_salida");

                entity.Property(e => e.Ndireccion).HasColumnName("ndireccion");

                entity.Property(e => e.NdocIdentidad)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NecesidadesConocimientos)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("necesidades_conocimientos");

                entity.Property(e => e.Ntelefono)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono");

                entity.Property(e => e.Predisposicion).HasColumnName("predisposicion");

                entity.Property(e => e.ProporcionaCapac).HasColumnName("proporciona_capac");

                entity.Property(e => e.Responsabilidad).HasColumnName("responsabilidad");

                entity.Property(e => e.Satisfaccion).HasColumnName("satisfaccion");

                entity.Property(e => e.Sexo).HasColumnName("sexo");

                entity.Property(e => e.Tcapacitacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tcapacitacion");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Valores).HasColumnName("valores");
            });

            modelBuilder.Entity<EncuestaFuncionarioAAutoevaluacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Anio, e.CusuarioFuncionario, e.Preguntanumero });

                entity.ToTable("encuesta_funcionario_a_autoevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CusuarioFuncionario).HasColumnName("cusuario_funcionario");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Antiguedad)
                    .HasMaxLength(250)
                    .HasColumnName("antiguedad");

                entity.Property(e => e.Cargo)
                    .HasMaxLength(250)
                    .HasColumnName("cargo");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(250)
                    .HasColumnName("departamento");

                entity.Property(e => e.Estudiante)
                    .HasMaxLength(250)
                    .HasColumnName("estudiante");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ingreso");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Posgrado)
                    .HasMaxLength(250)
                    .HasColumnName("posgrado");

                entity.Property(e => e.Profesion)
                    .HasMaxLength(250)
                    .HasColumnName("profesion");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Semestre)
                    .HasMaxLength(250)
                    .HasColumnName("semestre");
            });

            modelBuilder.Entity<EncuestaLogo>(entity =>
            {
                entity.HasKey(e => e.IdEncuesta)
                    .HasName("PK__encuesta__013535C36F206A0D");

                entity.ToTable("encuesta_logo");

                entity.Property(e => e.IdEncuesta).HasColumnName("id_encuesta");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ciclo).HasColumnName("ciclo");

                entity.Property(e => e.Cingreso).HasColumnName("cingreso");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(250)
                    .HasColumnName("comentario");

                entity.Property(e => e.Corte)
                    .HasMaxLength(100)
                    .HasColumnName("corte");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Logo1).HasColumnName("logo_1");

                entity.Property(e => e.Logo2).HasColumnName("logo_2");

                entity.Property(e => e.Logo3).HasColumnName("logo_3");

                entity.Property(e => e.Logo4).HasColumnName("logo_4");

                entity.Property(e => e.Logo5).HasColumnName("logo_5");

                entity.Property(e => e.Logo6).HasColumnName("logo_6");

                entity.Property(e => e.Logo7).HasColumnName("logo_7");

                entity.Property(e => e.Logo8).HasColumnName("logo_8");

                entity.Property(e => e.Talla)
                    .HasMaxLength(10)
                    .HasColumnName("talla");
            });

            modelBuilder.Entity<EncuestaMotivosInsatisfaccion>(entity =>
            {
                entity.HasKey(e => e.Cmotinsatis);

                entity.ToTable("ENCUESTA_MOTIVOS_INSATISFACCION");

                entity.Property(e => e.Cmotinsatis)
                    .ValueGeneratedNever()
                    .HasColumnName("cmotinsatis");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Cmotivo).HasColumnName("cmotivo");

                entity.Property(e => e.Respuesta).HasColumnName("respuesta");

                entity.HasOne(d => d.CencuestaNavigation)
                    .WithMany(p => p.EncuestaMotivosInsatisfaccions)
                    .HasForeignKey(d => d.Cencuesta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_encuesta_insatisfaccion_encuesta");

                entity.HasOne(d => d.CmotivoNavigation)
                    .WithMany(p => p.EncuestaMotivosInsatisfaccions)
                    .HasForeignKey(d => d.Cmotivo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_encuesta_insatisfaccion_motivo");
            });

            modelBuilder.Entity<EncuestaPreguntaEgresado>(entity =>
            {
                entity.HasKey(e => new { e.Preguntanumero, e.Cuestionario });

                entity.ToTable("encuesta_pregunta_egresado");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Preguntadescripcion)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("preguntadescripcion");
            });

            modelBuilder.Entity<EncuestaSatisfaccion>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Codigo, e.Preguntanumero, e.Tipopersona, e.Cuestionario, e.NumeroEncuesta });

                entity.ToTable("encuesta_satisfaccion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Preguntanumero)
                    .HasMaxLength(50)
                    .HasColumnName("preguntanumero");

                entity.Property(e => e.Tipopersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipopersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.NumeroEncuesta).HasColumnName("numero_encuesta");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");

                entity.Property(e => e.Resp6).HasColumnName("resp6");

                entity.Property(e => e.Texto1)
                    .HasMaxLength(250)
                    .HasColumnName("texto1");

                entity.Property(e => e.Texto2)
                    .HasMaxLength(250)
                    .HasColumnName("texto2");
            });

            modelBuilder.Entity<EncuestaSatisfaccionPreguntum>(entity =>
            {
                entity.HasKey(e => new { e.Preguntanumero, e.Cuestionario });

                entity.ToTable("encuesta_satisfaccion_pregunta");

                entity.Property(e => e.Preguntanumero)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("preguntanumero");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Preguntadescripcion)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("preguntadescripcion");

                entity.Property(e => e.Resp1Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp1_desc");

                entity.Property(e => e.Resp2Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp2_desc");

                entity.Property(e => e.Resp3Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp3_desc");

                entity.Property(e => e.Resp4Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp4_desc");

                entity.Property(e => e.Resp5Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp5_desc");

                entity.Property(e => e.Resp6Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("resp6_desc");

                entity.Property(e => e.Texto1Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("texto1_desc");

                entity.Property(e => e.Texto2Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("texto2_desc");
            });

            modelBuilder.Entity<EncuestaSiTrabajan>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Modulo, e.Codigo, e.Preguntanumero });

                entity.ToTable("encuesta_si_trabajan");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(3)
                    .HasColumnName("modulo")
                    .IsFixedLength(true)
                    .HasComment("(ALU/PRO)");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Preguntanumero)
                    .HasColumnName("preguntanumero")
                    .HasComment("Trabaja SI o NO (Si trabaja SECTOR PUBLICO/SECTOR PRIVADO)");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Sector)
                    .HasMaxLength(10)
                    .HasColumnName("sector");

                entity.Property(e => e.Trabaja)
                    .HasMaxLength(2)
                    .HasColumnName("trabaja")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EncuestaTitulosPostgrado>(entity =>
            {
                entity.HasKey(e => e.Ctitulo)
                    .HasName("PK_ENCUESTA_TITULOS_POSTGRADO");

                entity.ToTable("ENCUESTA_TITULOS_POSTGRADOS");

                entity.Property(e => e.Ctitulo)
                    .ValueGeneratedNever()
                    .HasColumnName("ctitulo");

                entity.Property(e => e.Cencuesta).HasColumnName("cencuesta");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Ffin)
                    .HasColumnType("datetime")
                    .HasColumnName("ffin");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Narea).HasColumnName("narea");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.HasOne(d => d.CencuestaNavigation)
                    .WithMany(p => p.EncuestaTitulosPostgrados)
                    .HasForeignKey(d => d.Cencuesta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_titulos_postgrados_encuesta");
            });

            modelBuilder.Entity<Encuestacomentario>(entity =>
            {
                entity.HasKey(e => new { e.Cencuestacomentario, e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso, e.Calumno, e.Cuestionario })
                    .HasName("PK_encuestacomentario_1");

                entity.ToTable("encuestacomentario");

                entity.Property(e => e.Cencuestacomentario)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuestacomentario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(600)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<Encuestapreguntum>(entity =>
            {
                entity.HasKey(e => new { e.Preguntanumero, e.Cuestionario });

                entity.ToTable("encuestapregunta");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Preguntadescripcion)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("preguntadescripcion");
            });

            modelBuilder.Entity<Encuestasatisfaccion1>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Codigo, e.Preguntanumero, e.Tipopersona });

                entity.ToTable("encuestasatisfaccion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Tipopersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipopersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");
            });

            modelBuilder.Entity<Encuestasatisfaccioncomentario>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Codigo, e.Cuestionario, e.Ccarrera });

                entity.ToTable("encuestasatisfaccioncomentario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuestacomentario)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuestacomentario");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(600)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Tipopersona)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipopersona")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Encuestum>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cbloque, e.Ccurso, e.Calumno, e.Cprofesor, e.Preguntanumero })
                    .HasName("PK_encuesta_1");

                entity.ToTable("encuesta");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cencuesta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cencuesta");

                entity.Property(e => e.Cuestionario)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.Fecharegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecharegistro");

                entity.Property(e => e.Profesor)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profesor");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");

                entity.Property(e => e.Resp6).HasColumnName("resp6");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<EnteEducativo>(entity =>
            {
                entity.HasKey(e => e.Ceducativo)
                    .HasName("PK_ENTE_EDUCATIVO");

                entity.ToTable("ente_educativo");

                entity.HasIndex(e => new { e.GtipoEnte, e.Gtipo1, e.Deducativo, e.Cpais, e.Cdepartamento, e.Cprovincia, e.Cdistrito }, "iu_deducativo")
                    .IsUnique();

                entity.Property(e => e.Ceducativo)
                    .ValueGeneratedNever()
                    .HasColumnName("ceducativo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Contacto1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("contacto1")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacto2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("contacto2")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacto3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("contacto3")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcontacto1X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto1_x");

                entity.Property(e => e.Dcontacto2X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto2_x");

                entity.Property(e => e.Dcontacto3X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto3_x");

                entity.Property(e => e.Deducativo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Faniversario)
                    .HasColumnType("datetime")
                    .HasColumnName("faniversario");

                entity.Property(e => e.FconvenioPrimero)
                    .HasColumnType("datetime")
                    .HasColumnName("fconvenio_primero");

                entity.Property(e => e.FconvenioUltimo)
                    .HasColumnType("datetime")
                    .HasColumnName("fconvenio_ultimo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo1X).HasColumnName("gcargo1_x");

                entity.Property(e => e.Gcargo2X).HasColumnName("gcargo2_x");

                entity.Property(e => e.Gcargo3X).HasColumnName("gcargo3_x");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcategoria2).HasColumnName("gcategoria2");

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gidioma1).HasColumnName("gidioma1");

                entity.Property(e => e.Gidioma2).HasColumnName("gidioma2");

                entity.Property(e => e.Gmoneda).HasColumnName("gmoneda");

                entity.Property(e => e.Grree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grree")
                    .IsFixedLength(true);

                entity.Property(e => e.GsectorEnte).HasColumnName("gsector_ente");

                entity.Property(e => e.Gtipo1).HasColumnName("gtipo1");

                entity.Property(e => e.Gtipo2).HasColumnName("gtipo2");

                entity.Property(e => e.Gtipo3).HasColumnName("gtipo3");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.Ncantidad1).HasColumnName("ncantidad1");

                entity.Property(e => e.Ncantidad2).HasColumnName("ncantidad2");

                entity.Property(e => e.Ncantidad3).HasColumnName("ncantidad3");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.NimpApafa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_apafa");

                entity.Property(e => e.NimpMatricula)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_matricula");

                entity.Property(e => e.NimpOtro)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_otro");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Npension).HasColumnName("npension");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtipoCambio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ntipo_cambio");

                entity.Property(e => e.Seducativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("seducativo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<EnteEducativoGestado0>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ente_educativo_gestado_0");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcontacto1X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto1_x");

                entity.Property(e => e.Dcontacto2X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto2_x");

                entity.Property(e => e.Dcontacto3X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto3_x");

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Faniversario)
                    .HasColumnType("datetime")
                    .HasColumnName("faniversario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo1X).HasColumnName("gcargo1_x");

                entity.Property(e => e.Gcargo2X).HasColumnName("gcargo2_x");

                entity.Property(e => e.Gcargo3X).HasColumnName("gcargo3_x");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcategoria2).HasColumnName("gcategoria2");

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gidioma1).HasColumnName("gidioma1");

                entity.Property(e => e.Gidioma2).HasColumnName("gidioma2");

                entity.Property(e => e.Gmoneda).HasColumnName("gmoneda");

                entity.Property(e => e.Grree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grree")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo1).HasColumnName("gtipo1");

                entity.Property(e => e.Gtipo2).HasColumnName("gtipo2");

                entity.Property(e => e.Gtipo3).HasColumnName("gtipo3");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.Ncantidad1).HasColumnName("ncantidad1");

                entity.Property(e => e.Ncantidad2).HasColumnName("ncantidad2");

                entity.Property(e => e.Ncantidad3).HasColumnName("ncantidad3");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.NimpApafa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_apafa");

                entity.Property(e => e.NimpMatricula)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_matricula");

                entity.Property(e => e.NimpOtro)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_otro");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Npension).HasColumnName("npension");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtipoCambio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ntipo_cambio");

                entity.Property(e => e.Seducativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("seducativo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<EnteEducativoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ente_educativo_h");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcontacto1X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto1_x");

                entity.Property(e => e.Dcontacto2X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto2_x");

                entity.Property(e => e.Dcontacto3X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto3_x");

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Faniversario)
                    .HasColumnType("datetime")
                    .HasColumnName("faniversario");

                entity.Property(e => e.FconvenioPrimero)
                    .HasColumnType("datetime")
                    .HasColumnName("fconvenio_primero");

                entity.Property(e => e.FconvenioUltimo)
                    .HasColumnType("datetime")
                    .HasColumnName("fconvenio_ultimo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo1X).HasColumnName("gcargo1_x");

                entity.Property(e => e.Gcargo2X).HasColumnName("gcargo2_x");

                entity.Property(e => e.Gcargo3X).HasColumnName("gcargo3_x");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcategoria2).HasColumnName("gcategoria2");

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gidioma1).HasColumnName("gidioma1");

                entity.Property(e => e.Gidioma2).HasColumnName("gidioma2");

                entity.Property(e => e.Gmoneda).HasColumnName("gmoneda");

                entity.Property(e => e.Grree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grree")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo1).HasColumnName("gtipo1");

                entity.Property(e => e.Gtipo2).HasColumnName("gtipo2");

                entity.Property(e => e.Gtipo3).HasColumnName("gtipo3");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Ncantidad1).HasColumnName("ncantidad1");

                entity.Property(e => e.Ncantidad2).HasColumnName("ncantidad2");

                entity.Property(e => e.Ncantidad3).HasColumnName("ncantidad3");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.NimpApafa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_apafa");

                entity.Property(e => e.NimpMatricula)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_matricula");

                entity.Property(e => e.NimpOtro)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_otro");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Npension).HasColumnName("npension");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtipoCambio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ntipo_cambio");

                entity.Property(e => e.Seducativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("seducativo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<Equiparacione>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Ccurso, e.GtipoAprobacion, e.Id, e.Nvez })
                    .HasName("PK__equiparaciones__24910D24");

                entity.ToTable("equiparaciones");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.InDel)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("in_del")
                    .HasDefaultValueSql("('insertado')");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("observacion");

                entity.Property(e => e.Procesado).HasColumnName("procesado");

                entity.Property(e => e.Secuencial)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("secuencial");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");
            });

            modelBuilder.Entity<EquiparacionesC>(entity =>
            {
                entity.ToTable("Equiparaciones_c");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CredAprobar).HasColumnName("cred_aprobar");

                entity.Property(e => e.CredDesaprobar).HasColumnName("cred_desaprobar");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Funcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("funcion");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Nveces)
                    .HasColumnName("nveces")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ProcEquiv)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("proc_equiv")
                    .HasDefaultValueSql("('con_equivalencias')");

                entity.Property(e => e.Procesado).HasColumnName("procesado");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");
            });

            modelBuilder.Entity<EquiparacionesD>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Ccurso })
                    .HasName("PK_EQUIPARACIONES_D");

                entity.ToTable("Equiparaciones_d");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Od)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("od");

                entity.HasOne(d => d.IdNavigation)
                    .WithMany(p => p.EquiparacionesDs)
                    .HasForeignKey(d => d.Id)
                    .HasConstraintName("FK_EQUIPARA_REFERENCE_EQUIPARA");
            });

            modelBuilder.Entity<Equipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equipos");

                entity.Property(e => e.Cequipo).HasColumnName("cequipo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dequipo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dequipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ndisponible).HasColumnName("ndisponible");

                entity.Property(e => e.Nequipos).HasColumnName("nequipos");

                entity.Property(e => e.Sequipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("sequipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EquivPasantia1Enf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equiv_pasantia1_enf");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Cequivalencia)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cequivalencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<EquivPasantia2Enf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equiv_pasantia2_enf");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Cequivalencia)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cequivalencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<EquivalenciaConvalidacionInterna>(entity =>
            {
                entity.HasKey(e => new { e.Calumno, e.Ccurso, e.CcursoEquiv });

                entity.ToTable("equivalencia_convalidacion_interna");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.CalumnoEquiv).HasColumnName("calumno_equiv");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cequivalencia)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cequivalencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoEquiv).HasColumnName("cperiodo_equiv");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");
            });

            modelBuilder.Entity<EquivalenciaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equivalencia_h");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Cequivalencia).HasColumnName("cequivalencia");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");
            });

            modelBuilder.Entity<EquivalenciaOld>(entity =>
            {
                entity.HasKey(e => new { e.Ccurso, e.CcursoEquiv })
                    .HasName("PK__equivalencia_old__5751971B");

                entity.ToTable("equivalencia_old");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cequivalencia).HasColumnName("cequivalencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<EquivalenciasMallasTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equivalencias_mallas_temp");

                entity.Property(e => e.MallaNueva).HasColumnName("malla_nueva");

                entity.Property(e => e.MallaVieja).HasColumnName("malla_vieja");
            });

            modelBuilder.Entity<EquivalenciasTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("equivalencias_temp");

                entity.Property(e => e.SiglaAntigua)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("sigla_antigua");

                entity.Property(e => e.SiglaNueva)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("sigla_nueva");
            });

            modelBuilder.Entity<Equivalencium>(entity =>
            {
                entity.HasKey(e => new { e.Ccurso, e.CcursoEquiv })
                    .HasName("PK__equivalencia__5BD88551");

                entity.ToTable("equivalencia");

                entity.HasIndex(e => e.CcursoEquiv, "ii_equiv02");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cequivalencia)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cequivalencia");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.HasOne(d => d.CcursoNavigation)
                    .WithMany(p => p.EquivalenciumCcursoNavigations)
                    .HasForeignKey(d => d.Ccurso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_equivalencia_a_curso");

                entity.HasOne(d => d.CcursoEquivNavigation)
                    .WithMany(p => p.EquivalenciumCcursoEquivNavigations)
                    .HasForeignKey(d => d.CcursoEquiv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_equivalencia_a_curso_ccurso_equiv");
            });

            modelBuilder.Entity<Especialidad>(entity =>
            {
                entity.HasKey(e => e.Cespecialidad)
                    .HasName("PK__especialidad__1392CE8F");

                entity.ToTable("especialidad");

                entity.Property(e => e.Cespecialidad)
                    .ValueGeneratedNever()
                    .HasColumnName("cespecialidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsabilidad)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cresponsabilidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Despecialidad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("despecialidad");

                entity.Property(e => e.Sespecialidad)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sespecialidad");

                entity.HasOne(d => d.CcarreraNavigation)
                    .WithMany(p => p.Especialidads)
                    .HasForeignKey(d => d.Ccarrera)
                    .HasConstraintName("fk_especialidad_a_carrera");
            });

            modelBuilder.Entity<Especialistum>(entity =>
            {
                entity.HasKey(e => e.Cespecialista)
                    .HasName("PK__especial__6684BFC52C1D2053");

                entity.ToTable("especialista");

                entity.Property(e => e.Cespecialista)
                    .ValueGeneratedNever()
                    .HasColumnName("cespecialista");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.Especialista)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_especialista_a_persona");
            });

            modelBuilder.Entity<EsquemaNotaC>(entity =>
            {
                entity.HasKey(e => e.Cesquema)
                    .HasName("PK__esquema_nota_c__26C59E94");

                entity.ToTable("esquema_nota_c");

                entity.Property(e => e.Cesquema)
                    .ValueGeneratedNever()
                    .HasColumnName("cesquema");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Desquema)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("desquema")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.Sesquema)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("sesquema")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EsquemaNotaCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("esquema_nota_c_h");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Desquema)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("desquema")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.Sesquema)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("sesquema")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EsquemaNotaD>(entity =>
            {
                entity.HasKey(e => new { e.Cesquema, e.GtipoNota })
                    .HasName("PK__esquema_nota_d__25D17A5B");

                entity.ToTable("esquema_nota_d");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.CinstitucionX).HasColumnName("cinstitucion_x");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.CprogramaX).HasColumnName("cprograma_x");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GcomplementaX).HasColumnName("gcomplementa_x");

                entity.Property(e => e.GeliminaFijaX).HasColumnName("gelimina_fija_x");

                entity.Property(e => e.GsumaNota).HasColumnName("gsuma_nota");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.GtipoCalculo).HasColumnName("gtipo_calculo");

                entity.Property(e => e.GtipoOrdenX).HasColumnName("gtipo_orden_x");

                entity.Property(e => e.NeliminaMenorX).HasColumnName("nelimina_menor_x");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nponderacion)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("nponderacion");

                entity.HasOne(d => d.CesquemaNavigation)
                    .WithMany(p => p.EsquemaNotaDs)
                    .HasForeignKey(d => d.Cesquema)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_esquema_nota_d_a_esquema_nota_c");
            });

            modelBuilder.Entity<EsquemaNotaDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("esquema_nota_d_h");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcomplementa).HasColumnName("gcomplementa");

                entity.Property(e => e.GsumaNota).HasColumnName("gsuma_nota");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.GtipoCalculo).HasColumnName("gtipo_calculo");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.GtipoOrden).HasColumnName("gtipo_orden");

                entity.Property(e => e.NeliminaMenor).HasColumnName("nelimina_menor");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nponderacion)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderacion");
            });

            modelBuilder.Entity<Estadistica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("estadistica");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gmatricula).HasColumnName("gmatricula");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");
            });

            modelBuilder.Entity<EstadisticaNotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("estadistica_nota");

                entity.Property(e => e.ApEstado).HasColumnName("ap_estado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Ditem)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.FEstado).HasColumnName("f_estado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<Estructura>(entity =>
            {
                entity.HasKey(e => e.Cestructura);

                entity.ToTable("estructura");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Destructura)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("destructura");
            });

            modelBuilder.Entity<EvalPotencialIhea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("eval_potencial_ihea");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dactitud)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dactitud");

                entity.Property(e => e.Dansiedad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dansiedad");

                entity.Property(e => e.Dautoevaluacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dautoevaluacion");

                entity.Property(e => e.Dayudas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dayudas");

                entity.Property(e => e.Dconcentracion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dconcentracion");

                entity.Property(e => e.Devaluacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("devaluacion");

                entity.Property(e => e.Dideas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dideas");

                entity.Property(e => e.Dmotivacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dmotivacion");

                entity.Property(e => e.Dprocesamiento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dprocesamiento");

                entity.Property(e => e.Dtiempo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dtiempo");

                entity.Property(e => e.Nactitud).HasColumnName("nactitud");

                entity.Property(e => e.Nansiedad).HasColumnName("nansiedad");

                entity.Property(e => e.Nautoevaluacion).HasColumnName("nautoevaluacion");

                entity.Property(e => e.Nayudas).HasColumnName("nayudas");

                entity.Property(e => e.Nconcentracion).HasColumnName("nconcentracion");

                entity.Property(e => e.Nevaluacion).HasColumnName("nevaluacion");

                entity.Property(e => e.Nideas).HasColumnName("nideas");

                entity.Property(e => e.Nmotivacion).HasColumnName("nmotivacion");

                entity.Property(e => e.Nprocesamiento).HasColumnName("nprocesamiento");

                entity.Property(e => e.Ntiempo).HasColumnName("ntiempo");
            });

            modelBuilder.Entity<EvalPotencialRsptum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("eval_potencial_rspta");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.DaT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("da_t");

                entity.Property(e => e.DacT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dac_t");

                entity.Property(e => e.DaeT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dae_t");

                entity.Property(e => e.DamT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dam_t");

                entity.Property(e => e.DceT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dce_t");

                entity.Property(e => e.DciT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dci_t");

                entity.Property(e => e.DcoT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dco_t");

                entity.Property(e => e.DcpT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcp_t");

                entity.Property(e => e.DdT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dd_t");

                entity.Property(e => e.DdiT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddi_t");

                entity.Property(e => e.DdoT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddo_t");

                entity.Property(e => e.DeT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("de_t");

                entity.Property(e => e.DeeT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dee_t");

                entity.Property(e => e.DesT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("des_t");

                entity.Property(e => e.DpeT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dpe_t");

                entity.Property(e => e.DtT)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dt_t");

                entity.Property(e => e.NaT).HasColumnName("na_t");

                entity.Property(e => e.NacT).HasColumnName("nac_t");

                entity.Property(e => e.NaeT).HasColumnName("nae_t");

                entity.Property(e => e.NamT).HasColumnName("nam_t");

                entity.Property(e => e.NceT).HasColumnName("nce_t");

                entity.Property(e => e.NciT).HasColumnName("nci_t");

                entity.Property(e => e.NcoT).HasColumnName("nco_t");

                entity.Property(e => e.NcpT).HasColumnName("ncp_t");

                entity.Property(e => e.NdT).HasColumnName("nd_t");

                entity.Property(e => e.NdiT).HasColumnName("ndi_t");

                entity.Property(e => e.NdoT).HasColumnName("ndo_t");

                entity.Property(e => e.NeT).HasColumnName("ne_t");

                entity.Property(e => e.NeeT).HasColumnName("nee_t");

                entity.Property(e => e.NesT).HasColumnName("nes_t");

                entity.Property(e => e.NpeT).HasColumnName("npe_t");

                entity.Property(e => e.NtT).HasColumnName("nt_t");
            });

            modelBuilder.Entity<EvalPotencialValor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("eval_potencial_valor");

                entity.Property(e => e.Cgrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cgrupo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gsexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gsexo")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoExamen).HasColumnName("gtipo_examen");

                entity.Property(e => e.Nfinal).HasColumnName("nfinal");

                entity.Property(e => e.Ninicio).HasColumnName("ninicio");

                entity.Property(e => e.Nvalor).HasColumnName("nvalor");
            });

            modelBuilder.Entity<Evalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evalle");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CenteConvenio).HasColumnName("cente_convenio");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<Evaluacion>(entity =>
            {
                entity.HasKey(e => e.Cevaluacion)
                    .HasName("PK__evaluacion__3434A84B");

                entity.ToTable("evaluacion");

                entity.Property(e => e.Cevaluacion)
                    .ValueGeneratedNever()
                    .HasColumnName("cevaluacion");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.CcampaniaAsoc).HasColumnName("ccampania_asoc");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Devaluacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("devaluacion");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.GcarreXDefinir)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarre_x_definir")
                    .IsFixedLength(true);

                entity.Property(e => e.Gentrevista).HasColumnName("gentrevista");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GformatoFecha).HasColumnName("gformato_fecha");

                entity.Property(e => e.IaprobacionAuto).HasColumnName("iaprobacion_auto");

                entity.Property(e => e.IdistribucionAuto).HasColumnName("idistribucion_auto");

                entity.Property(e => e.IpasaJunior).HasColumnName("ipasa_junior");

                entity.Property(e => e.IverFecha).HasColumnName("iver_fecha");

                entity.Property(e => e.IverHora).HasColumnName("iver_hora");

                entity.Property(e => e.IverInstitucion).HasColumnName("iver_institucion");

                entity.Property(e => e.Ivisible).HasColumnName("ivisible");

                entity.Property(e => e.Nescala).HasColumnName("nescala");

                entity.Property(e => e.Ngrado).HasColumnName("ngrado");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.Sevaluacion)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sevaluacion");

                entity.HasOne(d => d.CadmisionNavigation)
                    .WithMany(p => p.Evaluacions)
                    .HasForeignKey(d => d.Cadmision)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_evaluacion_a_admision");

                entity.HasOne(d => d.CcampaniaNavigation)
                    .WithMany(p => p.Evaluacions)
                    .HasForeignKey(d => d.Ccampania)
                    .HasConstraintName("fk_evaluacion_a_campania");
            });

            modelBuilder.Entity<EvaluacionAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_aula");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Daula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("daula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Ncapacidad).HasColumnName("ncapacidad");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npiso).HasColumnName("npiso");

                entity.Property(e => e.Nusado).HasColumnName("nusado");

                entity.Property(e => e.Saula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saula");

                entity.Property(e => e.Spabellon)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spabellon");

                entity.Property(e => e.Spuerta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta");

                entity.Property(e => e.Spuerta2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta2");
            });

            modelBuilder.Entity<EvaluacionAulaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_aula_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Daula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("daula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Ncapacidad).HasColumnName("ncapacidad");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npiso).HasColumnName("npiso");

                entity.Property(e => e.Nusado).HasColumnName("nusado");

                entity.Property(e => e.Saula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saula");

                entity.Property(e => e.Spabellon)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spabellon");

                entity.Property(e => e.Spuerta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta");

                entity.Property(e => e.Spuerta2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta2");
            });

            modelBuilder.Entity<EvaluacionEntradum>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Preguntanumero });

                entity.ToTable("evaluacion_entrada");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Preguntanumero)
                    .HasMaxLength(100)
                    .HasColumnName("preguntanumero");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Cevaluacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cevaluacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.NumeroIntentos).HasColumnName("numero_intentos");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");

                entity.Property(e => e.Resp5).HasColumnName("resp5");

                entity.Property(e => e.ResultadoPorciento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("resultado_porciento");
            });

            modelBuilder.Entity<EvaluacionExonera>(entity =>
            {
                entity.HasKey(e => new { e.Cevaluacion, e.GtipoExonerado })
                    .HasName("PK__evaluacion_exone__3BD5CA13");

                entity.ToTable("evaluacion_exonera");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");

                entity.HasOne(d => d.CevaluacionNavigation)
                    .WithMany(p => p.EvaluacionExoneras)
                    .HasForeignKey(d => d.Cevaluacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_evaluacion_exonera");
            });

            modelBuilder.Entity<EvaluacionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_h");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Devaluacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("devaluacion");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.GcarreXDefinir)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarre_x_definir")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.IaprobacionAuto).HasColumnName("iaprobacion_auto");

                entity.Property(e => e.IdistribucionAuto).HasColumnName("idistribucion_auto");

                entity.Property(e => e.IfichadoAuto)
                    .HasColumnName("ifichado_auto")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IverFecha).HasColumnName("iver_fecha");

                entity.Property(e => e.IverHora).HasColumnName("iver_hora");

                entity.Property(e => e.IverInstitucion).HasColumnName("iver_institucion");

                entity.Property(e => e.Ivisible).HasColumnName("ivisible");

                entity.Property(e => e.Nescala).HasColumnName("nescala");

                entity.Property(e => e.Ngrado).HasColumnName("ngrado");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.Sevaluacion)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sevaluacion");
            });

            modelBuilder.Entity<EvaluacionPostul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_postul");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.CevaluacionClave).HasColumnName("cevaluacion_clave");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cregistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cregistro");

                entity.Property(e => e.Fentrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrevista");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GturnoCol).HasColumnName("gturno_col");

                entity.Property(e => e.IbachillerComercial).HasColumnName("ibachiller_comercial");

                entity.Property(e => e.IbachillerHumanistico).HasColumnName("ibachiller_humanistico");

                entity.Property(e => e.Iconfirma).HasColumnName("iconfirma");

                entity.Property(e => e.Imanual).HasColumnName("imanual");

                entity.Property(e => e.NemisionCarnet).HasColumnName("nemision_carnet");

                entity.Property(e => e.Nexamen).HasColumnName("nexamen");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.Scolegio).HasColumnName("scolegio");

                entity.Property(e => e.Spuerta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta");

                entity.Property(e => e.TbachillerEnOtro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbachiller_en_otro");

                entity.Property(e => e.Trespuesta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("trespuesta")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EvaluacionPostulDet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_postul_det");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Nblanco).HasColumnName("nblanco");

                entity.Property(e => e.Nbuenas).HasColumnName("nbuenas");

                entity.Property(e => e.Nmalas).HasColumnName("nmalas");

                entity.Property(e => e.Nmarcadas).HasColumnName("nmarcadas");

                entity.Property(e => e.Npuntaje).HasColumnName("npuntaje");
            });

            modelBuilder.Entity<EvaluacionPostulH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_postul_h");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.CevaluacionClave).HasColumnName("cevaluacion_clave");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cregistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cregistro");

                entity.Property(e => e.Fentrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrevista");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GturnoCol).HasColumnName("gturno_col");

                entity.Property(e => e.IbachillerComercial).HasColumnName("ibachiller_comercial");

                entity.Property(e => e.IbachillerHumanistico).HasColumnName("ibachiller_humanistico");

                entity.Property(e => e.Iconfirma).HasColumnName("iconfirma");

                entity.Property(e => e.Imanual).HasColumnName("imanual");

                entity.Property(e => e.NemisionCarnet).HasColumnName("nemision_carnet");

                entity.Property(e => e.Nexamen).HasColumnName("nexamen");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.Scolegio).HasColumnName("scolegio");

                entity.Property(e => e.Spuerta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta");

                entity.Property(e => e.TbachillerEnOtro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbachiller_en_otro");

                entity.Property(e => e.Trespuesta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("trespuesta")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EvaluacionPotencial>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_potencial");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Preg001).HasColumnName("preg001");

                entity.Property(e => e.Preg002).HasColumnName("preg002");

                entity.Property(e => e.Preg003).HasColumnName("preg003");

                entity.Property(e => e.Preg004).HasColumnName("preg004");

                entity.Property(e => e.Preg005).HasColumnName("preg005");

                entity.Property(e => e.Preg006).HasColumnName("preg006");

                entity.Property(e => e.Preg007).HasColumnName("preg007");

                entity.Property(e => e.Preg008).HasColumnName("preg008");

                entity.Property(e => e.Preg009).HasColumnName("preg009");

                entity.Property(e => e.Preg010).HasColumnName("preg010");

                entity.Property(e => e.Preg011).HasColumnName("preg011");

                entity.Property(e => e.Preg012).HasColumnName("preg012");

                entity.Property(e => e.Preg013).HasColumnName("preg013");

                entity.Property(e => e.Preg014).HasColumnName("preg014");

                entity.Property(e => e.Preg015).HasColumnName("preg015");

                entity.Property(e => e.Preg016).HasColumnName("preg016");

                entity.Property(e => e.Preg017).HasColumnName("preg017");

                entity.Property(e => e.Preg018).HasColumnName("preg018");

                entity.Property(e => e.Preg019).HasColumnName("preg019");

                entity.Property(e => e.Preg020).HasColumnName("preg020");

                entity.Property(e => e.Preg021).HasColumnName("preg021");

                entity.Property(e => e.Preg022).HasColumnName("preg022");

                entity.Property(e => e.Preg023).HasColumnName("preg023");

                entity.Property(e => e.Preg024).HasColumnName("preg024");

                entity.Property(e => e.Preg025).HasColumnName("preg025");

                entity.Property(e => e.Preg026).HasColumnName("preg026");

                entity.Property(e => e.Preg027).HasColumnName("preg027");

                entity.Property(e => e.Preg028).HasColumnName("preg028");

                entity.Property(e => e.Preg029).HasColumnName("preg029");

                entity.Property(e => e.Preg030).HasColumnName("preg030");

                entity.Property(e => e.Preg031).HasColumnName("preg031");

                entity.Property(e => e.Preg032).HasColumnName("preg032");

                entity.Property(e => e.Preg033).HasColumnName("preg033");

                entity.Property(e => e.Preg034).HasColumnName("preg034");

                entity.Property(e => e.Preg035).HasColumnName("preg035");

                entity.Property(e => e.Preg036).HasColumnName("preg036");

                entity.Property(e => e.Preg037).HasColumnName("preg037");

                entity.Property(e => e.Preg038).HasColumnName("preg038");

                entity.Property(e => e.Preg039).HasColumnName("preg039");

                entity.Property(e => e.Preg040).HasColumnName("preg040");

                entity.Property(e => e.Preg041).HasColumnName("preg041");

                entity.Property(e => e.Preg042).HasColumnName("preg042");

                entity.Property(e => e.Preg043).HasColumnName("preg043");

                entity.Property(e => e.Preg044).HasColumnName("preg044");

                entity.Property(e => e.Preg045).HasColumnName("preg045");

                entity.Property(e => e.Preg046).HasColumnName("preg046");

                entity.Property(e => e.Preg047).HasColumnName("preg047");

                entity.Property(e => e.Preg048).HasColumnName("preg048");

                entity.Property(e => e.Preg049).HasColumnName("preg049");

                entity.Property(e => e.Preg050).HasColumnName("preg050");

                entity.Property(e => e.Preg051).HasColumnName("preg051");

                entity.Property(e => e.Preg052).HasColumnName("preg052");

                entity.Property(e => e.Preg053).HasColumnName("preg053");

                entity.Property(e => e.Preg054).HasColumnName("preg054");

                entity.Property(e => e.Preg055).HasColumnName("preg055");

                entity.Property(e => e.Preg056).HasColumnName("preg056");

                entity.Property(e => e.Preg057).HasColumnName("preg057");

                entity.Property(e => e.Preg058).HasColumnName("preg058");

                entity.Property(e => e.Preg059).HasColumnName("preg059");

                entity.Property(e => e.Preg060).HasColumnName("preg060");

                entity.Property(e => e.Preg061).HasColumnName("preg061");

                entity.Property(e => e.Preg062).HasColumnName("preg062");

                entity.Property(e => e.Preg063).HasColumnName("preg063");

                entity.Property(e => e.Preg064).HasColumnName("preg064");

                entity.Property(e => e.Preg065).HasColumnName("preg065");

                entity.Property(e => e.Preg066).HasColumnName("preg066");

                entity.Property(e => e.Preg067).HasColumnName("preg067");

                entity.Property(e => e.Preg068).HasColumnName("preg068");

                entity.Property(e => e.Preg069).HasColumnName("preg069");

                entity.Property(e => e.Preg070).HasColumnName("preg070");

                entity.Property(e => e.Preg071).HasColumnName("preg071");

                entity.Property(e => e.Preg072).HasColumnName("preg072");

                entity.Property(e => e.Preg073).HasColumnName("preg073");

                entity.Property(e => e.Preg074).HasColumnName("preg074");

                entity.Property(e => e.Preg075).HasColumnName("preg075");

                entity.Property(e => e.Preg076).HasColumnName("preg076");

                entity.Property(e => e.Preg077).HasColumnName("preg077");

                entity.Property(e => e.Preg078).HasColumnName("preg078");

                entity.Property(e => e.Preg079).HasColumnName("preg079");

                entity.Property(e => e.Preg080).HasColumnName("preg080");

                entity.Property(e => e.Preg081).HasColumnName("preg081");

                entity.Property(e => e.Preg082).HasColumnName("preg082");

                entity.Property(e => e.Preg083).HasColumnName("preg083");

                entity.Property(e => e.Preg084).HasColumnName("preg084");

                entity.Property(e => e.Preg085).HasColumnName("preg085");

                entity.Property(e => e.Preg086).HasColumnName("preg086");

                entity.Property(e => e.Preg087).HasColumnName("preg087");

                entity.Property(e => e.Preg088).HasColumnName("preg088");

                entity.Property(e => e.Preg089).HasColumnName("preg089");

                entity.Property(e => e.Preg090).HasColumnName("preg090");

                entity.Property(e => e.Preg091).HasColumnName("preg091");

                entity.Property(e => e.Preg092).HasColumnName("preg092");

                entity.Property(e => e.Preg093).HasColumnName("preg093");

                entity.Property(e => e.Preg094).HasColumnName("preg094");

                entity.Property(e => e.Preg095).HasColumnName("preg095");

                entity.Property(e => e.Preg096).HasColumnName("preg096");

                entity.Property(e => e.Preg097).HasColumnName("preg097");

                entity.Property(e => e.Preg098).HasColumnName("preg098");

                entity.Property(e => e.Preg099).HasColumnName("preg099");

                entity.Property(e => e.Preg100).HasColumnName("preg100");

                entity.Property(e => e.Preg101).HasColumnName("preg101");

                entity.Property(e => e.Preg102).HasColumnName("preg102");

                entity.Property(e => e.Preg103).HasColumnName("preg103");

                entity.Property(e => e.Preg104).HasColumnName("preg104");

                entity.Property(e => e.Preg105).HasColumnName("preg105");

                entity.Property(e => e.Preg106).HasColumnName("preg106");

                entity.Property(e => e.Preg107).HasColumnName("preg107");

                entity.Property(e => e.Preg108).HasColumnName("preg108");

                entity.Property(e => e.Preg109).HasColumnName("preg109");

                entity.Property(e => e.Preg110).HasColumnName("preg110");

                entity.Property(e => e.Preg111).HasColumnName("preg111");

                entity.Property(e => e.Preg112).HasColumnName("preg112");

                entity.Property(e => e.Preg113).HasColumnName("preg113");

                entity.Property(e => e.Preg114).HasColumnName("preg114");

                entity.Property(e => e.Preg115).HasColumnName("preg115");

                entity.Property(e => e.Preg116).HasColumnName("preg116");

                entity.Property(e => e.Preg117).HasColumnName("preg117");

                entity.Property(e => e.Preg118).HasColumnName("preg118");

                entity.Property(e => e.Preg119).HasColumnName("preg119");

                entity.Property(e => e.Preg120).HasColumnName("preg120");

                entity.Property(e => e.Preg121).HasColumnName("preg121");

                entity.Property(e => e.Preg122).HasColumnName("preg122");

                entity.Property(e => e.Preg123).HasColumnName("preg123");

                entity.Property(e => e.Preg124).HasColumnName("preg124");

                entity.Property(e => e.Preg125).HasColumnName("preg125");

                entity.Property(e => e.Preg126).HasColumnName("preg126");

                entity.Property(e => e.Preg127).HasColumnName("preg127");

                entity.Property(e => e.Preg128).HasColumnName("preg128");

                entity.Property(e => e.Preg129).HasColumnName("preg129");

                entity.Property(e => e.Preg130).HasColumnName("preg130");

                entity.Property(e => e.Preg131).HasColumnName("preg131");

                entity.Property(e => e.Preg132).HasColumnName("preg132");

                entity.Property(e => e.Preg133).HasColumnName("preg133");

                entity.Property(e => e.Preg134).HasColumnName("preg134");

                entity.Property(e => e.Preg135).HasColumnName("preg135");

                entity.Property(e => e.Preg136).HasColumnName("preg136");

                entity.Property(e => e.Preg137).HasColumnName("preg137");

                entity.Property(e => e.Preg138).HasColumnName("preg138");

                entity.Property(e => e.Preg139).HasColumnName("preg139");

                entity.Property(e => e.Preg140).HasColumnName("preg140");
            });

            modelBuilder.Entity<EvaluacionPreg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_preg");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NpesoBlanco)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_blanco");

                entity.Property(e => e.NpesoBuena)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_buena");

                entity.Property(e => e.NpesoConfuso)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_confuso");

                entity.Property(e => e.NpesoMala)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_mala");

                entity.Property(e => e.Npregunta).HasColumnName("npregunta");

                entity.Property(e => e.Tsolucion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tsolucion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EvaluacionPregH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_preg_h");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NpesoBlanco)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_blanco");

                entity.Property(e => e.NpesoBuena)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_buena");

                entity.Property(e => e.NpesoConfuso)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_confuso");

                entity.Property(e => e.NpesoMala)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npeso_mala");

                entity.Property(e => e.Npregunta).HasColumnName("npregunta");

                entity.Property(e => e.Tsolucion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tsolucion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EvaluacionRepVario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_rep_varios");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creporte).HasColumnName("creporte");

                entity.Property(e => e.Dreporte)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dreporte")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EvaluacionSpu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evaluacion_spu");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Canio).HasColumnName("canio");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.EeDdistrito)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_ddistrito")
                    .IsFixedLength(true);

                entity.Property(e => e.EeDeducativo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ee_deducativo")
                    .IsFixedLength(true);

                entity.Property(e => e.EeTdireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ee_tdireccion")
                    .IsFixedLength(true);

                entity.Property(e => e.MaxRm)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("max_rm");

                entity.Property(e => e.MaxRv)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("max_rv");

                entity.Property(e => e.MinRm)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("min_rm");

                entity.Property(e => e.MinRv)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("min_rv");

                entity.Property(e => e.PerDdistrito)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("per_ddistrito")
                    .IsFixedLength(true);

                entity.Property(e => e.PerTdireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("per_tdireccion")
                    .IsFixedLength(true);

                entity.Property(e => e.PosGcondicion).HasColumnName("pos_gcondicion");

                entity.Property(e => e.PosNpuntajeBase)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pos_npuntaje_base");

                entity.Property(e => e.PuestoLineal)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_lineal");

                entity.Property(e => e.PuestoLinealRm)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_lineal_rm");

                entity.Property(e => e.PuestoLinealRv)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_lineal_rv");

                entity.Property(e => e.PuestoQuiebre)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_quiebre");

                entity.Property(e => e.PuestoQuiebreRm)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_quiebre_rm");

                entity.Property(e => e.PuestoQuiebreRv)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puesto_quiebre_rv");

                entity.Property(e => e.PuntajeBaseMax)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puntaje_base_max");

                entity.Property(e => e.PuntajeBaseMin)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("puntaje_base_min");

                entity.Property(e => e.RgpoA)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_a");

                entity.Property(e => e.RgpoB)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_b");

                entity.Property(e => e.RgpoC)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_c");

                entity.Property(e => e.RgpoD)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_d");

                entity.Property(e => e.RgpoE)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_e");

                entity.Property(e => e.RgpoF)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_f");

                entity.Property(e => e.RgpoG)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_g");

                entity.Property(e => e.RgpoH)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_h");

                entity.Property(e => e.RgpoI)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_i");

                entity.Property(e => e.RgpoJ)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_j");

                entity.Property(e => e.RgpoK)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_k");

                entity.Property(e => e.RgpoL)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_l");

                entity.Property(e => e.RgpoM)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_m");

                entity.Property(e => e.RgpoMaxA)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_a");

                entity.Property(e => e.RgpoMaxB)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_b");

                entity.Property(e => e.RgpoMaxC)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_c");

                entity.Property(e => e.RgpoMaxD)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_d");

                entity.Property(e => e.RgpoMaxE)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_e");

                entity.Property(e => e.RgpoMaxF)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_f");

                entity.Property(e => e.RgpoMaxG)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_g");

                entity.Property(e => e.RgpoMaxH)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_h");

                entity.Property(e => e.RgpoMaxI)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_i");

                entity.Property(e => e.RgpoMaxJ)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_j");

                entity.Property(e => e.RgpoMaxK)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_k");

                entity.Property(e => e.RgpoMaxL)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_l");

                entity.Property(e => e.RgpoMaxM)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_m");

                entity.Property(e => e.RgpoMaxN)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_max_n");

                entity.Property(e => e.RgpoMinA)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_a");

                entity.Property(e => e.RgpoMinB)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_b");

                entity.Property(e => e.RgpoMinC)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_c");

                entity.Property(e => e.RgpoMinD)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_d");

                entity.Property(e => e.RgpoMinE)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_e");

                entity.Property(e => e.RgpoMinF)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_f");

                entity.Property(e => e.RgpoMinG)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_g");

                entity.Property(e => e.RgpoMinH)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_h");

                entity.Property(e => e.RgpoMinI)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_i");

                entity.Property(e => e.RgpoMinJ)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_j");

                entity.Property(e => e.RgpoMinK)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_k");

                entity.Property(e => e.RgpoMinL)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_l");

                entity.Property(e => e.RgpoMinM)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_m");

                entity.Property(e => e.RgpoMinN)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_min_n");

                entity.Property(e => e.RgpoN)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("rgpo_n");

                entity.Property(e => e.TotRm)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("tot_rm");

                entity.Property(e => e.TotRv)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("tot_rv");

                entity.Property(e => e.TotalParticipan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("total_participan");
            });

            modelBuilder.Entity<EventoAlumno>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cevento, e.Ccurso, e.Cbloque, e.Calumno })
                    .HasName("PK__evento_alumno__6B6FCE9C");

                entity.ToTable("evento_alumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cfila)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cfila")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fsolicitud)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitud");

                entity.Property(e => e.GasistRezagado).HasColumnName("gasist_rezagado");

                entity.Property(e => e.Gcontrol)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcontrol")
                    .IsFixedLength(true);

                entity.Property(e => e.Grezagado).HasColumnName("grezagado");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<EventoAlumnoHisto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evento_alumno_histo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cfila)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cfila")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fsolicitud)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitud");

                entity.Property(e => e.GasistRezagado).HasColumnName("gasist_rezagado");

                entity.Property(e => e.Grezagado).HasColumnName("grezagado");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");
            });

            modelBuilder.Entity<EventoAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("evento_aula");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<EventoCurso>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cevento, e.Fevento, e.Ccurso })
                    .HasName("PK__evento_curso__6C63F2D5");

                entity.ToTable("evento_curso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Fevento)
                    .HasColumnType("datetime")
                    .HasColumnName("fevento");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ExamenIsso>(entity =>
            {
                entity.HasKey(e => e.Cexamen)
                    .HasName("PK__examen_i__B509EF77A9F0A800");

                entity.ToTable("examen_isso");

                entity.Property(e => e.Cexamen).HasColumnName("cexamen");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("modulo");

                entity.Property(e => e.Preguntanumero).HasColumnName("preguntanumero");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");

                entity.Property(e => e.Resp1).HasColumnName("resp1");

                entity.Property(e => e.Resp2).HasColumnName("resp2");

                entity.Property(e => e.Resp3).HasColumnName("resp3");

                entity.Property(e => e.Resp4).HasColumnName("resp4");
            });

            modelBuilder.Entity<ExploCursoExon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("explo_curso_exon");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.NpuntajeDesde)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("npuntaje_desde");

                entity.Property(e => e.NpuntajeHasta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("npuntaje_hasta");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<ExploPuntaje>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("explo_puntajes");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cfamilia).HasColumnName("cfamilia");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("npuntaje");
            });

            modelBuilder.Entity<ExploRango>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("explo_rangos");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cfamilia).HasColumnName("cfamilia");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.NpregDesde).HasColumnName("npreg_desde");

                entity.Property(e => e.NpregHasta).HasColumnName("npreg_hasta");
            });

            modelBuilder.Entity<ExploResultado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("explo_resultados");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.Sprocesa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sprocesa")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Exploratorio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("exploratorios");

                entity.Property(e => e.Cfisica).HasColumnName("cfisica");

                entity.Property(e => e.Cingles).HasColumnName("cingles");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clenguaje).HasColumnName("clenguaje");

                entity.Property(e => e.Cmatema).HasColumnName("cmatema");

                entity.Property(e => e.Cmatemb).HasColumnName("cmatemb");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Sprocesa)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sprocesa")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ExportImportNotasVirtual>(entity =>
            {
                entity.HasKey(e => new { e.Cexportacion, e.Cingreso })
                    .HasName("PK_exportacion_importacion_notas_virtual");

                entity.ToTable("export_import_notas_virtual");

                entity.Property(e => e.Cexportacion)
                    .HasMaxLength(10)
                    .HasColumnName("cexportacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.CcursoMoodle)
                    .HasMaxLength(256)
                    .HasColumnName("ccurso_moodle");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .HasColumnName("estado")
                    .IsFixedLength(true)
                    .HasComment("I de ingresado P de procesado ");

                entity.Property(e => e.FechaExportacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_exportacion");

                entity.Property(e => e.FechaImportacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_importacion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(256)
                    .HasColumnName("nombre");

                entity.Property(e => e.Nota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nota");
            });

            modelBuilder.Entity<Facultad>(entity =>
            {
                entity.HasKey(e => e.Cfacultad)
                    .HasName("PK__facultad__01741E54");

                entity.ToTable("facultad");

                entity.Property(e => e.Cfacultad)
                    .ValueGeneratedNever()
                    .HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dfacultad)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dfacultad");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sfacultad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sfacultad");
            });

            modelBuilder.Entity<FaqContenido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("faq_contenido");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("cusuario");

                entity.Property(e => e.Cusuariomod)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("cusuariomod");

                entity.Property(e => e.Dcontenido)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("dcontenido");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gubiacion).HasColumnName("gubiacion");
            });

            modelBuilder.Entity<Fecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("fechas");

                entity.HasIndex(e => new { e.Cperiodo, e.Fecha1 }, "fechas01")
                    .IsUnique();

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fecha1)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");
            });

            modelBuilder.Entity<Ficha>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso })
                    .HasName("PK__ficha__15B0212B");

                entity.ToTable("ficha");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.Cbloque }, "ficha02");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.Nvez2).HasColumnName("nvez2");

                entity.Property(e => e.Nvez2Real).HasColumnName("Nvez2_real");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CcursoNavigation)
                    .WithMany(p => p.Fichas)
                    .HasForeignKey(d => d.Ccurso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_ficha_a_curso");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.Fichas)
                    .HasForeignKey(d => new { d.Calumno, d.Cperiodo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_ficha_a_alumno_periodo");
            });

            modelBuilder.Entity<Ficha2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Ficha20>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha20");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno, e.Ccurso }, "ficha20");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.Nvez2).HasColumnName("nvez2");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaHHasta20092>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha_h_hasta_20092");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaHasta20092>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha_hasta_20092");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaMedicina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha_medicina");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaMigNono>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ficha_mig_nono");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FichaMoodle>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso });

                entity.ToTable("ficha_moodle");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CategoriaCd).HasColumnName("categoria_cd");

                entity.Property(e => e.CategoriaNombre)
                    .HasMaxLength(250)
                    .HasColumnName("categoria_nombre");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CursoNombreCorto)
                    .HasMaxLength(150)
                    .HasColumnName("curso_nombre_corto");

                entity.Property(e => e.CursoNombreLargo)
                    .HasMaxLength(250)
                    .HasColumnName("curso_nombre_largo");

                entity.Property(e => e.FechaCreacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion_moodle");

                entity.Property(e => e.FechaModificacionMoodle)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion_moodle");
            });

            modelBuilder.Entity<FilePersonal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("file_personal");

                entity.HasIndex(e => e.Cpersona, "file01");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dobservacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gcaso).HasColumnName("gcaso");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoRegistro).HasColumnName("gtipo_registro");

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<FilePersonalH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("file_personal_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dobservacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gcaso).HasColumnName("gcaso");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoRegistro).HasColumnName("gtipo_registro");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.SusuarioAut)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");
            });

            modelBuilder.Entity<Forum>(entity =>
            {
                entity.HasKey(e => e.Cforum);

                entity.ToTable("forum");

                entity.Property(e => e.Cforum).HasColumnName("cforum");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CforumPadre).HasColumnName("cforum_padre");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.TipoPersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_persona")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoTarea).HasColumnName("tipo_tarea");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<ForumVisitum>(entity =>
            {
                entity.HasKey(e => e.CforumVisita);

                entity.ToTable("forum_visita");

                entity.Property(e => e.CforumVisita).HasColumnName("cforum_visita");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Cforum).HasColumnName("cforum");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.TipoPersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_persona");
            });

            modelBuilder.Entity<Foto>(entity =>
            {
                entity.HasKey(e => e.Cpersona)
                    .HasName("PK__foto__2D87AABC");

                entity.ToTable("foto");

                entity.Property(e => e.Cpersona)
                    .ValueGeneratedNever()
                    .HasColumnName("cpersona");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Tfoto)
                    .HasColumnType("image")
                    .HasColumnName("tfoto");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithOne(p => p.Foto)
                    .HasForeignKey<Foto>(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_foto_a_persona");
            });

            modelBuilder.Entity<FotoEclass>(entity =>
            {
                entity.HasKey(e => e.CfotoEclass);

                entity.ToTable("foto_eclass");

                entity.Property(e => e.CfotoEclass).HasColumnName("cfoto_eclass");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(150)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(150)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FotoEclass1)
                    .HasColumnType("image")
                    .HasColumnName("foto_eclass");

                entity.Property(e => e.Tfoto)
                    .HasMaxLength(150)
                    .HasColumnName("tfoto");
            });

            modelBuilder.Entity<FotoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("foto_h");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<FotoTemporal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("foto_temporal");

                entity.Property(e => e.Cpersona)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cpersona");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Tfoto)
                    .HasColumnType("image")
                    .HasColumnName("tfoto");
            });

            modelBuilder.Entity<Fotocheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("fotocheck");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.GtipoFotocheck).HasColumnName("gtipo_fotocheck");

                entity.Property(e => e.Tmodelo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tmodelo")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobjeto)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Funcionario>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("funcionario");

                entity.Property(e => e.Codigo)
                    .ValueGeneratedNever()
                    .HasColumnName("codigo");

                entity.Property(e => e.Asignadoa)
                    .HasMaxLength(50)
                    .HasColumnName("asignadoa");

                entity.Property(e => e.Cargo)
                    .HasMaxLength(50)
                    .HasColumnName("cargo");

                entity.Property(e => e.Centrocosto)
                    .HasMaxLength(10)
                    .HasColumnName("centrocosto");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(20)
                    .HasColumnName("departamento");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(150)
                    .HasColumnName("direccion");

                entity.Property(e => e.Empleado)
                    .HasMaxLength(150)
                    .HasColumnName("empleado");

                entity.Property(e => e.Fechaingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fechaingreso");

                entity.Property(e => e.Ips)
                    .HasMaxLength(10)
                    .HasColumnName("ips");

                entity.Property(e => e.Nrocedula)
                    .HasMaxLength(20)
                    .HasColumnName("nrocedula");

                entity.Property(e => e.Otroseguro)
                    .HasMaxLength(10)
                    .HasColumnName("otroseguro");

                entity.Property(e => e.Sueldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("sueldo");
            });

            modelBuilder.Entity<FuncionarioCarac>(entity =>
            {
                entity.HasKey(e => e.Cfcarac)
                    .HasName("PK__funciona__2D406255B05EFC53");

                entity.ToTable("funcionario_carac");

                entity.Property(e => e.Cfcarac).HasColumnName("cfcarac");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("apellido");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("departamento");

                entity.Property(e => e.Domicilio)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("domicilio");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.FEntrada)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("f_entrada");

                entity.Property(e => e.FNac)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("f_nac");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nacionalidad");

                entity.Property(e => e.Nautoridad).HasColumnName("nautoridad");

                entity.Property(e => e.NdocIdentidad).HasColumnName("ndoc_identidad");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Profesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profesion");
            });

            modelBuilder.Entity<FuncionarioWeb>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Cfuncionario, e.Dfuncionario });

                entity.ToTable("funcionario_web");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Cfuncionario).HasColumnName("cfuncionario");

                entity.Property(e => e.Dfuncionario)
                    .HasMaxLength(150)
                    .HasColumnName("dfuncionario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.GAcad)
                    .HasColumnName("g_acad")
                    .HasComment("1 Ing. 2 Lic. 3 Mg. 4 Dr(a). 5 Sr. ");

                entity.Property(e => e.GobernanzaEclass).HasColumnName("gobernanza_eclass");

                entity.Property(e => e.OrdenGobernanza).HasColumnName("orden_gobernanza");

                entity.Property(e => e.Potestad)
                    .HasMaxLength(150)
                    .HasColumnName("potestad");

                entity.HasOne(d => d.CinstitucionNavigation)
                    .WithMany(p => p.FuncionarioWebs)
                    .HasForeignKey(d => d.Cinstitucion)
                    .HasConstraintName("FK__funcionar__cinst__76AB123A");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithMany(p => p.FuncionarioWebs)
                    .HasForeignKey(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__funcionar__cusua__779F3673");
            });

            modelBuilder.Entity<FuncionarioWebActividade>(entity =>
            {
                entity.HasKey(e => e.Cobjeto);

                entity.ToTable("funcionario_web_actividades");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Atencion).HasMaxLength(50);

                entity.Property(e => e.Descripcion).HasMaxLength(250);

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaActividad)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_actividad");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Periodo)
                    .HasMaxLength(10)
                    .HasColumnName("periodo");

                entity.Property(e => e.Semana).HasMaxLength(50);

                entity.Property(e => e.Smodificacion)
                    .HasMaxLength(50)
                    .HasColumnName("smodificacion");

                entity.Property(e => e.Susuario)
                    .HasMaxLength(50)
                    .HasColumnName("susuario");
            });

            modelBuilder.Entity<FuncionarioWebActividadesH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("funcionario_web_actividades_h");

                entity.Property(e => e.Atencion).HasMaxLength(50);

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(30)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Descripcion).HasMaxLength(250);

                entity.Property(e => e.Fcreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaActividad)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_actividad");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Periodo)
                    .HasMaxLength(10)
                    .HasColumnName("periodo");

                entity.Property(e => e.Semana).HasMaxLength(50);

                entity.Property(e => e.Susuario)
                    .HasMaxLength(50)
                    .HasColumnName("susuario");
            });

            modelBuilder.Entity<FuncionarioWebCarrera>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("funcionario_web_carrera");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cfuncionario).HasColumnName("cfuncionario");
            });

            modelBuilder.Entity<FuncionarioWebPermiso>(entity =>
            {
                entity.HasKey(e => e.Idpermiso);

                entity.ToTable("funcionario_web_permisos");

                entity.Property(e => e.Idpermiso).HasColumnName("idpermiso");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.ItemPermiso)
                    .HasMaxLength(150)
                    .HasColumnName("item_permiso");

                entity.Property(e => e.LugarPermiso)
                    .HasMaxLength(150)
                    .HasColumnName("lugar_permiso");
            });

            modelBuilder.Entity<GradoAcademico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("grado_academico");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.CperiodoEgreso).HasColumnName("cperiodo_egreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FechaActoAcad)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_acto_acad");

                entity.Property(e => e.FechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_emision");

                entity.Property(e => e.FechaResolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_resolucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoridad1).HasColumnName("gautoridad1");

                entity.Property(e => e.Gautoridad2).HasColumnName("gautoridad2");

                entity.Property(e => e.Gautoridad3).HasColumnName("gautoridad3");

                entity.Property(e => e.Gcargo1).HasColumnName("gcargo1");

                entity.Property(e => e.Gcargo2).HasColumnName("gcargo2");

                entity.Property(e => e.Gcargo3).HasColumnName("gcargo3");

                entity.Property(e => e.GgradoAcademico).HasColumnName("ggrado_academico");

                entity.Property(e => e.Nasiento).HasColumnName("nasiento");

                entity.Property(e => e.Nfolio).HasColumnName("nfolio");

                entity.Property(e => e.Ntomo).HasColumnName("ntomo");

                entity.Property(e => e.Tndiploma)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tndiploma")
                    .IsFixedLength(true);

                entity.Property(e => e.Tnresolucion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tnresolucion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Grupo>(entity =>
            {
                entity.HasKey(e => e.Cgrupo)
                    .HasName("PK__grupo__763775D2");

                entity.ToTable("grupo");

                entity.Property(e => e.Cgrupo)
                    .ValueGeneratedNever()
                    .HasColumnName("cgrupo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sgrupo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo");
            });

            modelBuilder.Entity<GrupoMaterium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("grupo_materia");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Sgrupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo");
            });

            modelBuilder.Entity<GrupoPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("grupo_persona");

                entity.Property(e => e.Ccategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccategoria");

                entity.Property(e => e.Cempresa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempresa")
                    .IsFixedLength(true);

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmora)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmora");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sgrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo");
            });

            modelBuilder.Entity<Haccal00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("haccal00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpuert)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cpuert")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpacc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpacc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpmar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpmar")
                    .IsFixedLength(true);

                entity.Property(e => e.Frgacc)
                    .HasColumnType("datetime")
                    .HasColumnName("frgacc");

                entity.Property(e => e.Hrgacc)
                    .HasColumnType("datetime")
                    .HasColumnName("hrgacc");

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Halxcl00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("halxcl00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaing)
                    .HasColumnType("datetime")
                    .HasColumnName("faaing");

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Npeing).HasColumnName("npeing");

                entity.Property(e => e.Salumn)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("salumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Spgcuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("spgcuo")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hartic00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hartic00");

                entity.Property(e => e.Cartic)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccenrp)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cgrart)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cgrart")
                    .IsFixedLength(true);

                entity.Property(e => e.Cimart)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cimart")
                    .IsFixedLength(true);

                entity.Property(e => e.Cliart)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cliart")
                    .IsFixedLength(true);

                entity.Property(e => e.Cnvpre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cnvpre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpreg)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpreg")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dabart)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dabart")
                    .IsFixedLength(true);

                entity.Property(e => e.Dartic)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Nsecue).HasColumnName("nsecue");

                entity.Property(e => e.Sartic)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Scatcl)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scatcl")
                    .IsFixedLength(true);

                entity.Property(e => e.Sevent)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sevent")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfactu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfactu")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Havcuo01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("havcuo01");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpvta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpvta")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Fsumar)
                    .HasColumnType("datetime")
                    .HasColumnName("fsumar");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Qalcuo01).HasColumnName("qalcuo01");

                entity.Property(e => e.Qalcuo02).HasColumnName("qalcuo02");

                entity.Property(e => e.Qalcuo03).HasColumnName("qalcuo03");

                entity.Property(e => e.Qalcuo04).HasColumnName("qalcuo04");

                entity.Property(e => e.Qalcuo05).HasColumnName("qalcuo05");

                entity.Property(e => e.Qalcuo06).HasColumnName("qalcuo06");

                entity.Property(e => e.Qalcuo07).HasColumnName("qalcuo07");

                entity.Property(e => e.Qalcuo08).HasColumnName("qalcuo08");

                entity.Property(e => e.Qalcuo09).HasColumnName("qalcuo09");

                entity.Property(e => e.Qalcuo10).HasColumnName("qalcuo10");

                entity.Property(e => e.Qalcuo11).HasColumnName("qalcuo11");

                entity.Property(e => e.Qalcuo12).HasColumnName("qalcuo12");

                entity.Property(e => e.Qalexp).HasColumnName("qalexp");

                entity.Property(e => e.Qalred).HasColumnName("qalred");

                entity.Property(e => e.Qalrep).HasColumnName("qalrep");

                entity.Property(e => e.Qalres).HasColumnName("qalres");

                entity.Property(e => e.Qalvig).HasColumnName("qalvig");
            });

            modelBuilder.Entity<Hbenef00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hbenef00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cartic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccatcl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccatcl")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccnben)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccnben")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cstben)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cstben")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpben)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpben")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpvta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpvta")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusaut)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusaut")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Pdsadi)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("pdsadi");

                entity.Property(e => e.Pdscto)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("pdscto");

                entity.Property(e => e.Pdsini)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("pdsini");

                entity.Property(e => e.Sbeca)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sbeca")
                    .IsFixedLength(true);

                entity.Property(e => e.Situacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("situacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hcacts00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hcacts00");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctraba)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ctraba")
                    .IsFixedLength(true);

                entity.Property(e => e.Fdepos)
                    .HasColumnType("datetime")
                    .HasColumnName("fdepos");

                entity.Property(e => e.Fmacbt)
                    .HasColumnType("datetime")
                    .HasColumnName("fmacbt");

                entity.Property(e => e.Iintfe)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("iintfe");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(8, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Ndpcts).HasColumnName("ndpcts");
            });

            modelBuilder.Entity<Hcarcp00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hcarcp00");

                entity.Property(e => e.Ccenrp)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaco)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Clcemi)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("clcemi")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Copera)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("copera")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprove)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cprove")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fmacbt)
                    .HasColumnType("datetime")
                    .HasColumnName("fmacbt");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");
            });

            modelBuilder.Entity<Hcenrp00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hcenrp00");

                entity.Property(e => e.Ccenrp)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpcrp)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpcrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcenrp)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dcenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Fulmod)
                    .HasColumnType("datetime")
                    .HasColumnName("fulmod");

                entity.Property(e => e.Scenrp)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Sultnv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sultnv")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hclien00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hclien00");

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdistr).HasColumnName("cdistr");

                entity.Property(e => e.Cdocid)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("cdocid")
                    .IsFixedLength(true);

                entity.Property(e => e.Cimcli)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cimcli")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprovi).HasColumnName("cprovi");

                entity.Property(e => e.Ctpcli)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpcli")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdci)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdci")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dclien)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Ddrcli)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ddrcli")
                    .IsFixedLength(true);

                entity.Property(e => e.Dlocal)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dlocal")
                    .IsFixedLength(true);

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Ntelef)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ntelef")
                    .IsFixedLength(true);

                entity.Property(e => e.Sacchq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sacchq")
                    .IsFixedLength(true);

                entity.Property(e => e.Sclien)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hctact00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hctact00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctdoc)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctpag)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctpag")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmndoc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmndoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmnpag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmnpag")
                    .IsFixedLength(true);

                entity.Property(e => e.Copera)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("copera")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdlq)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdlq")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctppag)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctppag")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpref)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpref")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fpagos)
                    .HasColumnType("datetime")
                    .HasColumnName("fpagos");

                entity.Property(e => e.Frgmov)
                    .HasColumnType("datetime")
                    .HasColumnName("frgmov");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Idcpag)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idcpag");

                entity.Property(e => e.Idocum)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Ndcliq).HasColumnName("ndcliq");

                entity.Property(e => e.Ndcpag).HasColumnName("ndcpag");

                entity.Property(e => e.Ndcref).HasColumnName("ndcref");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");

                entity.Property(e => e.Nmovim).HasColumnName("nmovim");

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hctcaj00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hctcaj00");

                entity.Property(e => e.Cctame)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctame")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctamn)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctamn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Clcemi)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("clcemi")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Fcierr)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierr");

                entity.Property(e => e.Icuame)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("icuame");

                entity.Property(e => e.Icuamn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("icuamn");

                entity.Property(e => e.Isaame)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaame");

                entity.Property(e => e.Isaamn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaamn");

                entity.Property(e => e.Isaime)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaime");

                entity.Property(e => e.Isaimn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaimn");

                entity.Property(e => e.Iseame)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iseame");

                entity.Property(e => e.Iseamn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iseamn");

                entity.Property(e => e.Iseime)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iseime");

                entity.Property(e => e.Iseimn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iseimn");

                entity.Property(e => e.Sciecj)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sciecj")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hdccar00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdccar00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaco)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Copera)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("copera")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdlq)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdlq")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fmasum)
                    .HasColumnType("datetime")
                    .HasColumnName("fmasum");

                entity.Property(e => e.Fstatu)
                    .HasColumnType("datetime")
                    .HasColumnName("fstatu");

                entity.Property(e => e.Fulpag)
                    .HasColumnType("datetime")
                    .HasColumnName("fulpag");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Idocum)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Nbanco).HasColumnName("nbanco");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Ndcliq).HasColumnName("ndcliq");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Sdocum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sdocum")
                    .IsFixedLength(true);

                entity.Property(e => e.Sgasto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sgasto")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hdgfac00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdgfac00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccatcl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccatcl")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmoned)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmoned")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmtanu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cmtanu")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Crucpa)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("crucpa")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpcli)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpcli")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpref)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpref")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Cvende)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cvende")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fstatu)
                    .HasColumnType("datetime")
                    .HasColumnName("fstatu");

                entity.Property(e => e.Fvenci)
                    .HasColumnType("datetime")
                    .HasColumnName("fvenci");

                entity.Property(e => e.Hemisi)
                    .HasColumnType("datetime")
                    .HasColumnName("hemisi");

                entity.Property(e => e.Ibruto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ibruto");

                entity.Property(e => e.Idscto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idscto");

                entity.Property(e => e.Iimpue)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iimpue");

                entity.Property(e => e.Itneto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itneto");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Nbanco).HasColumnName("nbanco");

                entity.Property(e => e.Ndcref).HasColumnName("ndcref");

                entity.Property(e => e.Nfactu).HasColumnName("nfactu");

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nproce).HasColumnName("nproce");

                entity.Property(e => e.Nsecue).HasColumnName("nsecue");

                entity.Property(e => e.Scance)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scance")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfactu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfactu")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hdgliq00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdgliq00");

                entity.Property(e => e.Ccobra)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ccobra")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccodlq)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccodlq")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmtanu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cmtanu")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdlq)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdlq")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Fconta)
                    .HasColumnType("datetime")
                    .HasColumnName("fconta");

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Fpagos)
                    .HasColumnType("datetime")
                    .HasColumnName("fpagos");

                entity.Property(e => e.Fstatu)
                    .HasColumnType("datetime")
                    .HasColumnName("fstatu");

                entity.Property(e => e.Hemisi)
                    .HasColumnType("datetime")
                    .HasColumnName("hemisi");

                entity.Property(e => e.Idlqme)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idlqme");

                entity.Property(e => e.Idlqmn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idlqmn");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(10, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Ndcliq).HasColumnName("ndcliq");

                entity.Property(e => e.Nvdclq).HasColumnName("nvdclq");

                entity.Property(e => e.Sdcliq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sdcliq")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Hdtcar00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdtcar00");

                entity.Property(e => e.Cartic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmasum)
                    .HasColumnType("datetime")
                    .HasColumnName("fmasum");

                entity.Property(e => e.Iartic)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iartic");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Isaldo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");

                entity.Property(e => e.Qartic).HasColumnName("qartic");
            });

            modelBuilder.Entity<Hdtfac00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdtfac00");

                entity.Property(e => e.Cartic)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cartic")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cimpue01)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cimpue01")
                    .IsFixedLength(true);

                entity.Property(e => e.Cimpue02)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cimpue02")
                    .IsFixedLength(true);

                entity.Property(e => e.Cposfa01)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cposfa01")
                    .IsFixedLength(true);

                entity.Property(e => e.Cposfa02)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cposfa02")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ibruto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ibruto");

                entity.Property(e => e.Idscto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idscto");

                entity.Property(e => e.Iimpue01)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iimpue01");

                entity.Property(e => e.Iimpue02)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("iimpue02");

                entity.Property(e => e.Itneto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("itneto");

                entity.Property(e => e.Nfactu).HasColumnName("nfactu");

                entity.Property(e => e.Qartic).HasColumnName("qartic");
            });

            modelBuilder.Entity<Hdtliq00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hdtliq00");

                entity.Property(e => e.Calumn)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("calumn")
                    .IsFixedLength(true);

                entity.Property(e => e.Cbanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cbanco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cclien)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cclien")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctdoc)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctpag)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctpag")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmensj)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("cmensj")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmnpag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmnpag")
                    .IsFixedLength(true);

                entity.Property(e => e.Copera)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("copera")
                    .IsFixedLength(true);

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdlq)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdlq")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctppag)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctppag")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Femisi)
                    .HasColumnType("datetime")
                    .HasColumnName("femisi");

                entity.Property(e => e.Idcpag)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idcpag");

                entity.Property(e => e.Ndcliq).HasColumnName("ndcliq");

                entity.Property(e => e.Ndcpag).HasColumnName("ndcpag");

                entity.Property(e => e.Ndiadi).HasColumnName("ndiadi");

                entity.Property(e => e.Ndocum).HasColumnName("ndocum");

                entity.Property(e => e.Scance)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scance")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Henvba00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("henvba00");

                entity.Property(e => e.Cbanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cbanco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cerror)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("cerror")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmnpag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cmnpag")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpenv)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpenv")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Fenvio)
                    .HasColumnType("datetime")
                    .HasColumnName("fenvio");

                entity.Property(e => e.Fpagos)
                    .HasColumnType("datetime")
                    .HasColumnName("fpagos");

                entity.Property(e => e.Fregis)
                    .HasColumnType("datetime")
                    .HasColumnName("fregis");

                entity.Property(e => e.Idcpag)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("idcpag");

                entity.Property(e => e.Igasto)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("igasto");

                entity.Property(e => e.Imoras)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("imoras");

                entity.Property(e => e.Nbanco).HasColumnName("nbanco");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Ndcliq).HasColumnName("ndcliq");

                entity.Property(e => e.Nenvio).HasColumnName("nenvio");

                entity.Property(e => e.Nmovim).HasColumnName("nmovim");

                entity.Property(e => e.Sregis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sregis")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Horario>(entity =>
            {
                entity.HasKey(e => e.Chorario)
                    .HasName("PK__horario__2E46C4CB");

                entity.ToTable("horario");

                entity.Property(e => e.Chorario)
                    .ValueGeneratedNever()
                    .HasColumnName("chorario");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dhorario)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dhorario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHorario).HasColumnName("gtipo_horario");

                entity.Property(e => e.Nhorasxsesion)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("nhorasxsesion");

                entity.Property(e => e.Nminutosxsesion).HasColumnName("nminutosxsesion");

                entity.Property(e => e.Nsesion).HasColumnName("nsesion");

                entity.Property(e => e.Shorario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("shorario");
            });

            modelBuilder.Entity<HorarioSesion>(entity =>
            {
                entity.HasKey(e => new { e.Chorario, e.Ndia, e.Hinicio })
                    .HasName("PK__horario_sesion__2F3AE904");

                entity.ToTable("horario_sesion");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");
            });

            modelBuilder.Entity<Importar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("importar$");

                entity.Property(e => e.Accesibilidad)
                    .HasMaxLength(255)
                    .HasColumnName("ACCESIBILIDAD");

                entity.Property(e => e.AccesibleConsultas)
                    .HasMaxLength(255)
                    .HasColumnName("ACCESIBLE_CONSULTAS");

                entity.Property(e => e.AsistenciaClases)
                    .HasMaxLength(255)
                    .HasColumnName("ASISTENCIA_CLASES");

                entity.Property(e => e.CalificacionProfesor)
                    .HasMaxLength(255)
                    .HasColumnName("CALIFICACION_PROFESOR");

                entity.Property(e => e.CalificacionesPlazoEstablecido)
                    .HasMaxLength(255)
                    .HasColumnName("CALIFICACIONES_PLAZO_ESTABLECIDO");

                entity.Property(e => e.Carrera)
                    .HasMaxLength(255)
                    .HasColumnName("CARRERA");

                entity.Property(e => e.ClasesPreparadas)
                    .HasMaxLength(255)
                    .HasColumnName("CLASES_PREPARADAS");

                entity.Property(e => e.ConceptosConsultas)
                    .HasMaxLength(255)
                    .HasColumnName("CONCEPTOS_CONSULTAS");

                entity.Property(e => e.EvaluacionFinal)
                    .HasMaxLength(255)
                    .HasColumnName("EVALUACION_FINAL");

                entity.Property(e => e.HorarioEntradaSalida)
                    .HasMaxLength(255)
                    .HasColumnName("HORARIO_ENTRADA_SALIDA");

                entity.Property(e => e.Liderazgo)
                    .HasMaxLength(255)
                    .HasColumnName("LIDERAZGO");

                entity.Property(e => e.Materia)
                    .HasMaxLength(255)
                    .HasColumnName("MATERIA");

                entity.Property(e => e.Profesor)
                    .HasMaxLength(255)
                    .HasColumnName("PROFESOR");

                entity.Property(e => e.ProgramaCurso)
                    .HasMaxLength(255)
                    .HasColumnName("PROGRAMA_CURSO");

                entity.Property(e => e.ResolverProblemas)
                    .HasMaxLength(255)
                    .HasColumnName("RESOLVER_PROBLEMAS");

                entity.Property(e => e.RespetoEstudiantes)
                    .HasMaxLength(255)
                    .HasColumnName("RESPETO_ESTUDIANTES");

                entity.Property(e => e.Semestre)
                    .HasMaxLength(255)
                    .HasColumnName("semestre");

                entity.Property(e => e.SeminariosAsignaturas)
                    .HasMaxLength(255)
                    .HasColumnName("SEMINARIOS_ASIGNATURAS");

                entity.Property(e => e.Turno).HasColumnName("TURNO");
            });

            modelBuilder.Entity<IndIndicador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_indicador");

                entity.Property(e => e.Cindicador).HasColumnName("cindicador");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Dindicador)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dindicador")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gfrecuencia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gfrecuencia")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Sindicador)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sindicador")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<IndIndxunidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_indxunidad");

                entity.Property(e => e.Cindicador).HasColumnName("cindicador");

                entity.Property(e => e.Cunidad).HasColumnName("cunidad");
            });

            modelBuilder.Entity<IndOpcione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_opciones");

                entity.Property(e => e.Cindicador).HasColumnName("cindicador");

                entity.Property(e => e.Dfrecuencia)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfrecuencia")
                    .IsFixedLength(true);

                entity.Property(e => e.Dindicador)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dindicador")
                    .IsFixedLength(true);

                entity.Property(e => e.DtipoInd)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_ind")
                    .IsFixedLength(true);

                entity.Property(e => e.Fdesde)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("fdesde")
                    .IsFixedLength(true);

                entity.Property(e => e.Fhasta)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("fhasta")
                    .IsFixedLength(true);

                entity.Property(e => e.Nconsulta).HasColumnName("nconsulta");

                entity.Property(e => e.Sunid0)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid0")
                    .IsFixedLength(true);

                entity.Property(e => e.Sunid1)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid1")
                    .IsFixedLength(true);

                entity.Property(e => e.Sunid2)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid2")
                    .IsFixedLength(true);

                entity.Property(e => e.Sunid3)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid3")
                    .IsFixedLength(true);

                entity.Property(e => e.Sunid4)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid4")
                    .IsFixedLength(true);

                entity.Property(e => e.Sunid5)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sunid5")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<IndSumIndicador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_sum_indicador");

                entity.Property(e => e.Cindicador).HasColumnName("cindicador");

                entity.Property(e => e.Cunidad).HasColumnName("cunidad");

                entity.Property(e => e.Dglosa)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dglosa")
                    .IsFixedLength(true);

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nvalor");
            });

            modelBuilder.Entity<IndTcxperiodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_tcxperiodo");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Itpcam)
                    .HasColumnType("decimal(12, 3)")
                    .HasColumnName("itpcam");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<IndUnidNegocio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ind_unid_negocio");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cunidad).HasColumnName("cunidad");

                entity.Property(e => e.Dunidad)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dunidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sunidad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sunidad")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Indicacion>(entity =>
            {
                entity.HasKey(e => new { e.Cindicacion, e.Cconsulta })
                    .HasName("PK__indicaci__4EF5ECEF30E1D570");

                entity.ToTable("indicacion");

                entity.Property(e => e.Cindicacion).HasColumnName("cindicacion");

                entity.Property(e => e.Cconsulta).HasColumnName("cconsulta");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Sindicacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("sindicacion");

                entity.HasOne(d => d.CconsultaNavigation)
                    .WithMany(p => p.Indicacions)
                    .HasForeignKey(d => d.Cconsulta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_indicacion_a_consulta");
            });

            modelBuilder.Entity<Indie>(entity =>
            {
                entity.HasKey(e => e.Cindice)
                    .HasName("PK__indice__505CB104");

                entity.ToTable("indice");

                entity.Property(e => e.Cindice).HasColumnName("cindice");

                entity.Property(e => e.Ccapitulo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ccapitulo");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dindice)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("dindice");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.HasOne(d => d.CclasificacionNavigation)
                    .WithMany(p => p.Indice)
                    .HasForeignKey(d => d.Cclasificacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_indice_a_clasificacion");
            });

            modelBuilder.Entity<InformeSocioeconomico>(entity =>
            {
                entity.HasKey(e => e.Cise)
                    .HasName("PK__informe___23BE91A77754A29D");

                entity.ToTable("informe_socioeconomico");

                entity.Property(e => e.Cise).HasColumnName("cise");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("observacion");

                entity.Property(e => e.Pregunta)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pregunta");

                entity.Property(e => e.Respuesta)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("respuesta");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");
            });

            modelBuilder.Entity<InfosilAluCorreo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("infosil_alu_correo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DcorreoP)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dcorreo_p");

                entity.Property(e => e.DcorreoS)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcorreo_s");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GpasaAsistencia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpasa_asistencia")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<InfosilUserLibre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("infosil_user_libre");

                entity.Property(e => e.Cclave)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dusuar)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dusuar")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Institucion>(entity =>
            {
                entity.HasKey(e => e.Cinstitucion)
                    .HasName("PK__institucion__066DDD9B");

                entity.ToTable("institucion");

                entity.Property(e => e.Cinstitucion)
                    .ValueGeneratedNever()
                    .HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo).HasColumnName("gcargo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("nfax")
                    .IsFixedLength(true);

                entity.Property(e => e.Nruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nruc");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Sinstitucion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sinstitucion");

                entity.Property(e => e.Tcontacto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcontacto")
                    .IsFixedLength(true);

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");
            });

            modelBuilder.Entity<InstitucionEducativa>(entity =>
            {
                entity.HasKey(e => new { e.Clugar, e.CtipoInstitucion, e.Cinstitucion, e.Ccarrera, e.Ctitulo })
                    .HasName("PK_instituciones_educativas");

                entity.ToTable("institucion_educativa");

                entity.Property(e => e.Clugar).HasColumnName("clugar");

                entity.Property(e => e.CtipoInstitucion).HasColumnName("ctipo_institucion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ctitulo).HasColumnName("ctitulo");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dinstitucion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.Dlugar)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dlugar");

                entity.Property(e => e.DtipoInstitucion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_institucion");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");
            });

            modelBuilder.Entity<InstitucionEducativaExtranjero>(entity =>
            {
                entity.HasKey(e => e.Cinstitucion);

                entity.ToTable("institucion_educativa_extranjero");

                entity.Property(e => e.Cinstitucion)
                    .ValueGeneratedNever()
                    .HasColumnName("cinstitucion");

                entity.Property(e => e.Dinstitucion)
                    .HasMaxLength(250)
                    .HasColumnName("dinstitucion");
            });

            modelBuilder.Entity<InstructivoArchivo>(entity =>
            {
                entity.HasKey(e => e.Cinstructivo);

                entity.ToTable("instructivo_archivo");

                entity.Property(e => e.Cinstructivo).HasColumnName("cinstructivo");

                entity.Property(e => e.AnioResolucion).HasColumnName("anio_resolucion");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion)
                    .HasMaxLength(10)
                    .HasColumnName("cinstitucion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Grupo).HasColumnName("grupo");

                entity.Property(e => e.Instructivo)
                    .HasColumnType("image")
                    .HasColumnName("instructivo");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.NroResolucionCadena)
                    .HasMaxLength(5)
                    .HasColumnName("nro_resolucion_cadena");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(500)
                    .HasColumnName("tipo_documento");

                entity.Property(e => e.TipoResolucion).HasColumnName("tipo_resolucion");
            });

            modelBuilder.Entity<InvAlmacen>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_almacen");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dalmacen)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dalmacen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Salmacen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("salmacen");
            });

            modelBuilder.Entity<InvAlmacenH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_almacen_h");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dalmacen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dalmacen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Salmacen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("salmacen");
            });

            modelBuilder.Entity<InvEquipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");

                entity.Property(e => e.Gmodelo).HasColumnName("gmodelo");

                entity.Property(e => e.Gprocesador).HasColumnName("gprocesador");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("ncapacidad");

                entity.Property(e => e.Nmemoria)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("nmemoria");

                entity.Property(e => e.NserieEquipo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.NserieFab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nserie_fab");

                entity.Property(e => e.Nvelocidad).HasColumnName("nvelocidad");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvEquipoAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_aula");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fcese)
                    .HasColumnType("datetime")
                    .HasColumnName("fcese");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Nposicion).HasColumnName("nposicion");

                entity.Property(e => e.NserieEquipo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.TgrupoTrabajo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tgrupo_trabajo");
            });

            modelBuilder.Entity<InvEquipoAulaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_aula_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fcese)
                    .HasColumnType("datetime")
                    .HasColumnName("fcese");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Nposicion).HasColumnName("nposicion");

                entity.Property(e => e.NserieEquipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.TgrupoTrabajo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tgrupo_trabajo");
            });

            modelBuilder.Entity<InvEquipoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_h");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");

                entity.Property(e => e.Gmodelo).HasColumnName("gmodelo");

                entity.Property(e => e.Gprocesador).HasColumnName("gprocesador");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("ncapacidad");

                entity.Property(e => e.Nmemoria)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("nmemoria");

                entity.Property(e => e.NserieEquipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.NserieFab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nserie_fab");

                entity.Property(e => e.Nvelocidad).HasColumnName("nvelocidad");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvEquipoResponsable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_responsable");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fbaja)
                    .HasColumnType("datetime")
                    .HasColumnName("fbaja");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcompartido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcompartido")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.NserieEquipo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.TgrupoTrabajo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tgrupo_trabajo");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvEquipoResponsableH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_responsable_h");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fbaja)
                    .HasColumnType("datetime")
                    .HasColumnName("fbaja");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcompartido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcompartido")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.NserieEquipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.TgrupoTrabajo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tgrupo_trabajo");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvEquipoSoftware>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_software");

                entity.Property(e => e.Csoftware).HasColumnName("csoftware");

                entity.Property(e => e.Cusuario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cusuario");

                entity.Property(e => e.Fdesinstalacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesinstalacion");

                entity.Property(e => e.Finstalacion)
                    .HasColumnType("datetime")
                    .HasColumnName("finstalacion");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.NserieEquipo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<InvEquipoSoftwareH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_equipo_software_h");

                entity.Property(e => e.Csoftware).HasColumnName("csoftware");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cusuario");

                entity.Property(e => e.Fdesinstalacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesinstalacion");

                entity.Property(e => e.Finstalacion)
                    .HasColumnType("datetime")
                    .HasColumnName("finstalacion");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.NserieEquipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_equipo");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");
            });

            modelBuilder.Entity<InvParte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_parte");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dparte)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dparte");

                entity.Property(e => e.Fingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");

                entity.Property(e => e.Gmodelo).HasColumnName("gmodelo");

                entity.Property(e => e.GtipoParte).HasColumnName("gtipo_parte");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("ncapacidad");

                entity.Property(e => e.NserieFabricante)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_fabricante");

                entity.Property(e => e.NserieParte)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_parte");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvParteH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_parte_h");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dparte)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dparte");

                entity.Property(e => e.Fingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");

                entity.Property(e => e.Gmodelo).HasColumnName("gmodelo");

                entity.Property(e => e.GtipoParte).HasColumnName("gtipo_parte");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("decimal(10, 4)")
                    .HasColumnName("ncapacidad");

                entity.Property(e => e.NserieFabricante)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_fabricante");

                entity.Property(e => e.NserieParte)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_parte");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvParteResponsable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_parte_responsable");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fbaja)
                    .HasColumnType("datetime")
                    .HasColumnName("fbaja");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoParte).HasColumnName("gtipo_parte");

                entity.Property(e => e.NserieParte)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_parte");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvParteResponsableH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_parte_responsable_h");

                entity.Property(e => e.Calmacen).HasColumnName("calmacen");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Fasignacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fasignacion");

                entity.Property(e => e.Fbaja)
                    .HasColumnType("datetime")
                    .HasColumnName("fbaja");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoParte).HasColumnName("gtipo_parte");

                entity.Property(e => e.NserieParte)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nserie_parte");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvProvisional>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_provisional");

                entity.Property(e => e.Dcase)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcase");

                entity.Property(e => e.Dfactura)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dfactura");

                entity.Property(e => e.DhardDisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dhard_disk");

                entity.Property(e => e.Dimpresora)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dimpresora");

                entity.Property(e => e.DimpresoraModelo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dimpresora_modelo");

                entity.Property(e => e.DimpresoraSerie)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dimpresora_serie");

                entity.Property(e => e.Dlocal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dlocal");

                entity.Property(e => e.DmemoryRam)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dmemory_ram");

                entity.Property(e => e.Dmodelo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dmodelo");

                entity.Property(e => e.Dmonitor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dmonitor");

                entity.Property(e => e.DmonitorModelo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dmonitor_modelo");

                entity.Property(e => e.DmonitorSerie)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dmonitor_serie");

                entity.Property(e => e.Dmouse)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dmouse");

                entity.Property(e => e.DmouseModelo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dmouse_modelo");

                entity.Property(e => e.DmouseSerie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dmouse_serie");

                entity.Property(e => e.Dnic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dnic");

                entity.Property(e => e.Dpoliza)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dpoliza");

                entity.Property(e => e.Dprocesador)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dprocesador");

                entity.Property(e => e.Dserie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dserie");

                entity.Property(e => e.Dteclado)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dteclado");

                entity.Property(e => e.DtecladoModelo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dteclado_modelo");

                entity.Property(e => e.DtecladoSerie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dteclado_serie");

                entity.Property(e => e.Dubicacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dubicacion");

                entity.Property(e => e.Dunidad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dunidad");

                entity.Property(e => e.DunidadCd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dunidad_cd");

                entity.Property(e => e.Dusuario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dusuario");
            });

            modelBuilder.Entity<InvTercero>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_tercero");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Dtercero)
                    .IsRequired()
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("dtercero");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Stercero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("stercero");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<InvTerceroH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("inv_tercero_h");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctercero).HasColumnName("ctercero");

                entity.Property(e => e.Dtercero)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("dtercero");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Stercero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("stercero");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<IsEnvioAdmisionLetra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("is_envio_admision_letras");

                entity.Property(e => e.Cletra)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cletra")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Letra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("letra")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Isi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("isis");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano")
                    .IsFixedLength(true);

                entity.Property(e => e.Autor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("autor")
                    .IsFixedLength(true);

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ciudad")
                    .IsFixedLength(true);

                entity.Property(e => e.Coleccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("coleccion")
                    .IsFixedLength(true);

                entity.Property(e => e.Curso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("curso")
                    .IsFixedLength(true);

                entity.Property(e => e.Descriptor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("descriptor")
                    .IsFixedLength(true);

                entity.Property(e => e.Edicion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("edicion")
                    .IsFixedLength(true);

                entity.Property(e => e.Editora)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("editora")
                    .IsFixedLength(true);

                entity.Property(e => e.Editorial)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("editorial")
                    .IsFixedLength(true);

                entity.Property(e => e.Ejemplar)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ejemplar")
                    .IsFixedLength(true);

                entity.Property(e => e.En)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("en")
                    .IsFixedLength(true);

                entity.Property(e => e.Ingreso)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Ncassettes)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ncassettes")
                    .IsFixedLength(true);

                entity.Property(e => e.Ncdodk)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ncdodk")
                    .IsFixedLength(true);

                entity.Property(e => e.Notas)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("notas")
                    .IsFixedLength(true);

                entity.Property(e => e.Nro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nro")
                    .IsFixedLength(true);

                entity.Property(e => e.Nslides)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nslides")
                    .IsFixedLength(true);

                entity.Property(e => e.Nvideos)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nvideos")
                    .IsFixedLength(true);

                entity.Property(e => e.Paginas)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("paginas")
                    .IsFixedLength(true);

                entity.Property(e => e.Profesor)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("profesor")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Titulo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("titulo")
                    .IsFixedLength(true);

                entity.Property(e => e.Tmaterial)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tmaterial")
                    .IsFixedLength(true);

                entity.Property(e => e.Tomo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tomo")
                    .IsFixedLength(true);

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ubicacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ItemCsir>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("item_csir");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Danio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("danio");

                entity.Property(e => e.Dautins)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dautins");

                entity.Property(e => e.Dautper)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dautper");

                entity.Property(e => e.Dciudad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dciudad");

                entity.Property(e => e.Ddescri)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ddescri");

                entity.Property(e => e.Dedicion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dedicion");

                entity.Property(e => e.Deditor)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("deditor");

                entity.Property(e => e.Dingres)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dingres");

                entity.Property(e => e.Dinventario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dinventario");

                entity.Property(e => e.Dnotas)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dnotas");

                entity.Property(e => e.Dpagina)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dpagina");

                entity.Property(e => e.Dtitser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dtitser");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Dubica)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dubica");
            });

            modelBuilder.Entity<Juanf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("juanf");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<Judakai>(entity =>
            {
                entity.HasKey(e => e.Cjudakai)
                    .HasName("PK__judakai__49F1DA0C396C44F7");

                entity.ToTable("judakai");

                entity.Property(e => e.Cjudakai).HasColumnName("cjudakai");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CfacultadProf).HasColumnName("cfacultad_prof");

                entity.Property(e => e.Cingreso).HasColumnName("cingreso");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprofesor)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dprofesor");
            });

            modelBuilder.Entity<Junior>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("junior");

                entity.Property(e => e.Cclave)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuario)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cusuario")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<KinePasantium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("kine_pasantia");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<LectoraC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lectora_c");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Choja).HasColumnName("choja");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.NchequeoHoja).HasColumnName("nchequeo_hoja");

                entity.Property(e => e.NchequeoVerifica).HasColumnName("nchequeo_verifica");

                entity.Property(e => e.Ngrupo).HasColumnName("ngrupo");

                entity.Property(e => e.Nlectura).HasColumnName("nlectura");

                entity.Property(e => e.Npagina).HasColumnName("npagina");

                entity.Property(e => e.NpaginaTotal).HasColumnName("npagina_total");

                entity.Property(e => e.Nsnota).HasColumnName("nsnota");

                entity.Property(e => e.NsnotaHoja).HasColumnName("nsnota_hoja");

                entity.Property(e => e.Nverifica).HasColumnName("nverifica");
            });

            modelBuilder.Entity<LectoraD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lectora_d");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Choja).HasColumnName("choja");

                entity.Property(e => e.GestadoNota).HasColumnName("gestado_nota");

                entity.Property(e => e.GpaseNota).HasColumnName("gpase_nota");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<LectoraT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lectora_t");

                entity.Property(e => e.Choja).HasColumnName("choja");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.NchequeoHoja).HasColumnName("nchequeo_hoja");

                entity.Property(e => e.NchequeoVerifica).HasColumnName("nchequeo_verifica");

                entity.Property(e => e.Ndigito1)
                    .IsRequired()
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("ndigito1")
                    .IsFixedLength(true);

                entity.Property(e => e.Ndigito2)
                    .IsRequired()
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("ndigito2")
                    .IsFixedLength(true);

                entity.Property(e => e.Ngrupo).HasColumnName("ngrupo");

                entity.Property(e => e.Nlectura).HasColumnName("nlectura");

                entity.Property(e => e.Nverifica).HasColumnName("nverifica");

                entity.Property(e => e.Observa)
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("observa")
                    .IsFixedLength(true);

                entity.Property(e => e.Snota).HasColumnName("snota");

                entity.Property(e => e.Tdato)
                    .IsRequired()
                    .HasMaxLength(160)
                    .IsUnicode(false)
                    .HasColumnName("tdato")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<LhNotahist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lh_notahist");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_ID");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<Libreria>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("librerias");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Daruta)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("daruta");

                entity.Property(e => e.Dlibreria)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dlibreria");

                entity.Property(e => e.Druta)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("druta");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Librerium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("libreria");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Clibreria).HasColumnName("clibreria");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dlibreria)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dlibreria");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Tobjeto)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto");
            });

            modelBuilder.Entity<LibroReclamoWeb>(entity =>
            {
                entity.HasKey(e => e.IdReclamo);

                entity.ToTable("libro_reclamo_web");

                entity.Property(e => e.IdReclamo).HasColumnName("idReclamo");

                entity.Property(e => e.Archivo)
                    .HasColumnType("image")
                    .HasColumnName("archivo");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(50)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Correo)
                    .HasMaxLength(50)
                    .HasColumnName("correo");

                entity.Property(e => e.DReclamo)
                    .HasMaxLength(2000)
                    .HasColumnName("dReclamo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ip)
                    .HasMaxLength(50)
                    .HasColumnName("ip");

                entity.Property(e => e.Nombreyapellido)
                    .HasMaxLength(350)
                    .HasColumnName("nombreyapellido");

                entity.Property(e => e.Ntelefono)
                    .HasMaxLength(50)
                    .HasColumnName("ntelefono");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(150)
                    .HasColumnName("tarchivo");

                entity.Property(e => e.Treclamo).HasColumnName("treclamo");
            });

            modelBuilder.Entity<LibroRecomendadoDocente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("libro_recomendado_docente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Libroid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("libroid");

                entity.Property(e => e.Tdato)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tdato");
            });

            modelBuilder.Entity<LiveEdu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("live_edu");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcarga)
                    .HasColumnType("datetime")
                    .HasColumnName("fcarga");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("stipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Local>(entity =>
            {
                entity.HasKey(e => e.Clocal)
                    .HasName("PK__local__617C500E");

                entity.ToTable("local");

                entity.Property(e => e.Clocal)
                    .ValueGeneratedNever()
                    .HasColumnName("clocal");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Corige)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dlocal)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dlocal");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Slocal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("slocal");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");
            });

            modelBuilder.Entity<LogEnviarAviso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("log_enviar_aviso");

                entity.Property(e => e.AvisoEnviado).HasColumnName("aviso_enviado");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.NroSemanaAcademico).HasColumnName("nro_semana_academico");
            });

            modelBuilder.Entity<LogEnviarCorreo>(entity =>
            {
                entity.HasKey(e => e.Clog);

                entity.ToTable("log_enviar_correo");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Correo)
                    .HasMaxLength(50)
                    .HasColumnName("correo");

                entity.Property(e => e.CorreoOtro)
                    .HasMaxLength(50)
                    .HasColumnName("correo_otro");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(50)
                    .HasColumnName("telefono");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(50)
                    .HasColumnName("tipo");

                entity.Property(e => e.TipoCorreo)
                    .HasMaxLength(50)
                    .HasColumnName("tipo_correo");
            });

            modelBuilder.Entity<LogEnviarCorreoUnidum>(entity =>
            {
                entity.HasKey(e => e.IdCorreo)
                    .HasName("PK__log_envi__D5CABEB3B9D6231C");

                entity.ToTable("log_enviar_correo_unida");

                entity.Property(e => e.IdCorreo).HasColumnName("id_correo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cenvio).HasColumnName("cenvio");

                entity.Property(e => e.Ctanda).HasColumnName("ctanda");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(250)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<LogFichado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("log_fichado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");
            });

            modelBuilder.Entity<LogImpresione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("log_impresiones");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cusuario");

                entity.Property(e => e.DtipoImpresion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_impresion");

                entity.Property(e => e.Fimpresion)
                    .HasColumnType("datetime")
                    .HasColumnName("fimpresion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<LoginRegistroApp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("login_registro_app");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Nombre).HasMaxLength(150);

                entity.Property(e => e.Pass)
                    .HasMaxLength(50)
                    .HasColumnName("pass");

                entity.Property(e => e.Susuario)
                    .HasMaxLength(50)
                    .HasColumnName("susuario")
                    .HasComment("los usuarios deben comenzar con una V de vigilante o una P de Pasante");
            });

            modelBuilder.Entity<Ly22Aluno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly22_aluno");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.AnoIngresso)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_INGRESSO");

                entity.Property(e => e.Anoconcl2g)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANOCONCL_2G");

                entity.Property(e => e.Areacnpq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREACNPQ");

                entity.Property(e => e.Candidato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CANDIDATO");

                entity.Property(e => e.Cidade2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIDADE_2G");

                entity.Property(e => e.CodCartao)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARTAO");

                entity.Property(e => e.Concurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CONCURSO");

                entity.Property(e => e.CredEducativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRED_EDUCATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.CursoAnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CURSO_ANT");

                entity.Property(e => e.Discipoutraserie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPOUTRASERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.DtIngresso)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INGRESSO");

                entity.Property(e => e.EMailInterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_INTERNO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeConjuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_CONJUGE");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.ObsAlunoFinan)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_ALUNO_FINAN");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.Pais2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_2G");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.RefAlunoAnt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF_ALUNO_ANT");

                entity.Property(e => e.RepresentanteTurma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE_TURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.SemIngresso)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEM_INGRESSO");

                entity.Property(e => e.SenhaSem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_SEM");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitAluno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_ALUNO");

                entity.Property(e => e.SitAprov)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIT_APROV")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoIngresso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_INGRESSO");

                entity.Property(e => e.TurmaPref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA_PREF");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UnidadeFisica)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_FISICA");
            });

            modelBuilder.Entity<Ly2Aluno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_aluno");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.AnoIngresso)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_INGRESSO");

                entity.Property(e => e.Anoconcl2g)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANOCONCL_2G");

                entity.Property(e => e.Areacnpq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREACNPQ");

                entity.Property(e => e.Candidato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CANDIDATO");

                entity.Property(e => e.Cidade2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIDADE_2G");

                entity.Property(e => e.CodCartao)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARTAO");

                entity.Property(e => e.Concurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CONCURSO");

                entity.Property(e => e.CredEducativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRED_EDUCATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.CursoAnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CURSO_ANT");

                entity.Property(e => e.Discipoutraserie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPOUTRASERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.DtIngresso)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INGRESSO");

                entity.Property(e => e.EMailInterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_INTERNO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeConjuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_CONJUGE");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.ObsAlunoFinan)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_ALUNO_FINAN");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.Pais2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_2G");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.RefAlunoAnt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF_ALUNO_ANT");

                entity.Property(e => e.RepresentanteTurma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE_TURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.SemIngresso)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEM_INGRESSO");

                entity.Property(e => e.SenhaSem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_SEM");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitAluno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_ALUNO");

                entity.Property(e => e.SitAprov)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIT_APROV")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoIngresso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_INGRESSO");

                entity.Property(e => e.TurmaPref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA_PREF");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UnidadeFisica)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_FISICA");
            });

            modelBuilder.Entity<Ly2Curso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_curso");

                entity.Property(e => e.Apelido)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APELIDO");

                entity.Property(e => e.Ativo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.CobranDisc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRAN_DISC")
                    .IsFixedLength(true);

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.CursoAssociado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO_ASSOCIADO");

                entity.Property(e => e.Decreto)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DECRETO");

                entity.Property(e => e.Depto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.DtDou)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_DOU");

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaculdadeAssociada)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE_ASSOCIADA");

                entity.Property(e => e.Formatura)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FORMATURA")
                    .IsFixedLength(true);

                entity.Property(e => e.GrupoCurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_CURSO");

                entity.Property(e => e.Habilitacao)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HABILITACAO");

                entity.Property(e => e.InepAreaDeConhecimento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_AREA_DE_CONHECIMENTO");

                entity.Property(e => e.InepCurso)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_CURSO");

                entity.Property(e => e.InepDiplomaRec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INEP_DIPLOMA_REC")
                    .IsFixedLength(true);

                entity.Property(e => e.InepDiplomas)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("INEP_DIPLOMAS");

                entity.Property(e => e.InepDtdespachoCriacao)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTDESPACHO_CRIACAO");

                entity.Property(e => e.InepDtdespachoRec)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTDESPACHO_REC");

                entity.Property(e => e.InepDtdespachoRenov)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTDESPACHO_RENOV");

                entity.Property(e => e.InepDtfinalRec)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTFINAL_REC");

                entity.Property(e => e.InepDtinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTINICIO");

                entity.Property(e => e.InepDtpublRec)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTPUBL_REC");

                entity.Property(e => e.InepDtpublRenov)
                    .HasColumnType("datetime")
                    .HasColumnName("INEP_DTPUBL_RENOV");

                entity.Property(e => e.InepExtAlunosconcluintes)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSCONCLUINTES");

                entity.Property(e => e.InepExtAlunosexecutivos)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSEXECUTIVOS");

                entity.Property(e => e.InepExtAlunosgraduacao)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSGRADUACAO");

                entity.Property(e => e.InepExtAlunosmatriculados)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSMATRICULADOS");

                entity.Property(e => e.InepExtAlunosoutrasies)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSOUTRASIES");

                entity.Property(e => e.InepExtAlunosposgraduacao)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSPOSGRADUACAO");

                entity.Property(e => e.InepExtAlunosprofedbasica)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSPROFEDBASICA");

                entity.Property(e => e.InepExtAlunosprofliberais)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_ALUNOSPROFLIBERAIS");

                entity.Property(e => e.InepExtCargaHoraria)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("INEP_EXT_CARGA_HORARIA");

                entity.Property(e => e.InepExtDocentesies)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_DOCENTESIES");

                entity.Property(e => e.InepExtDocentesoutrasies)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_DOCENTESOUTRASIES");

                entity.Property(e => e.InepExtPessoascomunidade)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_PESSOASCOMUNIDADE");

                entity.Property(e => e.InepExtPessoasoutrasies)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_PESSOASOUTRASIES");

                entity.Property(e => e.InepExtServidoresies)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("INEP_EXT_SERVIDORESIES");

                entity.Property(e => e.InepGrau)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_GRAU");

                entity.Property(e => e.InepNivel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NIVEL");

                entity.Property(e => e.InepNumdespachoCriacao)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NUMDESPACHO_CRIACAO");

                entity.Property(e => e.InepNumdespachoRec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NUMDESPACHO_REC");

                entity.Property(e => e.InepNumdespachoRenov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NUMDESPACHO_RENOV");

                entity.Property(e => e.InepNumdocRec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NUMDOC_REC");

                entity.Property(e => e.InepNumdocRenov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_NUMDOC_RENOV");

                entity.Property(e => e.InepOcde)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_OCDE");

                entity.Property(e => e.InepPresencial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INEP_PRESENCIAL");

                entity.Property(e => e.InepQ01)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INEP_Q01");

                entity.Property(e => e.InepQ02)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INEP_Q02");

                entity.Property(e => e.InepQ03)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INEP_Q03");

                entity.Property(e => e.InepRegime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_REGIME");

                entity.Property(e => e.InepTipocursoextensao)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TIPOCURSOEXTENSAO");

                entity.Property(e => e.InepTipocursopos)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TIPOCURSOPOS");

                entity.Property(e => e.InepTipodocCriacao)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TIPODOC_CRIACAO");

                entity.Property(e => e.InepTipodocRec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TIPODOC_REC");

                entity.Property(e => e.InepTipodocRenov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TIPODOC_RENOV");

                entity.Property(e => e.InepTurno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TURNO");

                entity.Property(e => e.InepTurnooferta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_TURNOOFERTA");

                entity.Property(e => e.InepValidadeRec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_VALIDADE_REC");

                entity.Property(e => e.InepValidadeRenov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INEP_VALIDADE_RENOV");

                entity.Property(e => e.Kit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KIT");

                entity.Property(e => e.Mnemonico)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MNEMONICO");

                entity.Property(e => e.Modalidade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MODALIDADE");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME");

                entity.Property(e => e.NomeDiretor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DIRETOR");

                entity.Property(e => e.NomeSecretaria)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_SECRETARIA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.PortariaDiretor)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PORTARIA_DIRETOR");

                entity.Property(e => e.PortariaSecretaria)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PORTARIA_SECRETARIA");

                entity.Property(e => e.RgNumDiretor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM_DIRETOR");

                entity.Property(e => e.RgNumSecretaria)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM_SECRETARIA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TITULO");

                entity.Property(e => e.UsaSerieIdeal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("USA_SERIE_IDEAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Vagas)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("VAGAS");

                entity.Property(e => e.ValorCredAssocDisc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_CRED_ASSOC_DISC")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Ly2Disciplina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_disciplina");

                entity.Property(e => e.Ativa)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVA")
                    .IsFixedLength(true);

                entity.Property(e => e.AulasSemAtiv)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_ATIV");

                entity.Property(e => e.AulasSemAula)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_AULA");

                entity.Property(e => e.AulasSemLab)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_LAB");

                entity.Property(e => e.AulasSemanais)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEMANAIS");

                entity.Property(e => e.ConceitoMin1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_1");

                entity.Property(e => e.ConceitoMin2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_2");

                entity.Property(e => e.ConceitoMin3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_3");

                entity.Property(e => e.ConceitoMinEx)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX");

                entity.Property(e => e.ConceitoMinEx2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX_2");

                entity.Property(e => e.CopiaNotaSubturma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COPIA_NOTA_SUBTURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Depto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Estagio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTAGIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaltaDiaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FALTA_DIARIA")
                    .IsFixedLength(true);

                entity.Property(e => e.FormulaCa1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA1");

                entity.Property(e => e.FormulaCa2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA2");

                entity.Property(e => e.FormulaCa3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA3");

                entity.Property(e => e.FormulaEquiv)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_EQUIV");

                entity.Property(e => e.FormulaMf1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF1");

                entity.Property(e => e.FormulaMf2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF2");

                entity.Property(e => e.FormulaMf3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF3");

                entity.Property(e => e.FormulaPrereq)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_PREREQ");

                entity.Property(e => e.GrupoMedia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_MEDIA");

                entity.Property(e => e.GrupoNota)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_NOTA");

                entity.Property(e => e.HorasAtiv)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ATIV");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.HorasEstagio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ESTAGIO");

                entity.Property(e => e.HorasLab)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_LAB");

                entity.Property(e => e.NCasasDec)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC");

                entity.Property(e => e.NCasasDecMedia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC_MEDIA");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOME");

                entity.Property(e => e.NomeCompl)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NotaMax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX");

                entity.Property(e => e.NotaMaxMedia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX_MEDIA");

                entity.Property(e => e.PercPresmin)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("PERC_PRESMIN");

                entity.Property(e => e.Pim)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PIM")
                    .IsFixedLength(true);

                entity.Property(e => e.PrazoDivulgacao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("prazo_divulgacao");

                entity.Property(e => e.PrazoRevisao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PRAZO_REVISAO");

                entity.Property(e => e.PriorizaFreq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIZA_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.Servico)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERVICO");

                entity.Property(e => e.TemFreq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.TemNota)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_NOTA")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoNota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NOTA");

                entity.Property(e => e.TruncaMedia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRUNCA_MEDIA")
                    .IsFixedLength(true);

                entity.Property(e => e.VerificaHorario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VERIFICA_HORARIO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Ly2Docente1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_docente");

                entity.Property(e => e.Agencia)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("AGENCIA");

                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.AtuacaoProfis)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ATUACAO_PROFIS");

                entity.Property(e => e.Bairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAIRRO");

                entity.Property(e => e.Banco)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("BANCO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Celular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.Cep)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CEP");

                entity.Property(e => e.CgcEmp)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("CGC_EMP");

                entity.Property(e => e.CodLattes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COD_LATTES");

                entity.Property(e => e.ContaBanco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_BANCO");

                entity.Property(e => e.ContratoTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONTRATO_TRABALHO");

                entity.Property(e => e.Cpf)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CPF");

                entity.Property(e => e.CprofDataexp)
                    .HasColumnType("datetime")
                    .HasColumnName("CPROF_DATAEXP");

                entity.Property(e => e.CprofNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_NUM");

                entity.Property(e => e.CprofSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_SERIE");

                entity.Property(e => e.CprofUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_UF");

                entity.Property(e => e.Depto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.DtAdmissao)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ADMISSAO");

                entity.Property(e => e.DtHabilitDol)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_HABILIT_DOL");

                entity.Property(e => e.DtNasc)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_NASC");

                entity.Property(e => e.DtUltTitulo)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULT_TITULO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EMailCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_COM");

                entity.Property(e => e.EMailEmp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_EMP");

                entity.Property(e => e.EndCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_COMPL");

                entity.Property(e => e.EndNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("END_NUM");

                entity.Property(e => e.Endcom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM");

                entity.Property(e => e.EndcomBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_BAIRRO");

                entity.Property(e => e.EndcomCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_CEP");

                entity.Property(e => e.EndcomCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_COMPL");

                entity.Property(e => e.EndcomMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_MUNICIPIO");

                entity.Property(e => e.EndcomNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_NUM");

                entity.Property(e => e.EndcomPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_PAIS");

                entity.Property(e => e.Endemp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP");

                entity.Property(e => e.EndempBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_BAIRRO");

                entity.Property(e => e.EndempCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_CEP");

                entity.Property(e => e.EndempCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_COMPL");

                entity.Property(e => e.EndempMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_MUNICIPIO");

                entity.Property(e => e.EndempNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_NUM");

                entity.Property(e => e.Endereco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDERECO");

                entity.Property(e => e.EstCivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EST_CIVIL")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaxCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_COM");

                entity.Property(e => e.FaxEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_EMP");

                entity.Property(e => e.FaxRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_RES");

                entity.Property(e => e.FecharTurmaInternet)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("fechar_turma_internet")
                    .IsFixedLength(true);

                entity.Property(e => e.Fone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE");

                entity.Property(e => e.FoneCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_COM");

                entity.Property(e => e.FoneEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_EMP");

                entity.Property(e => e.HabTac)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HAB_TAC");

                entity.Property(e => e.Mailbox)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MAILBOX");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeEmpresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EMPRESA");

                entity.Property(e => e.NomeMeio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_MEIO");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Obs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.PaisRes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_RES");

                entity.Property(e => e.PercDedicMens)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PERC_DEDIC_MENS");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.Pispasep)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PISPASEP");

                entity.Property(e => e.PrimeiroNome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRIMEIRO_NOME");

                entity.Property(e => e.RazaoSocial)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RAZAO_SOCIAL");

                entity.Property(e => e.Re)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RE");

                entity.Property(e => e.RegimeTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REGIME_TRABALHO");

                entity.Property(e => e.RgDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("RG_DTEXP");

                entity.Property(e => e.RgEmissor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_EMISSOR");

                entity.Property(e => e.RgNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM");

                entity.Property(e => e.RgTipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_TIPO");

                entity.Property(e => e.RgUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RG_UF");

                entity.Property(e => e.SenhaDol)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_DOL");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXO")
                    .IsFixedLength(true);

                entity.Property(e => e.Sobrenome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SOBRENOME");

                entity.Property(e => e.TipoPessoa)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PESSOA");

                entity.Property(e => e.Titulacao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULACAO");

                entity.Property(e => e.UrlParticular)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PARTICULAR");

                entity.Property(e => e.UrlProfissional)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PROFISSIONAL");
            });

            modelBuilder.Entity<Ly2Grade>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_grade");

                entity.Property(e => e.AulasSemAtiv)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_ATIV");

                entity.Property(e => e.AulasSemAula)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_AULA");

                entity.Property(e => e.AulasSemLab)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_LAB");

                entity.Property(e => e.AulasSemanais)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEMANAIS");

                entity.Property(e => e.Complemento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPLEMENTO");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DisciplinaExtensiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA_EXTENSIVA");

                entity.Property(e => e.FormulaEquiv)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_EQUIV");

                entity.Property(e => e.FormulaPrereq)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_PREREQ");

                entity.Property(e => e.MaxMatrAprov)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("MAX_MATR_APROV");

                entity.Property(e => e.MaxReprov)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("MAX_REPROV");

                entity.Property(e => e.NomeExibicao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EXIBICAO");

                entity.Property(e => e.Obrigatoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OBRIGATORIA")
                    .IsFixedLength(true);

                entity.Property(e => e.RetemSerie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RETEM_SERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.SerieIdeal)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_IDEAL");

                entity.Property(e => e.SeriePrereq)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_PREREQ");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<Ly2Hismat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_hismat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly2Hismat0909>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_hismat0909");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly2Hismat9>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_hismat9");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly2HorAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_hor_aula");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Aula)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("AULA");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Curso)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Dependencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPENDENCIA");

                entity.Property(e => e.DiaSemana)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("DIA_SEMANA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.Frequencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FREQUENCIA");

                entity.Property(e => e.HorafimAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAFIM_AULA");

                entity.Property(e => e.HorainiAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAINI_AULA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<Ly2Mat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_mat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CobrancaSep)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.ConceitoFim)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_FIM");

                entity.Property(e => e.ConceitoFimNum)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CONCEITO_FIM_NUM");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtInsercao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_insercao");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.Obs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.PercPresfim)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESFIM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.SerieCalculo)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_CALCULO");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SitMatricula)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SIT_MATRICULA");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.TotAulas)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("TOT_AULAS");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly2Notahist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_notahist");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_ID");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<Ly2Notahist0909>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_notahist0909");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_ID");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<Ly2Notum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_nota");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Formulario)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("FORMULARIO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Prova)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PROVA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly2Pessoa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_pessoa");

                entity.Property(e => e.AlistCsm)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ALIST_CSM");

                entity.Property(e => e.AlistDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("ALIST_DTEXP");

                entity.Property(e => e.AlistNum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ALIST_NUM");

                entity.Property(e => e.AlistRm)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ALIST_RM");

                entity.Property(e => e.AlistSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ALIST_SERIE");

                entity.Property(e => e.AreaProf)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("AREA_PROF");

                entity.Property(e => e.AutorizaEnvioMail)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTORIZA_ENVIO_MAIL")
                    .IsFixedLength(true);

                entity.Property(e => e.Bairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAIRRO");

                entity.Property(e => e.Cargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CARGO");

                entity.Property(e => e.Celular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.Cep)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CEP");

                entity.Property(e => e.CertNascCartorioExped)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CERT_NASC_CARTORIO_EXPED");

                entity.Property(e => e.CertNascCartorioUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CERT_NASC_CARTORIO_UF");

                entity.Property(e => e.CertNascEmissao)
                    .HasColumnType("datetime")
                    .HasColumnName("CERT_NASC_EMISSAO");

                entity.Property(e => e.CertNascFolha)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CERT_NASC_FOLHA");

                entity.Property(e => e.CertNascLivro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CERT_NASC_LIVRO");

                entity.Property(e => e.CertNascNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CERT_NASC_NUM");

                entity.Property(e => e.ConselhoRegional)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONSELHO_REGIONAL");

                entity.Property(e => e.CorRaca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COR_RACA");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpf)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CPF");

                entity.Property(e => e.CprofDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("CPROF_DTEXP");

                entity.Property(e => e.CprofNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_NUM");

                entity.Property(e => e.CprofSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_SERIE");

                entity.Property(e => e.CprofUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_UF");

                entity.Property(e => e.CrCat)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CR_CAT");

                entity.Property(e => e.CrCsm)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CR_CSM");

                entity.Property(e => e.CrDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("CR_DTEXP");

                entity.Property(e => e.CrNum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CR_NUM");

                entity.Property(e => e.CrRm)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CR_RM");

                entity.Property(e => e.CrSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CR_SERIE");

                entity.Property(e => e.DividaBiblio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DIVIDA_BIBLIO")
                    .IsFixedLength(true);

                entity.Property(e => e.DtFalecimento)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FALECIMENTO");

                entity.Property(e => e.DtNasc)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_NASC");

                entity.Property(e => e.EMail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EMailCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_COM");

                entity.Property(e => e.EMailInterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_INTERNO");

                entity.Property(e => e.EndCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_COMPL");

                entity.Property(e => e.EndCorreto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("END_CORRETO")
                    .IsFixedLength(true);

                entity.Property(e => e.EndMunicipio)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("END_MUNICIPIO");

                entity.Property(e => e.EndNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("END_NUM");

                entity.Property(e => e.EndPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_PAIS");

                entity.Property(e => e.Endcom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM");

                entity.Property(e => e.EndcomBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_BAIRRO");

                entity.Property(e => e.EndcomCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_CEP");

                entity.Property(e => e.EndcomCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_COMPL");

                entity.Property(e => e.EndcomMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_MUNICIPIO");

                entity.Property(e => e.EndcomNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_NUM");

                entity.Property(e => e.EndcomPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_PAIS");

                entity.Property(e => e.Endereco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDERECO");

                entity.Property(e => e.Especializacao)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIALIZACAO");

                entity.Property(e => e.EstCivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EST_CIVIL");

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FaxRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_RES");

                entity.Property(e => e.Fone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE");

                entity.Property(e => e.FoneCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_COM");

                entity.Property(e => e.FoneRecados)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_RECADOS");

                entity.Property(e => e.HabTac)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HAB_TAC");

                entity.Property(e => e.HabTacData)
                    .HasColumnType("datetime")
                    .HasColumnName("HAB_TAC_DATA");

                entity.Property(e => e.Mailbox)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MAILBOX");

                entity.Property(e => e.MunicipioNasc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO_NASC");

                entity.Property(e => e.Nacionalidade)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NACIONALIDADE");

                entity.Property(e => e.NecessidadeEspecial)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NECESSIDADE_ESPECIAL");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeConjuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_CONJUGE");

                entity.Property(e => e.NomeEmpresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EMPRESA");

                entity.Property(e => e.NomeMae)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_MAE");

                entity.Property(e => e.NomePai)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_PAI");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Obs)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.PaisNasc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_NASC");

                entity.Property(e => e.Passaporte)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PASSAPORTE");

                entity.Property(e => e.Permiteacescadsemsenha)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PERMITEACESCADSEMSENHA")
                    .IsFixedLength(true);

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.Profissao)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROFISSAO");

                entity.Property(e => e.RendaMensal)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("RENDA_MENSAL");

                entity.Property(e => e.RespBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESP_BAIRRO");

                entity.Property(e => e.RespCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RESP_CEP");

                entity.Property(e => e.RespCpf)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("RESP_CPF");

                entity.Property(e => e.RespEndCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESP_END_COMPL");

                entity.Property(e => e.RespEndMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESP_END_MUNICIPIO");

                entity.Property(e => e.RespEndNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_END_NUM");

                entity.Property(e => e.RespEndPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESP_END_PAIS");

                entity.Property(e => e.RespEndereco)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESP_ENDERECO");

                entity.Property(e => e.RespEstCivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("RESP_EST_CIVIL")
                    .IsFixedLength(true);

                entity.Property(e => e.RespFone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("RESP_FONE");

                entity.Property(e => e.RespMunicipioNasc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESP_MUNICIPIO_NASC");

                entity.Property(e => e.RespNacionalidade)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_NACIONALIDADE");

                entity.Property(e => e.RespNomeCompl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RESP_NOME_COMPL");

                entity.Property(e => e.RespRgEmissor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_RG_EMISSOR");

                entity.Property(e => e.RespRgNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_RG_NUM");

                entity.Property(e => e.RespRgTipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_RG_TIPO");

                entity.Property(e => e.RespRgUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RESP_RG_UF");

                entity.Property(e => e.RespSenha)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("RESP_SENHA");

                entity.Property(e => e.RespSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RESP_SEXO")
                    .IsFixedLength(true);

                entity.Property(e => e.RgDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("RG_DTEXP");

                entity.Property(e => e.RgEmissor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_EMISSOR");

                entity.Property(e => e.RgNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM");

                entity.Property(e => e.RgTipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_TIPO");

                entity.Property(e => e.RgUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RG_UF");

                entity.Property(e => e.SenhaTac)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_TAC");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXO")
                    .IsFixedLength(true);

                entity.Property(e => e.TeleitorDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("TELEITOR_DTEXP");

                entity.Property(e => e.TeleitorMun)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEITOR_MUN");

                entity.Property(e => e.TeleitorNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEITOR_NUM");

                entity.Property(e => e.TeleitorSecao)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEITOR_SECAO");

                entity.Property(e => e.TeleitorZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEITOR_ZONA");
            });

            modelBuilder.Entity<Ly2Turma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly2_turma");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.ConceitoMin1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_1");

                entity.Property(e => e.ConceitoMin2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_2");

                entity.Property(e => e.ConceitoMin3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_3");

                entity.Property(e => e.ConceitoMinEx)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX");

                entity.Property(e => e.ConceitoMinEx2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX_2");

                entity.Property(e => e.Curriculo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.Dependencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPENDENCIA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.Especial)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIAL")
                    .IsFixedLength(true);

                entity.Property(e => e.ExibeSomenteListaSel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXIBE_SOMENTE_LISTA_SEL")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FormulaCa1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA1");

                entity.Property(e => e.FormulaCa2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA2");

                entity.Property(e => e.FormulaCa3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA3");

                entity.Property(e => e.FormulaMf1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF1");

                entity.Property(e => e.FormulaMf2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF2");

                entity.Property(e => e.FormulaMf3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF3");

                entity.Property(e => e.LancamentoHistorico)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LANCAMENTO_HISTORICO")
                    .IsFixedLength(true);

                entity.Property(e => e.MinAulas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("MIN_AULAS");

                entity.Property(e => e.Nivel)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NumAlunos)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_ALUNOS");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitTurma)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_TURMA");

                entity.Property(e => e.TemHorario)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_HORARIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UltNumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ULT_NUM_CHAMADA");

                entity.Property(e => e.UnidadeResponsavel)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_RESPONSAVEL");

                entity.Property(e => e.UtilizaIndice)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UTILIZA_INDICE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Ly2docente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_2docente");

                entity.Property(e => e.Agencia)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("AGENCIA");

                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.AtuacaoProfis)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ATUACAO_PROFIS");

                entity.Property(e => e.Bairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAIRRO");

                entity.Property(e => e.Banco)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("BANCO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Celular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.Cep)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CEP");

                entity.Property(e => e.CgcEmp)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("CGC_EMP");

                entity.Property(e => e.CodLattes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COD_LATTES");

                entity.Property(e => e.ContaBanco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_BANCO");

                entity.Property(e => e.ContratoTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONTRATO_TRABALHO");

                entity.Property(e => e.Cpf)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CPF");

                entity.Property(e => e.CprofDataexp)
                    .HasColumnType("datetime")
                    .HasColumnName("CPROF_DATAEXP");

                entity.Property(e => e.CprofNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_NUM");

                entity.Property(e => e.CprofSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_SERIE");

                entity.Property(e => e.CprofUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_UF");

                entity.Property(e => e.Depto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.DtAdmissao)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ADMISSAO");

                entity.Property(e => e.DtHabilitDol)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_HABILIT_DOL");

                entity.Property(e => e.DtNasc)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_NASC");

                entity.Property(e => e.DtUltTitulo)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULT_TITULO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EMailCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_COM");

                entity.Property(e => e.EMailEmp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_EMP");

                entity.Property(e => e.EndCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_COMPL");

                entity.Property(e => e.EndNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("END_NUM");

                entity.Property(e => e.Endcom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM");

                entity.Property(e => e.EndcomBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_BAIRRO");

                entity.Property(e => e.EndcomCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_CEP");

                entity.Property(e => e.EndcomCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_COMPL");

                entity.Property(e => e.EndcomMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_MUNICIPIO");

                entity.Property(e => e.EndcomNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_NUM");

                entity.Property(e => e.EndcomPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_PAIS");

                entity.Property(e => e.Endemp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP");

                entity.Property(e => e.EndempBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_BAIRRO");

                entity.Property(e => e.EndempCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_CEP");

                entity.Property(e => e.EndempCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_COMPL");

                entity.Property(e => e.EndempMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_MUNICIPIO");

                entity.Property(e => e.EndempNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_NUM");

                entity.Property(e => e.Endereco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDERECO");

                entity.Property(e => e.EstCivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EST_CIVIL")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaxCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_COM");

                entity.Property(e => e.FaxEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_EMP");

                entity.Property(e => e.FaxRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_RES");

                entity.Property(e => e.FecharTurmaInternet)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("fechar_turma_internet")
                    .IsFixedLength(true);

                entity.Property(e => e.Fone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE");

                entity.Property(e => e.FoneCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_COM");

                entity.Property(e => e.FoneEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_EMP");

                entity.Property(e => e.HabTac)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HAB_TAC");

                entity.Property(e => e.Mailbox)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MAILBOX");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeEmpresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EMPRESA");

                entity.Property(e => e.NomeMeio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_MEIO");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Obs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.PaisRes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_RES");

                entity.Property(e => e.PercDedicMens)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PERC_DEDIC_MENS");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.Pispasep)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PISPASEP");

                entity.Property(e => e.PrimeiroNome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRIMEIRO_NOME");

                entity.Property(e => e.RazaoSocial)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RAZAO_SOCIAL");

                entity.Property(e => e.Re)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RE");

                entity.Property(e => e.RegimeTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REGIME_TRABALHO");

                entity.Property(e => e.RgDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("RG_DTEXP");

                entity.Property(e => e.RgEmissor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_EMISSOR");

                entity.Property(e => e.RgNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM");

                entity.Property(e => e.RgTipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_TIPO");

                entity.Property(e => e.RgUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RG_UF");

                entity.Property(e => e.SenhaDol)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_DOL");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXO")
                    .IsFixedLength(true);

                entity.Property(e => e.Sobrenome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SOBRENOME");

                entity.Property(e => e.TipoPessoa)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PESSOA");

                entity.Property(e => e.Titulacao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULACAO");

                entity.Property(e => e.UrlParticular)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PARTICULAR");

                entity.Property(e => e.UrlProfissional)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PROFISSIONAL");
            });

            modelBuilder.Entity<Ly3Hismat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly3_hismat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<Ly3Notahist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly3_notahist");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_ID");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<LyAluno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_aluno");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.AnoIngresso)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_INGRESSO");

                entity.Property(e => e.Anoconcl2g)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANOCONCL_2G");

                entity.Property(e => e.Areacnpq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREACNPQ");

                entity.Property(e => e.Candidato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CANDIDATO");

                entity.Property(e => e.Cidade2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIDADE_2G");

                entity.Property(e => e.CodCartao)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARTAO");

                entity.Property(e => e.Concurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CONCURSO");

                entity.Property(e => e.CredEducativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRED_EDUCATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.CursoAnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CURSO_ANT");

                entity.Property(e => e.Discipoutraserie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPOUTRASERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.DtIngresso)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INGRESSO");

                entity.Property(e => e.EMailInterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_INTERNO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeConjuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_CONJUGE");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.ObsAlunoFinan)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_ALUNO_FINAN");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.Pais2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_2G");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.RefAlunoAnt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF_ALUNO_ANT");

                entity.Property(e => e.RepresentanteTurma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE_TURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.SemIngresso)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEM_INGRESSO");

                entity.Property(e => e.SenhaSem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_SEM");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitAluno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_ALUNO");

                entity.Property(e => e.SitAprov)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIT_APROV")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoIngresso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_INGRESSO");

                entity.Property(e => e.TurmaPref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA_PREF");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UnidadeFisica)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_FISICA");
            });

            modelBuilder.Entity<LyAlunoNoAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_aluno_no_ap");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.AnoIngresso)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_INGRESSO");

                entity.Property(e => e.Anoconcl2g)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANOCONCL_2G");

                entity.Property(e => e.Areacnpq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREACNPQ");

                entity.Property(e => e.Candidato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CANDIDATO");

                entity.Property(e => e.Cidade2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIDADE_2G");

                entity.Property(e => e.CodCartao)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARTAO");

                entity.Property(e => e.Concurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CONCURSO");

                entity.Property(e => e.CredEducativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRED_EDUCATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.CursoAnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CURSO_ANT");

                entity.Property(e => e.Discipoutraserie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPOUTRASERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.DtIngresso)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INGRESSO");

                entity.Property(e => e.EMailInterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_INTERNO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeConjuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_CONJUGE");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.ObsAlunoFinan)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_ALUNO_FINAN");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.Pais2g)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_2G");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.RefAlunoAnt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF_ALUNO_ANT");

                entity.Property(e => e.RepresentanteTurma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE_TURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.SemIngresso)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEM_INGRESSO");

                entity.Property(e => e.SenhaSem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_SEM");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitAluno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_ALUNO");

                entity.Property(e => e.SitAprov)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIT_APROV")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoIngresso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_INGRESSO");

                entity.Property(e => e.TurmaPref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA_PREF");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UnidadeFisica)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_FISICA");
            });

            modelBuilder.Entity<LyDisciplina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_disciplina");

                entity.Property(e => e.Ativa)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVA")
                    .IsFixedLength(true);

                entity.Property(e => e.AulasSemAtiv)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_ATIV");

                entity.Property(e => e.AulasSemAula)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_AULA");

                entity.Property(e => e.AulasSemLab)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_LAB");

                entity.Property(e => e.AulasSemanais)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEMANAIS");

                entity.Property(e => e.ConceitoMin1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_1");

                entity.Property(e => e.ConceitoMin2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_2");

                entity.Property(e => e.ConceitoMin3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_3");

                entity.Property(e => e.ConceitoMinEx)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX");

                entity.Property(e => e.ConceitoMinEx2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX_2");

                entity.Property(e => e.CopiaNotaSubturma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COPIA_NOTA_SUBTURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Depto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Estagio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTAGIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaltaDiaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FALTA_DIARIA")
                    .IsFixedLength(true);

                entity.Property(e => e.FormulaCa1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA1");

                entity.Property(e => e.FormulaCa2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA2");

                entity.Property(e => e.FormulaCa3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA3");

                entity.Property(e => e.FormulaEquiv)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_EQUIV");

                entity.Property(e => e.FormulaMf1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF1");

                entity.Property(e => e.FormulaMf2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF2");

                entity.Property(e => e.FormulaMf3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF3");

                entity.Property(e => e.FormulaPrereq)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_PREREQ");

                entity.Property(e => e.GrupoMedia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_MEDIA");

                entity.Property(e => e.GrupoNota)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_NOTA");

                entity.Property(e => e.HorasAtiv)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ATIV");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.HorasEstagio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ESTAGIO");

                entity.Property(e => e.HorasLab)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_LAB");

                entity.Property(e => e.NCasasDec)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC");

                entity.Property(e => e.NCasasDecMedia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC_MEDIA");

                entity.Property(e => e.Nome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME");

                entity.Property(e => e.NomeCompl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NotaMax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX");

                entity.Property(e => e.NotaMaxMedia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX_MEDIA");

                entity.Property(e => e.PercPresmin)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("PERC_PRESMIN");

                entity.Property(e => e.Pim)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PIM")
                    .IsFixedLength(true);

                entity.Property(e => e.PrazoDivulgacao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("prazo_divulgacao");

                entity.Property(e => e.PrazoRevisao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PRAZO_REVISAO");

                entity.Property(e => e.PriorizaFreq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIZA_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.Servico)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERVICO");

                entity.Property(e => e.TemFreq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.TemNota)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_NOTA")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoNota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NOTA");

                entity.Property(e => e.TruncaMedia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRUNCA_MEDIA")
                    .IsFixedLength(true);

                entity.Property(e => e.VerificaHorario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VERIFICA_HORARIO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<LyDocente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_docente");

                entity.Property(e => e.Agencia)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("AGENCIA");

                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.AtuacaoProfis)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ATUACAO_PROFIS");

                entity.Property(e => e.Bairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAIRRO");

                entity.Property(e => e.Banco)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("BANCO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Celular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.Cep)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CEP");

                entity.Property(e => e.CgcEmp)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("CGC_EMP");

                entity.Property(e => e.CodLattes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COD_LATTES");

                entity.Property(e => e.ContaBanco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_BANCO");

                entity.Property(e => e.ContratoTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONTRATO_TRABALHO");

                entity.Property(e => e.Cpf)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CPF");

                entity.Property(e => e.CprofDataexp)
                    .HasColumnType("datetime")
                    .HasColumnName("CPROF_DATAEXP");

                entity.Property(e => e.CprofNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_NUM");

                entity.Property(e => e.CprofSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_SERIE");

                entity.Property(e => e.CprofUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPROF_UF");

                entity.Property(e => e.Depto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.DtAdmissao)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ADMISSAO");

                entity.Property(e => e.DtHabilitDol)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_HABILIT_DOL");

                entity.Property(e => e.DtNasc)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_NASC");

                entity.Property(e => e.DtUltTitulo)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULT_TITULO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EMailCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_COM");

                entity.Property(e => e.EMailEmp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_EMP");

                entity.Property(e => e.EndCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_COMPL");

                entity.Property(e => e.EndNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("END_NUM");

                entity.Property(e => e.Endcom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM");

                entity.Property(e => e.EndcomBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_BAIRRO");

                entity.Property(e => e.EndcomCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_CEP");

                entity.Property(e => e.EndcomCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_COMPL");

                entity.Property(e => e.EndcomMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_MUNICIPIO");

                entity.Property(e => e.EndcomNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_NUM");

                entity.Property(e => e.EndcomPais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDCOM_PAIS");

                entity.Property(e => e.Endemp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP");

                entity.Property(e => e.EndempBairro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_BAIRRO");

                entity.Property(e => e.EndempCep)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_CEP");

                entity.Property(e => e.EndempCompl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_COMPL");

                entity.Property(e => e.EndempMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_MUNICIPIO");

                entity.Property(e => e.EndempNum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENDEMP_NUM");

                entity.Property(e => e.Endereco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENDERECO");

                entity.Property(e => e.EstCivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EST_CIVIL")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaxCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_COM");

                entity.Property(e => e.FaxEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_EMP");

                entity.Property(e => e.FaxRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FAX_RES");

                entity.Property(e => e.FecharTurmaInternet)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("fechar_turma_internet")
                    .IsFixedLength(true);

                entity.Property(e => e.Fone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE");

                entity.Property(e => e.FoneCom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_COM");

                entity.Property(e => e.FoneEmp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONE_EMP");

                entity.Property(e => e.HabTac)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HAB_TAC");

                entity.Property(e => e.Mailbox)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MAILBOX");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.NomeAbrev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_ABREV");

                entity.Property(e => e.NomeCompl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NomeEmpresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EMPRESA");

                entity.Property(e => e.NomeMeio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOME_MEIO");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Obs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.ObsTelCom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_COM");

                entity.Property(e => e.ObsTelRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TEL_RES");

                entity.Property(e => e.OutraFaculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OUTRA_FACULDADE");

                entity.Property(e => e.PaisRes)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAIS_RES");

                entity.Property(e => e.PercDedicMens)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PERC_DEDIC_MENS");

                entity.Property(e => e.Pessoa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PESSOA");

                entity.Property(e => e.Pispasep)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PISPASEP");

                entity.Property(e => e.PrimeiroNome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRIMEIRO_NOME");

                entity.Property(e => e.RazaoSocial)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RAZAO_SOCIAL");

                entity.Property(e => e.Re)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RE");

                entity.Property(e => e.RegimeTrabalho)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REGIME_TRABALHO");

                entity.Property(e => e.RgDtexp)
                    .HasColumnType("datetime")
                    .HasColumnName("RG_DTEXP");

                entity.Property(e => e.RgEmissor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_EMISSOR");

                entity.Property(e => e.RgNum)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_NUM");

                entity.Property(e => e.RgTipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RG_TIPO");

                entity.Property(e => e.RgUf)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RG_UF");

                entity.Property(e => e.SenhaDol)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SENHA_DOL");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXO")
                    .IsFixedLength(true);

                entity.Property(e => e.Sobrenome)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SOBRENOME");

                entity.Property(e => e.TipoPessoa)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PESSOA");

                entity.Property(e => e.Titulacao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULACAO");

                entity.Property(e => e.UrlParticular)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PARTICULAR");

                entity.Property(e => e.UrlProfissional)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URL_PROFISSIONAL");
            });

            modelBuilder.Entity<LyFaltaHistmatr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_falta_histmatr");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Faltas)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("FALTAS");

                entity.Property(e => e.FreqId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("FREQ_ID");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<LyFaltum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_falta");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Faltas)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("FALTAS");

                entity.Property(e => e.FaltasCompensadas)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("FALTAS_COMPENSADAS");

                entity.Property(e => e.Freq)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("FREQ");

                entity.Property(e => e.Periodo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PERIODO");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<LyGrade>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_grade");

                entity.Property(e => e.AulasSemAtiv)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_ATIV");

                entity.Property(e => e.AulasSemAula)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_AULA");

                entity.Property(e => e.AulasSemLab)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_LAB");

                entity.Property(e => e.AulasSemanais)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEMANAIS");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Complemento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPLEMENTO");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DisciplinaExtensiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA_EXTENSIVA");

                entity.Property(e => e.FormulaEquiv)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_EQUIV");

                entity.Property(e => e.FormulaPrereq)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_PREREQ");

                entity.Property(e => e.MaxMatrAprov)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("MAX_MATR_APROV");

                entity.Property(e => e.MaxReprov)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("MAX_REPROV");

                entity.Property(e => e.NomeExibicao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOME_EXIBICAO");

                entity.Property(e => e.Obrigatoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OBRIGATORIA")
                    .IsFixedLength(true);

                entity.Property(e => e.RetemSerie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RETEM_SERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.SerieIdeal)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_IDEAL");

                entity.Property(e => e.SeriePrereq)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_PREREQ");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<LyHismat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_hismat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<LyHorAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_hor_aula");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Aula)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("AULA");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Curso)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Dependencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPENDENCIA");

                entity.Property(e => e.DiaSemana)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("DIA_SEMANA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.Frequencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FREQUENCIA");

                entity.Property(e => e.HorafimAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAFIM_AULA");

                entity.Property(e => e.HorainiAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAINI_AULA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<LyMat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_mat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CobrancaSep)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.ConceitoFim)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_FIM");

                entity.Property(e => e.ConceitoFimNum)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CONCEITO_FIM_NUM");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtInsercao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_insercao");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.Obs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS");

                entity.Property(e => e.PercPresfim)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESFIM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.SerieCalculo)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE_CALCULO");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SitMatricula)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SIT_MATRICULA");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.TotAulas)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("TOT_AULAS");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<LyNotahist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_notahist");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_ID");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<LyNotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_nota");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Compareceu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPARECEU")
                    .IsFixedLength(true);

                entity.Property(e => e.Conceito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO");

                entity.Property(e => e.Data)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Formulario)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("FORMULARIO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.Prova)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PROVA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<LyTurma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_turma");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.ConceitoMin1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_1");

                entity.Property(e => e.ConceitoMin2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_2");

                entity.Property(e => e.ConceitoMin3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_3");

                entity.Property(e => e.ConceitoMinEx)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX");

                entity.Property(e => e.ConceitoMinEx2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX_2");

                entity.Property(e => e.Curriculo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.Curso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURSO");

                entity.Property(e => e.Dependencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPENDENCIA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.Especial)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIAL")
                    .IsFixedLength(true);

                entity.Property(e => e.ExibeSomenteListaSel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXIBE_SOMENTE_LISTA_SEL")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FormulaCa1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA1");

                entity.Property(e => e.FormulaCa2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA2");

                entity.Property(e => e.FormulaCa3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA3");

                entity.Property(e => e.FormulaMf1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF1");

                entity.Property(e => e.FormulaMf2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF2");

                entity.Property(e => e.FormulaMf3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF3");

                entity.Property(e => e.LancamentoHistorico)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LANCAMENTO_HISTORICO")
                    .IsFixedLength(true);

                entity.Property(e => e.MinAulas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("MIN_AULAS");

                entity.Property(e => e.Nivel)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NumAlunos)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_ALUNOS");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitTurma)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIT_TURMA");

                entity.Property(e => e.TemHorario)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_HORARIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UltNumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ULT_NUM_CHAMADA");

                entity.Property(e => e.UnidadeResponsavel)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIDADE_RESPONSAVEL");

                entity.Property(e => e.UtilizaIndice)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UTILIZA_INDICE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<LyTurmaNadie>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ly_turma_nadie");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Aula)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("AULA");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Curso)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("curso");

                entity.Property(e => e.Dependencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPENDENCIA");

                entity.Property(e => e.DiaSemana)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("DIA_SEMANA");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.Frequencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FREQUENCIA");

                entity.Property(e => e.HorafimAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAFIM_AULA");

                entity.Property(e => e.HorainiAula)
                    .HasColumnType("datetime")
                    .HasColumnName("HORAINI_AULA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<LyhHismat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lyh_hismat");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALUNO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_DADAS");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("AULAS_PREVISTAS");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COBRANCA_SEP")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_FIM");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_INICIO");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_MATRICULA");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTALT");

                entity.Property(e => e.GrupoEletiva)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_ELETIVA");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("LANC_DEB");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_PRESENCA");

                entity.Property(e => e.NomeDiscOrig)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOME_DISC_ORIG");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_FINAL");

                entity.Property(e => e.NumChamada)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_CHAMADA");

                entity.Property(e => e.NumFunc)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("NUM_FUNC");

                entity.Property(e => e.Observacao)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACAO");

                entity.Property(e => e.Ordem)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEM");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("PERC_PRESENCA");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SERIE");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIT_DETALHE");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SITUACAO_HIST");

                entity.Property(e => e.Subturma1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA1");

                entity.Property(e => e.Subturma2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUBTURMA2");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURMA");
            });

            modelBuilder.Entity<ManualArchivo>(entity =>
            {
                entity.ToTable("manual_archivo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Manual)
                    .HasColumnType("image")
                    .HasColumnName("manual");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.TipoArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("tipo_archivo");
            });

            modelBuilder.Entity<ManualControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("manual_control");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(510)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(510)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(510)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(510)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fecha)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(510)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tentrega)
                    .HasMaxLength(510)
                    .HasColumnName("tentrega");
            });

            modelBuilder.Entity<Marca2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("marca2");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.FinalAsist)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("final_asist");

                entity.Property(e => e.FinalProg)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("final_prog");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IniAsist)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ini_asist");

                entity.Property(e => e.IniProg)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ini_prog");

                entity.Property(e => e.MinAntes).HasColumnName("min_antes");

                entity.Property(e => e.MinTarde).HasColumnName("min_tarde");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Profe)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profe");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<Marcacione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("marcaciones");

                entity.HasIndex(e => new { e.Saccion, e.Cprofesor, e.Fecha }, "i05_pro_asis_saccion_pro");

                entity.HasIndex(e => e.Cid, "iu01_marcaciones")
                    .IsUnique();

                entity.HasIndex(e => new { e.Tbarra, e.Fecha }, "iumarca")
                    .IsUnique();

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cid");

                entity.Property(e => e.Cod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cod");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.IdProfesorAsistProcesado).HasColumnName("id_profesor_asist_procesado");

                entity.Property(e => e.Saccion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saccion");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<Marcaciones2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("marcaciones2");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cid");

                entity.Property(e => e.Cod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cod");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.IdProfesorAsistProcesado).HasColumnName("id_profesor_asist_procesado");

                entity.Property(e => e.Saccion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saccion");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<Marcacionesfoto>(entity =>
            {
                entity.HasKey(e => e.Cid);

                entity.ToTable("marcacionesfoto");

                entity.Property(e => e.Cid)
                    .ValueGeneratedNever()
                    .HasColumnName("cid");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Pcnumero).HasColumnName("pcnumero");

                entity.Property(e => e.Tfoto)
                    .HasColumnType("image")
                    .HasColumnName("tfoto");
            });

            modelBuilder.Entity<Material>(entity =>
            {
                entity.HasKey(e => e.Cmaterial);

                entity.ToTable("material");

                entity.Property(e => e.Cmaterial).HasColumnName("cmaterial");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.BinArchivo)
                    .HasColumnType("image")
                    .HasColumnName("bin_archivo");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CmodificacionEstado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_estado");

                entity.Property(e => e.CmodificacionFechaLimite)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_fecha_limite");

                entity.Property(e => e.CmodificacionMover)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_mover");

                entity.Property(e => e.CmodificacionReferencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_referencia");

                entity.Property(e => e.Competencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("competencia");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Estado)
                    .HasColumnName("estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaLimite)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_limite");

                entity.Property(e => e.FmodificacionEstado)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_estado");

                entity.Property(e => e.FmodificacionFechaLimite)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_fecha_limite");

                entity.Property(e => e.FmodificacionMover)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_mover");

                entity.Property(e => e.FmodificacionReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_referencia");

                entity.Property(e => e.Link1)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link1");

                entity.Property(e => e.Link2)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link2");

                entity.Property(e => e.Link3)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link3");

                entity.Property(e => e.Link4)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link4");

                entity.Property(e => e.Ntamano)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("ntamano");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("referencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("semestre");

                entity.Property(e => e.Sugerencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("sugerencia");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo");

                entity.Property(e => e.Tdescripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdescripcion");

                entity.Property(e => e.TiempoTarea).HasColumnName("tiempo_tarea");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(100)
                    .HasColumnName("tipo");

                entity.Property(e => e.TipoMaterial).HasColumnName("tipo_material");

                entity.Property(e => e.TipoTarea).HasColumnName("tipo_tarea");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<MaterialDtipoTarea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("material_dtipo_tarea");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.DtipoTarea)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("dtipo_tarea");

                entity.Property(e => e.Orden).HasColumnName("orden");

                entity.Property(e => e.TipoTarea).HasColumnName("tipo_tarea");
            });

            modelBuilder.Entity<MaterialH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("material_h");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.BinArchivo)
                    .HasColumnType("image")
                    .HasColumnName("bin_archivo");

                entity.Property(e => e.Calumno)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmaterial).HasColumnName("cmaterial");

                entity.Property(e => e.CmodificacionEstado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_estado");

                entity.Property(e => e.CmodificacionFechaLimite)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_fecha_limite");

                entity.Property(e => e.CmodificacionMover)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_mover");

                entity.Property(e => e.CmodificacionReferencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_referencia");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FechaLimite)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_limite");

                entity.Property(e => e.FmodificacionEstado)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_estado");

                entity.Property(e => e.FmodificacionFechaLimite)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_fecha_limite");

                entity.Property(e => e.FmodificacionMover)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_mover");

                entity.Property(e => e.FmodificacionReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_referencia");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Link1)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link1");

                entity.Property(e => e.Link2)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link2");

                entity.Property(e => e.Link3)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link3");

                entity.Property(e => e.Link4)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("link4");

                entity.Property(e => e.Ntamano)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("ntamano");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("referencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .HasColumnName("scurso");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("semestre");

                entity.Property(e => e.Tarchivo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tarchivo");

                entity.Property(e => e.Tdescripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdescripcion");

                entity.Property(e => e.TiempoTarea).HasColumnName("tiempo_tarea");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tipo");

                entity.Property(e => e.TipoMaterial).HasColumnName("tipo_material");

                entity.Property(e => e.TipoTarea).HasColumnName("tipo_tarea");
            });

            modelBuilder.Entity<MateriasHorario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("materias_horarios");

                entity.Property(e => e.Caula)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("caula");

                entity.Property(e => e.Ccurso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ccurso");

                entity.Property(e => e.Cmodalidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cmodalidad");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Daula)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("daula");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Horafin)
                    .HasColumnType("datetime")
                    .HasColumnName("horafin");

                entity.Property(e => e.Horainicio)
                    .HasColumnType("datetime")
                    .HasColumnName("horainicio");

                entity.Property(e => e.IdMaterias)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_materias");

                entity.Property(e => e.Nciclo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("nciclo");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ndia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Turno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("turno");
            });

            modelBuilder.Entity<Materium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("materia");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmateria).HasColumnName("cmateria");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmateria)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dmateria");

                entity.Property(e => e.Smateria)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smateria");
            });

            modelBuilder.Entity<Matricula>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ntransaccion })
                    .HasName("PK__matricula__012A0591");

                entity.ToTable("matricula");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ntransaccion }, "matricula_01");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno, e.Gestado }, "matricula_02");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoMatricula).HasColumnName("gtipo_matricula");

                entity.Property(e => e.Hproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("hproceso");

                entity.Property(e => e.Hregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("hregistro");

                entity.Property(e => e.Nip)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.QcursosMatri).HasColumnName("qcursos_matri");

                entity.Property(e => e.Tmensaje)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tmensaje");
            });

            modelBuilder.Entity<MatriculaAlumnoCurpend>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("matricula_alumno_curpend");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.NcursosAprob).HasColumnName("ncursos_aprob");

                entity.Property(e => e.NcursosPend).HasColumnName("ncursos_pend");
            });

            modelBuilder.Entity<MatriculaAlumnoCurpend1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("matricula_alumno_curpend1");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.NcursosAprob).HasColumnName("ncursos_aprob");

                entity.Property(e => e.NcursosPend).HasColumnName("ncursos_pend");
            });

            modelBuilder.Entity<MatriculaAlumnoTurno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("matricula_alumno_turno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dia1)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("dia1");

                entity.Property(e => e.Dia2)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("dia2");

                entity.Property(e => e.Dia3)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("dia3");

                entity.Property(e => e.Dia4)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("dia4");

                entity.Property(e => e.Hora)
                    .HasColumnType("datetime")
                    .HasColumnName("hora");
            });

            modelBuilder.Entity<MatriculaCalculo>(entity =>
            {
                entity.HasKey(e => new { e.Ntransaccion, e.Calumno, e.Ccurso })
                    .HasName("PK__matricula_calculo");

                entity.ToTable("matricula_calculo");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GestadoFicha).HasColumnName("gestado_ficha");

                entity.Property(e => e.GtipoCalculo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_calculo");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Icredito)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("icredito");

                entity.Property(e => e.Itotal)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("itotal");

                entity.Property(e => e.NcredReal).HasColumnName("ncred_real");

                entity.Property(e => e.StipoPrecio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("stipo_precio");

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<MatriculaControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("matricula_control");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NcreditosLim).HasColumnName("ncreditos_lim");

                entity.Property(e => e.NcursosLim).HasColumnName("ncursos_lim");
            });

            modelBuilder.Entity<MatriculaCurso>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ntransaccion, e.Ccurso })
                    .HasName("PK__matricula_curso__021E29CA");

                entity.ToTable("matricula_curso");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ntransaccion }, "matricula_curso_01");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno, e.Ccurso }, "matricula_curso_02");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nvez).HasColumnName("nvez");
            });

            modelBuilder.Entity<MatriculaCursoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("matricula_curso_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Nvez).HasColumnName("nvez");
            });

            modelBuilder.Entity<MatriculaCursoValidum>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccurso, e.Calumno })
                    .HasName("PK_Matricula_curso_valida");

                entity.ToTable("matricula_curso_valida");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gtipo)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gtipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Mdbcarrera>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mdbcarrera");

                entity.Property(e => e.ApellidoMat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("apellido_mat");

                entity.Property(e => e.ApellidosPat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("apellidos_pat");

                entity.Property(e => e.Carrera).HasColumnName("carrera");

                entity.Property(e => e.Celular)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celular");

                entity.Property(e => e.Ciudad).HasColumnName("ciudad");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.CodForm)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cod_form")
                    .IsFixedLength(true);

                entity.Property(e => e.CodOc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cod_oc")
                    .IsFixedLength(true);

                entity.Property(e => e.ColegioCol).HasColumnName("colegio_col");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Conectado).HasColumnName("conectado");

                entity.Property(e => e.Dconectado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dconectado");

                entity.Property(e => e.Departamento).HasColumnName("departamento");

                entity.Property(e => e.Departamentotrab).HasColumnName("departamentotrab");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Distrito).HasColumnName("distrito");

                entity.Property(e => e.Distritotrab).HasColumnName("distritotrab");

                entity.Property(e => e.Edad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("edad");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Empresatrab)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("empresatrab");

                entity.Property(e => e.Entero)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entero");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("fax");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gcolegio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gcolegio");

                entity.Property(e => e.Gingresastes)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gingresastes");

                entity.Property(e => e.Gtercio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gtercio");

                entity.Property(e => e.Gtrabajas)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gtrabajas");

                entity.Property(e => e.IdPost).HasColumnName("id_post");

                entity.Property(e => e.InformacionR)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("informacion_r");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacompanantes).HasColumnName("nacompanantes");

                entity.Property(e => e.Nombres)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombres");

                entity.Property(e => e.OrigenForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("origen_form");

                entity.Property(e => e.Pagina)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pagina")
                    .IsFixedLength(true);

                entity.Property(e => e.Pais).HasColumnName("pais");

                entity.Property(e => e.Paistrab).HasColumnName("paistrab");

                entity.Property(e => e.Programa).HasColumnName("programa");

                entity.Property(e => e.Provincia).HasColumnName("provincia");

                entity.Property(e => e.Provinciatrab).HasColumnName("provinciatrab");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("telefono");
            });

            modelBuilder.Entity<Mdbcarrera0>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mdbcarrera0");

                entity.Property(e => e.ApellidoMat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("apellido_mat");

                entity.Property(e => e.ApellidosPat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("apellidos_pat");

                entity.Property(e => e.Carrera).HasColumnName("carrera");

                entity.Property(e => e.Celular)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celular");

                entity.Property(e => e.Ciudad).HasColumnName("ciudad");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.CodForm)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cod_form")
                    .IsFixedLength(true);

                entity.Property(e => e.CodOc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cod_oc")
                    .IsFixedLength(true);

                entity.Property(e => e.ColegioCol).HasColumnName("colegio_col");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Conectado).HasColumnName("conectado");

                entity.Property(e => e.Dconectado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dconectado");

                entity.Property(e => e.Departamento).HasColumnName("departamento");

                entity.Property(e => e.Departamentotrab).HasColumnName("departamentotrab");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Distrito).HasColumnName("distrito");

                entity.Property(e => e.Distritotrab).HasColumnName("distritotrab");

                entity.Property(e => e.Edad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("edad");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Empresatrab)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("empresatrab");

                entity.Property(e => e.Entero)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entero");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("fax");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gcolegio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gcolegio");

                entity.Property(e => e.Gingresastes)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gingresastes");

                entity.Property(e => e.Gtercio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gtercio");

                entity.Property(e => e.Gtrabajas)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("gtrabajas");

                entity.Property(e => e.IdPost).HasColumnName("id_post");

                entity.Property(e => e.InformacionR)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("informacion_r");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacompanantes).HasColumnName("nacompanantes");

                entity.Property(e => e.Nombres)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombres");

                entity.Property(e => e.OrigenForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("origen_form");

                entity.Property(e => e.Pagina)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pagina")
                    .IsFixedLength(true);

                entity.Property(e => e.Pais).HasColumnName("pais");

                entity.Property(e => e.Paistrab).HasColumnName("paistrab");

                entity.Property(e => e.Programa).HasColumnName("programa");

                entity.Property(e => e.Provincia).HasColumnName("provincia");

                entity.Property(e => e.Provinciatrab).HasColumnName("provinciatrab");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("telefono");
            });

            modelBuilder.Entity<Medicina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("medicina");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<MenuAcreditacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("menu_acreditacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(300)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Nivel).HasColumnName("nivel");

                entity.Property(e => e.Nivel1).HasColumnName("nivel1");

                entity.Property(e => e.Nivel2).HasColumnName("nivel2");

                entity.Property(e => e.Nivel3).HasColumnName("nivel3");

                entity.Property(e => e.Nivel4).HasColumnName("nivel4");

                entity.Property(e => e.Nivel5).HasColumnName("nivel5");

                entity.Property(e => e.Nivel6).HasColumnName("nivel6");

                entity.Property(e => e.Nivel7).HasColumnName("nivel7");

                entity.Property(e => e.Orden).HasColumnName("orden");

                entity.Property(e => e.Pictureindex).HasColumnName("pictureindex");

                entity.Property(e => e.Pid).HasColumnName("pid");

                entity.Property(e => e.Resumen)
                    .HasMaxLength(500)
                    .HasColumnName("resumen");

                entity.Property(e => e.Selectedpictureindex).HasColumnName("selectedpictureindex");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(500)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<MigrationHistory>(entity =>
            {
                entity.HasKey(e => new { e.MigrationId, e.ContextKey })
                    .HasName("PK_dbo.__MigrationHistory");

                entity.ToTable("__MigrationHistory");

                entity.Property(e => e.MigrationId).HasMaxLength(150);

                entity.Property(e => e.ContextKey).HasMaxLength(300);

                entity.Property(e => e.Model).IsRequired();

                entity.Property(e => e.ProductVersion)
                    .IsRequired()
                    .HasMaxLength(32);
            });

            modelBuilder.Entity<Miguel01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("miguel01");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cmovimiento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CMOVIMIENTO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fmovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FMOVIMIENTO");

                entity.Property(e => e.Fpublicacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FPUBLICACION");

                entity.Property(e => e.ImporteContenido)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_contenido");

                entity.Property(e => e.ImporteImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("importe_impuesto");

                entity.Property(e => e.NAlSaldo).HasColumnName("n_al_saldo");

                entity.Property(e => e.NcreditoNormal).HasColumnName("ncredito_normal");

                entity.Property(e => e.NcreditoPasante).HasColumnName("ncredito_pasante");

                entity.Property(e => e.Ndiferencial).HasColumnName("NDIFERENCIAL");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO");

                entity.Property(e => e.Nsumar).HasColumnName("NSUMAR");

                entity.Property(e => e.PorcImpuesto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("porc_impuesto");

                entity.Property(e => e.Scalculo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCALCULO");

                entity.Property(e => e.Sefecto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEFECTO");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.SorigenBeneficio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen_beneficio");

                entity.Property(e => e.Sresultado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.Property(e => e.Tmovimiento)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("TMOVIMIENTO");

                entity.Property(e => e.Trequerimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trequerimiento");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<Miguel03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("miguel03");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteD)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccomprobante_d");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<Mlgoperadoresinf>(entity =>
            {
                entity.ToTable("mlgoperadoresinf");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cedula).HasColumnName("cedula");

                entity.Property(e => e.Contrasenna).HasColumnName("contrasenna");

                entity.Property(e => e.Correo).HasColumnName("correo");

                entity.Property(e => e.NombreApellido).HasColumnName("nombreApellido");

                entity.Property(e => e.Telefono).HasColumnName("telefono");
            });

            modelBuilder.Entity<Mlgpvotante>(entity =>
            {
                entity.HasKey(e => e.Idvotante);

                entity.ToTable("mlgpvotante");

                entity.Property(e => e.Idvotante).HasColumnName("idvotante");

                entity.Property(e => e.Cedula).HasColumnName("cedula");

                entity.Property(e => e.Ciudad).HasColumnName("ciudad");

                entity.Property(e => e.Correo).HasColumnName("correo");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Idmlgope).HasColumnName("idmlgope");

                entity.Property(e => e.Img).HasColumnName("img");

                entity.Property(e => e.ImgFinalizado).HasColumnName("img_finalizado");

                entity.Property(e => e.Nombre).HasColumnName("nombre");

                entity.Property(e => e.Sexo).HasColumnName("sexo");

                entity.Property(e => e.Telefono).HasColumnName("telefono");
            });

            modelBuilder.Entity<Modalidad>(entity =>
            {
                entity.HasKey(e => e.Cmodalidad)
                    .HasName("PK__modalidad__7F8BD5E2");

                entity.ToTable("modalidad");

                entity.Property(e => e.Cmodalidad)
                    .ValueGeneratedNever()
                    .HasColumnName("cmodalidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmodalidad)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad");

                entity.Property(e => e.NcredPromPerio).HasColumnName("ncred_prom_perio");

                entity.Property(e => e.NcursoPromPerio).HasColumnName("ncurso_prom_perio");

                entity.Property(e => e.Smodalidad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smodalidad");
            });

            modelBuilder.Entity<Modulo>(entity =>
            {
                entity.HasKey(e => new { e.Caplicacion, e.Cmodulo })
                    .HasName("PK__modulo__613C58EC");

                entity.ToTable("modulo");

                entity.HasIndex(e => new { e.Caplicacion, e.Dmodulo }, "iu_modulo_dmodulo")
                    .IsUnique();

                entity.HasIndex(e => new { e.Caplicacion, e.Tobjeto }, "iu_modulo_tobjeto")
                    .IsUnique();

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dmodulo)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dmodulo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclaseModulo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gclase_modulo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoModulo).HasColumnName("gtipo_modulo");

                entity.Property(e => e.Ipublico)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ipublico")
                    .IsFixedLength(true);

                entity.Property(e => e.Nconcurrencia).HasColumnName("nconcurrencia");

                entity.Property(e => e.Tobjeto)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tobjeto");
            });

            modelBuilder.Entity<Monedum>(entity =>
            {
                entity.HasKey(e => e.Moneda);

                entity.ToTable("moneda");

                entity.Property(e => e.Moneda).HasColumnName("moneda");

                entity.Property(e => e.Abreviatura)
                    .HasMaxLength(50)
                    .HasColumnName("abreviatura");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .HasColumnName("nombre");

                entity.Property(e => e.Pais)
                    .HasMaxLength(100)
                    .HasColumnName("pais");

                entity.Property(e => e.Simbolo)
                    .HasMaxLength(50)
                    .HasColumnName("simbolo");
            });

            modelBuilder.Entity<Motivo>(entity =>
            {
                entity.HasKey(e => e.Cmotivo)
                    .HasName("PK_MOTIVO");

                entity.ToTable("motivo");

                entity.Property(e => e.Cmotivo)
                    .ValueGeneratedNever()
                    .HasColumnName("cmotivo");

                entity.Property(e => e.Dmotivo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dmotivo");
            });

            modelBuilder.Entity<Mtraba01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mtraba01");

                entity.Property(e => e.Ccargo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ccargo");

                entity.Property(e => e.Ccenrp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre");

                entity.Property(e => e.Cesciv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cesciv");

                entity.Property(e => e.Clccon)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("clccon");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cplanilla)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cplanilla");

                entity.Property(e => e.Csecci)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("csecci");

                entity.Property(e => e.Csegur)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("csegur");

                entity.Property(e => e.Csexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("csexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Csitua)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("csitua");

                entity.Property(e => e.Ctpper)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpper");

                entity.Property(e => e.Ctptra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctptra");

                entity.Property(e => e.Ctraba)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba");

                entity.Property(e => e.Cubigeo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cubigeo")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar");

                entity.Property(e => e.Dapmat)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dapmat");

                entity.Property(e => e.Dappat)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dappat");

                entity.Property(e => e.Ddrtra)
                    .HasMaxLength(130)
                    .IsUnicode(false)
                    .HasColumnName("ddrtra");

                entity.Property(e => e.Dnombr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dnombr");

                entity.Property(e => e.Dtraba)
                    .IsRequired()
                    .HasMaxLength(160)
                    .IsUnicode(false)
                    .HasColumnName("dtraba");

                entity.Property(e => e.Fnacim)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacim");

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Hingre)
                    .HasColumnType("datetime")
                    .HasColumnName("hingre");

                entity.Property(e => e.Hsalid)
                    .HasColumnType("datetime")
                    .HasColumnName("hsalid");

                entity.Property(e => e.Hvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("hvigen");

                entity.Property(e => e.Ndcide)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ndcide");

                entity.Property(e => e.Ntelef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelef");

                entity.Property(e => e.Ntelef2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelef2");

                entity.Property(e => e.Ntelef3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelef3");

                entity.Property(e => e.Qnhijo).HasColumnName("qnhijo");

                entity.Property(e => e.Straba)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("straba");

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen");
            });

            modelBuilder.Entity<NotaC>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso })
                    .HasName("PK__nota_c__4D005615");

                entity.ToTable("nota_c");

                entity.HasIndex(e => new { e.Calumno, e.Gaprobado, e.Ccurso }, "ii_nota_c_al_ap_cu");

                entity.HasIndex(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoAprobacion }, "ii_nota_c_tipoapro_al_pe_cu")
                    .HasFillFactor((byte)70);

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso }, "nota_c_01")
                    .IsUnique();

                entity.HasIndex(e => e.Calumno, "nota_c_alumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.CodigoPractica).HasColumnName("codigo_practica");

                entity.Property(e => e.CorigenConvalidacion).HasColumnName("corigen_convalidacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado)
                    .HasColumnName("gaprobado")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota)
                    .HasColumnName("nnota")
                    .HasComment("Guarda las notas del 1 al 5, segun el promedio obtenido");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Nvez2Real).HasColumnName("Nvez2_real");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.NotaCs)
                    .HasForeignKey(d => new { d.Calumno, d.Cperiodo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_nota_c_a_alumno_periodo");
            });

            modelBuilder.Entity<NotaC25102010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_25102010");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<NotaC3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c3");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<NotaC3mig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_3mig");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_h");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<NotaCMedicina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_medicina");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<NotaCMig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCMig0909>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig0909");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCMig09099>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig0909_9");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCMig09099dif>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig0909_9dif");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCMig09099difReup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig0909_9dif_reup");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<NotaCMig9>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig9");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCMigV0>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_c_mig_v0");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<NotaCredeb>(entity =>
            {
                entity.HasKey(e => new { e.CtipoNota, e.Ncredeb });

                entity.ToTable("nota_credeb");

                entity.Property(e => e.CtipoNota).HasColumnName("ctipo_nota");

                entity.Property(e => e.Ncredeb).HasColumnName("ncredeb");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmotivo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dmotivo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.Ibruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ibruto");

                entity.Property(e => e.Idscto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idscto");

                entity.Property(e => e.Itneto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("itneto");
            });

            modelBuilder.Entity<NotaCredebD>(entity =>
            {
                entity.HasKey(e => new { e.CtipoNota, e.Ncredeb, e.Cobligacion, e.Ccontenido });

                entity.ToTable("nota_credeb_d");

                entity.Property(e => e.CtipoNota).HasColumnName("ctipo_nota");

                entity.Property(e => e.Ncredeb).HasColumnName("ncredeb");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Itneto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("itneto");
            });

            modelBuilder.Entity<NotaCredebTipo>(entity =>
            {
                entity.HasKey(e => e.CtipoNota);

                entity.ToTable("nota_credeb_tipo");

                entity.Property(e => e.CtipoNota)
                    .ValueGeneratedNever()
                    .HasColumnName("ctipo_nota");

                entity.Property(e => e.Dtipo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dtipo");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<NotaD>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota })
                    .HasName("PK__nota_d__4DF47A4E");

                entity.ToTable("nota_d");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Ccurso }, "nota_d_01");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NnotaAcumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_acumulado");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.NotaDs)
                    .HasForeignKey(d => new { d.Cperiodo, d.Calumno, d.Ccurso })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_nota_d_a_nota_c");
            });

            modelBuilder.Entity<NotaD2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaD3mig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_3mig");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDAutorizacion>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Calumno, e.Ccurso, e.GtipoNota, e.Fmodificacion })
                    .HasName("PK_nota_d_autorizacion_1");

                entity.ToTable("nota_d_autorizacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.EstadoAutorizacion).HasColumnName("estado_autorizacion");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nautorizacion).HasColumnName("nautorizacion");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NnotaAcumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_acumulado");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NnotaAcumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_acumulado");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<NotaDMig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDMig0909>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig0909");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDMig09099>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig0909_9");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDMig09099dif>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig0909_9dif");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDMig09099difReup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig0909_9dif_reup");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<NotaDMig9>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nota_d_mig9");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<NotasPasantiaEnf20102>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("notas_pasantia_enf_2010_2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<Numerador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("numerador");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.DtipoNum)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_num");

                entity.Property(e => e.GtipoNum)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_num")
                    .IsFixedLength(true);

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");
            });

            modelBuilder.Entity<Objeto>(entity =>
            {
                entity.HasKey(e => e.Cobjeto)
                    .HasName("PK__objeto__505CB104");

                entity.ToTable("objeto");

                entity.HasIndex(e => e.Sobjeto, "iu_objeto_sobjeto")
                    .IsUnique();

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.CobjetoPadre).HasColumnName("cobjeto_padre");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fhingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.GformaAdquisicion).HasColumnName("gforma_adquisicion");

                entity.Property(e => e.Iprotegido).HasColumnName("iprotegido");

                entity.Property(e => e.Nacceso).HasColumnName("nacceso");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprocedencia)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tprocedencia");

                entity.HasOne(d => d.CclasificacionNavigation)
                    .WithMany(p => p.Objetos)
                    .HasForeignKey(d => d.Cclasificacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_objeto_a_clasificacion");
            });

            modelBuilder.Entity<ObjetoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("objeto_h");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.CobjetoPadre).HasColumnName("cobjeto_padre");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fhingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.GformaAdquisicion).HasColumnName("gforma_adquisicion");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Iprotegido).HasColumnName("iprotegido");

                entity.Property(e => e.Nacceso).HasColumnName("nacceso");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprocedencia)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tprocedencia");
            });

            modelBuilder.Entity<OldPersonaControlDatos2030306>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("old_persona_control_datos2_030306");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoTrabajo).HasColumnName("cdistrito_trabajo");

                entity.Property(e => e.CgiroNegocio).HasColumnName("cgiro_negocio");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaTrabajo).HasColumnName("cprovincia_trabajo");

                entity.Property(e => e.CtiempoServicio).HasColumnName("ctiempo_servicio");

                entity.Property(e => e.DcargoTrabajo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcargo_trabajo");

                entity.Property(e => e.Dempresa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dempresa");

                entity.Property(e => e.EmailTrabajo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("email_trabajo");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(40)
                    .HasColumnName("ntelefono1")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionEmpresa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_empresa");
            });

            modelBuilder.Entity<Opcione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("opciones");

                entity.Property(e => e.AplicCod).HasColumnName("APLIC_COD");

                entity.Property(e => e.Cid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CID");

                entity.Property(e => e.EstacCod).HasColumnName("ESTAC_COD");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_CREA");

                entity.Property(e => e.FechMod)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_MOD");

                entity.Property(e => e.OpcicAbrev)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OPCIC_ABREV");

                entity.Property(e => e.OpcicCod).HasColumnName("OPCIC_COD");

                entity.Property(e => e.OpcicCodpad).HasColumnName("OPCIC_CODPAD");

                entity.Property(e => e.OpcicD1).HasColumnName("OPCIC_D1");

                entity.Property(e => e.OpcicDes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPCIC_DES");

                entity.Property(e => e.OpcicFlamen).HasColumnName("OPCIC_FLAMEN");

                entity.Property(e => e.OpcicNiv).HasColumnName("OPCIC_NIV");

                entity.Property(e => e.OpcicNivPad).HasColumnName("OPCIC_NIV_PAD");

                entity.Property(e => e.OpcicNompag)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPCIC_NOMPAG");

                entity.Property(e => e.OpcicNumord).HasColumnName("OPCIC_NUMORD");

                entity.Property(e => e.OpcicObs)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("OPCIC_OBS");

                entity.Property(e => e.UsuCrea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USU_CREA");

                entity.Property(e => e.UsuMod)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USU_MOD");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");
            });

            modelBuilder.Entity<OsilFicha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("osil_ficha");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Pabellon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pabellon");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpabellon).HasColumnName("cpabellon");

                entity.Property(e => e.Dpabellon)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dpabellon");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Spabellon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spabellon");
            });

            modelBuilder.Entity<Paciente>(entity =>
            {
                entity.HasKey(e => e.Cpaciente)
                    .HasName("PK__paciente__1E8D3DF227586B36");

                entity.ToTable("paciente");

                entity.Property(e => e.Cpaciente)
                    .ValueGeneratedNever()
                    .HasColumnName("cpaciente");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.Pacientes)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_paciente_a_persona");
            });

            modelBuilder.Entity<PacmanResultado>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno });

                entity.ToTable("pacman_resultados");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Fcreacion).HasColumnType("date");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");
            });

            modelBuilder.Entity<Padron>(entity =>
            {
                entity.ToTable("padron");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(150)
                    .HasColumnName("apellido");

                entity.Property(e => e.CedCrud)
                    .HasMaxLength(150)
                    .HasColumnName("ced_crud");

                entity.Property(e => e.Cedula)
                    .HasMaxLength(150)
                    .HasColumnName("cedula");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(150)
                    .HasColumnName("direccion");

                entity.Property(e => e.Dis)
                    .HasMaxLength(150)
                    .HasColumnName("dis");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(150)
                    .HasColumnName("distrito");

                entity.Property(e => e.FecNaci)
                    .HasMaxLength(150)
                    .HasColumnName("fec_naci");

                entity.Property(e => e.Loc)
                    .HasMaxLength(150)
                    .HasColumnName("loc");

                entity.Property(e => e.LocalVotacion)
                    .HasMaxLength(150)
                    .HasColumnName("local_votacion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .HasColumnName("nombre");

                entity.Property(e => e.Partido)
                    .HasMaxLength(150)
                    .HasColumnName("partido");

                entity.Property(e => e.Sec)
                    .HasMaxLength(150)
                    .HasColumnName("sec");

                entity.Property(e => e.Seccional)
                    .HasMaxLength(150)
                    .HasColumnName("seccional");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(150)
                    .HasColumnName("sexo");

                entity.Property(e => e.VotoAbr)
                    .HasMaxLength(150)
                    .HasColumnName("voto_abr");

                entity.Property(e => e.VotoDic)
                    .HasMaxLength(150)
                    .HasColumnName("voto_dic");

                entity.Property(e => e.VotoJul)
                    .HasMaxLength(150)
                    .HasColumnName("voto_jul");

                entity.Property(e => e.VotoNov)
                    .HasMaxLength(150)
                    .HasColumnName("voto_nov");

                entity.Property(e => e.VotoOct)
                    .HasMaxLength(150)
                    .HasColumnName("voto_oct");
            });

            modelBuilder.Entity<Pagina>(entity =>
            {
                entity.HasKey(e => e.Cpagina)
                    .HasName("PK_paginas");

                entity.ToTable("pagina");

                entity.HasIndex(e => e.Cpagina, "IX_paginas");

                entity.Property(e => e.Cpagina).HasColumnName("cpagina");

                entity.Property(e => e.Descripcion).HasColumnName("descripcion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Nombre).HasColumnName("nombre");

                entity.Property(e => e.Orden).HasColumnName("orden");

                entity.Property(e => e.Padre).HasColumnName("padre");

                entity.Property(e => e.Url).HasColumnName("url");
            });

            modelBuilder.Entity<PagoExterno>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccarrera });

                entity.ToTable("pago_externo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("observacion");

                entity.Property(e => e.Pagorealizado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("pagorealizado");
            });

            modelBuilder.Entity<Pariente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pariente");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpariente).HasColumnName("cpariente");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpariente)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpariente");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.Gparentesco).HasColumnName("gparentesco");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GtipoTrabajo).HasColumnName("gtipo_trabajo");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral")
                    .IsFixedLength(true);

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Npuntaje).HasColumnName("npuntaje");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spariente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spariente");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");
            });

            modelBuilder.Entity<ParticipacionEstudiante>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("participacion_estudiantes");

                entity.Property(e => e.Alta)
                    .HasMaxLength(1)
                    .HasColumnName("alta");

                entity.Property(e => e.Baja)
                    .HasMaxLength(1)
                    .HasColumnName("baja");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Media)
                    .HasMaxLength(1)
                    .HasColumnName("media");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Participante>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("participante");

                entity.Property(e => e.Apellidos)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("apellidos")
                    .IsFixedLength(true);

                entity.Property(e => e.Fechanac)
                    .HasColumnType("datetime")
                    .HasColumnName("fechanac");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idartista).HasColumnName("idartista");

                entity.Property(e => e.InfOSist)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("inf_o_sist")
                    .IsFixedLength(true);

                entity.Property(e => e.NivelIngles)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nivel_ingles")
                    .IsFixedLength(true);

                entity.Property(e => e.Nombres)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nombres")
                    .IsFixedLength(true);

                entity.Property(e => e.Password)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("password")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Pasis2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pasis2");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<Paul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("paul");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.CconvenioNew).HasColumnName("cconvenio_new");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dturno)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("dturno");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");
            });

            modelBuilder.Entity<PaulCasos20092>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("paul_casos_20092");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso1");

                entity.Property(e => e.Dcurso2)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso2");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Scurso1)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso1");

                entity.Property(e => e.Scurso2)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso2");
            });

            modelBuilder.Entity<PaulCasos20101>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("paul_casos_20101");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso1).HasColumnName("ccurso1");

                entity.Property(e => e.Ccurso2).HasColumnName("ccurso2");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso1");

                entity.Property(e => e.Dcurso2)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso2");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Scurso1)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso1");

                entity.Property(e => e.Scurso2)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso2");
            });

            modelBuilder.Entity<Pbcatcol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pbcatcol");

                entity.HasIndex(e => new { e.PbcTnam, e.PbcOwnr, e.PbcCnam }, "pbcatcol_idx")
                    .IsUnique();

                entity.Property(e => e.PbcBmap)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbc_bmap")
                    .IsFixedLength(true);

                entity.Property(e => e.PbcCase).HasColumnName("pbc_case");

                entity.Property(e => e.PbcCid).HasColumnName("pbc_cid");

                entity.Property(e => e.PbcCmnt)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbc_cmnt");

                entity.Property(e => e.PbcCnam)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbc_cnam")
                    .IsFixedLength(true);

                entity.Property(e => e.PbcEdit)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("pbc_edit");

                entity.Property(e => e.PbcHdr)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbc_hdr");

                entity.Property(e => e.PbcHght).HasColumnName("pbc_hght");

                entity.Property(e => e.PbcHpos).HasColumnName("pbc_hpos");

                entity.Property(e => e.PbcInit)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbc_init");

                entity.Property(e => e.PbcJtfy).HasColumnName("pbc_jtfy");

                entity.Property(e => e.PbcLabl)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbc_labl");

                entity.Property(e => e.PbcLpos).HasColumnName("pbc_lpos");

                entity.Property(e => e.PbcMask)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("pbc_mask");

                entity.Property(e => e.PbcOwnr)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbc_ownr")
                    .IsFixedLength(true);

                entity.Property(e => e.PbcPtrn)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("pbc_ptrn");

                entity.Property(e => e.PbcTag)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbc_tag");

                entity.Property(e => e.PbcTid).HasColumnName("pbc_tid");

                entity.Property(e => e.PbcTnam)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbc_tnam")
                    .IsFixedLength(true);

                entity.Property(e => e.PbcWdth).HasColumnName("pbc_wdth");
            });

            modelBuilder.Entity<Pbcatedt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pbcatedt");

                entity.HasIndex(e => new { e.PbeName, e.PbeSeqn }, "pbcatedt_idx")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.PbeCntr).HasColumnName("pbe_cntr");

                entity.Property(e => e.PbeEdit)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbe_edit");

                entity.Property(e => e.PbeFlag).HasColumnName("pbe_flag");

                entity.Property(e => e.PbeName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbe_name");

                entity.Property(e => e.PbeSeqn).HasColumnName("pbe_seqn");

                entity.Property(e => e.PbeType).HasColumnName("pbe_type");

                entity.Property(e => e.PbeWork)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("pbe_work")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Pbcatfmt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pbcatfmt");

                entity.HasIndex(e => e.PbfName, "pbcatfmt_idx")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.PbfCntr).HasColumnName("pbf_cntr");

                entity.Property(e => e.PbfFrmt)
                    .IsRequired()
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbf_frmt");

                entity.Property(e => e.PbfName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbf_name");

                entity.Property(e => e.PbfType).HasColumnName("pbf_type");
            });

            modelBuilder.Entity<Pbcattbl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pbcattbl");

                entity.HasIndex(e => new { e.PbtTnam, e.PbtOwnr }, "pbcattbl_idx")
                    .IsUnique();

                entity.Property(e => e.PbdFchr).HasColumnName("pbd_fchr");

                entity.Property(e => e.PbdFfce)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("pbd_ffce")
                    .IsFixedLength(true);

                entity.Property(e => e.PbdFhgt).HasColumnName("pbd_fhgt");

                entity.Property(e => e.PbdFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbd_fitl")
                    .IsFixedLength(true);

                entity.Property(e => e.PbdFptc).HasColumnName("pbd_fptc");

                entity.Property(e => e.PbdFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbd_funl")
                    .IsFixedLength(true);

                entity.Property(e => e.PbdFwgt).HasColumnName("pbd_fwgt");

                entity.Property(e => e.PbhFchr).HasColumnName("pbh_fchr");

                entity.Property(e => e.PbhFfce)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("pbh_ffce")
                    .IsFixedLength(true);

                entity.Property(e => e.PbhFhgt).HasColumnName("pbh_fhgt");

                entity.Property(e => e.PbhFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbh_fitl")
                    .IsFixedLength(true);

                entity.Property(e => e.PbhFptc).HasColumnName("pbh_fptc");

                entity.Property(e => e.PbhFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbh_funl")
                    .IsFixedLength(true);

                entity.Property(e => e.PbhFwgt).HasColumnName("pbh_fwgt");

                entity.Property(e => e.PblFchr).HasColumnName("pbl_fchr");

                entity.Property(e => e.PblFfce)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("pbl_ffce")
                    .IsFixedLength(true);

                entity.Property(e => e.PblFhgt).HasColumnName("pbl_fhgt");

                entity.Property(e => e.PblFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbl_fitl")
                    .IsFixedLength(true);

                entity.Property(e => e.PblFptc).HasColumnName("pbl_fptc");

                entity.Property(e => e.PblFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("pbl_funl")
                    .IsFixedLength(true);

                entity.Property(e => e.PblFwgt).HasColumnName("pbl_fwgt");

                entity.Property(e => e.PbtCmnt)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbt_cmnt");

                entity.Property(e => e.PbtOwnr)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbt_ownr")
                    .IsFixedLength(true);

                entity.Property(e => e.PbtTid).HasColumnName("pbt_tid");

                entity.Property(e => e.PbtTnam)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbt_tnam")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Pbcatvld>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pbcatvld");

                entity.HasIndex(e => e.PbvName, "pbcatvld_idx")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.PbvCntr).HasColumnName("pbv_cntr");

                entity.Property(e => e.PbvMsg)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbv_msg");

                entity.Property(e => e.PbvName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("pbv_name");

                entity.Property(e => e.PbvType).HasColumnName("pbv_type");

                entity.Property(e => e.PbvVald)
                    .IsRequired()
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("pbv_vald");
            });

            modelBuilder.Entity<Perfil>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("perfil");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperfil).HasColumnName("cperfil");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dperfil)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dperfil");

                entity.Property(e => e.Sperfil)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sperfil");
            });

            modelBuilder.Entity<PerfilProfesor>(entity =>
            {
                entity.HasKey(e => e.Cperfil);

                entity.ToTable("perfil_profesor");

                entity.Property(e => e.Cperfil).HasColumnName("cperfil");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dperfil)
                    .HasMaxLength(500)
                    .HasColumnName("dperfil");

                entity.Property(e => e.Estado).HasColumnName("estado");
            });

            modelBuilder.Entity<PerfilSeguridad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("perfil_seguridad");

                entity.Property(e => e.Cperfil).HasColumnName("cperfil");

                entity.Property(e => e.Dperfil)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dperfil");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sperfil)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sperfil");
            });

            modelBuilder.Entity<Periodo>(entity =>
            {
                entity.HasKey(e => e.Cperiodo)
                    .HasName("PK__periodo__1D5142F3");

                entity.ToTable("periodo");

                entity.Property(e => e.Cperiodo)
                    .ValueGeneratedNever()
                    .HasColumnName("cperiodo");

                entity.Property(e => e.Actual).HasColumnName("actual");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DfechaCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfecha_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.DiasMatriWeb).HasColumnName("dias_matri_web");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.FcierreMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matri_web");

                entity.Property(e => e.FcierreMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matricula");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.FfinalVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_vigencia");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.FinicioMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_matri_web");

                entity.Property(e => e.FinicioVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_vigencia");

                entity.Property(e => e.FlagCajaExterna)
                    .HasColumnName("flagCajaExterna")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FlimiteAsistWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("flimite_asist_web");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GcalculaPeriodo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcalcula_periodo")
                    .IsFixedLength(true);

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.GvigenteCaja)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvigente_caja")
                    .IsFixedLength(true)
                    .HasComment("Indica el periodo vigente para cobrar en caja y no dejar que paguen cosas de otros periodos");

                entity.Property(e => e.Gvisible).HasColumnName("gvisible");

                entity.Property(e => e.HoraMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("hora_matri_web");

                entity.Property(e => e.Moneda)
                    .HasColumnName("moneda")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Ncreditomax).HasColumnName("ncreditomax");

                entity.Property(e => e.Ncreditomin).HasColumnName("ncreditomin");

                entity.Property(e => e.NgrupoPeriodo).HasColumnName("ngrupo_periodo");

                entity.Property(e => e.NlibroCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nlibro_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Scorreo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scorreo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.SperiodoCertificado)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo_certificado");

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CprogramaNavigation)
                    .WithMany(p => p.Periodos)
                    .HasForeignKey(d => d.Cprograma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_periodo_a_programa");
            });

            modelBuilder.Entity<PeriodoBimestre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_bimestre");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gbimestre).HasColumnName("gbimestre");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<PeriodoBimestreH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_bimestre_h");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gbimestre).HasColumnName("gbimestre");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<PeriodoCarreraAsistencium>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Ccarrera, e.GtipoNota })
                    .HasName("PK__periodo___F23E2056382DF17D");

                entity.ToTable("periodo_carrera_asistencia");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NporcFalta).HasColumnName("nporc_falta");
            });

            modelBuilder.Entity<PeriodoCarreraParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_carrera_parametro");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.Nparametro).HasColumnName("nparametro");
            });

            modelBuilder.Entity<PeriodoCurriculaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_curricula_h");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<PeriodoCurriculum>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Ccurricula, e.Ccarrera })
                    .HasName("PK__periodo_curricul__0FE2393C");

                entity.ToTable("periodo_curricula");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");

                entity.HasOne(d => d.CcurriculaNavigation)
                    .WithMany(p => p.PeriodoCurricula)
                    .HasForeignKey(d => d.Ccurricula)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_periodo_curricula_a_curricula");

                entity.HasOne(d => d.CperiodoNavigation)
                    .WithMany(p => p.PeriodoCurricula)
                    .HasForeignKey(d => d.Cperiodo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_periodo_curricula_a_periodo");
            });

            modelBuilder.Entity<PeriodoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_h");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DfechaCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfecha_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.DiasMatriWeb).HasColumnName("dias_matri_web");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.FcierreMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matri_web");

                entity.Property(e => e.FcierreMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matricula");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.FfinalVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_vigencia");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.FinicioMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_matri_web");

                entity.Property(e => e.FinicioVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_vigencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.Gvisible).HasColumnName("gvisible");

                entity.Property(e => e.HoraMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("hora_matri_web");

                entity.Property(e => e.Ncreditomax).HasColumnName("ncreditomax");

                entity.Property(e => e.Ncreditomin).HasColumnName("ncreditomin");

                entity.Property(e => e.NgrupoPeriodo).HasColumnName("ngrupo_periodo");

                entity.Property(e => e.NlibroCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nlibro_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Scorreo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scorreo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PeriodoParametro>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Nparametro })
                    .HasName("PK__periodo_parametr__5F94079C");

                entity.ToTable("periodo_parametro");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Nparametro).HasColumnName("nparametro");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.Nnumero2).HasColumnName("nnumero2");
            });

            modelBuilder.Entity<PeriodoParametroH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_parametro_h");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.Nnumero2).HasColumnName("nnumero2");

                entity.Property(e => e.Nparametro).HasColumnName("nparametro");
            });

            modelBuilder.Entity<PeriodoRangosTipoNotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("periodo_rangos_tipo_nota");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.GtipoNotaEx).HasColumnName("gtipo_nota_ex");
            });

            modelBuilder.Entity<Permiso>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Caplicacion, e.Cmodulo })
                    .HasName("PK__permiso__62307D25");

                entity.ToTable("permiso");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gnivel).HasColumnName("gnivel");

                entity.Property(e => e.Iactualizar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iactualizar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iagregar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iagregar")
                    .IsFixedLength(true);

                entity.Property(e => e.Ibuscar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ibuscar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iconsultar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iconsultar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iejecutar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iejecutar")
                    .IsFixedLength(true);

                entity.Property(e => e.Ieliminar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ieliminar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iexportar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iexportar")
                    .IsFixedLength(true);

                entity.Property(e => e.Ifiltrar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ifiltrar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iimprimir)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iimprimir")
                    .IsFixedLength(true);

                entity.Property(e => e.Imodificar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("imodificar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iordenar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iordenar")
                    .IsFixedLength(true);

                entity.Property(e => e.Ipropiedaddelavista)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ipropiedaddelavista")
                    .IsFixedLength(true);

                entity.Property(e => e.NselectTop).HasColumnName("nselect_top");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithMany(p => p.Permisos)
                    .HasForeignKey(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_permiso_a_usuario");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.Permisos)
                    .HasForeignKey(d => new { d.Caplicacion, d.Cmodulo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_permiso_a_modulo");
            });

            modelBuilder.Entity<Persona>(entity =>
            {
                entity.HasKey(e => e.Cpersona)
                    .HasName("PK__persona__0B3292B8");

                entity.ToTable("persona");

                entity.HasIndex(e => e.Dpersona, "iu_persona_dpersona");

                entity.Property(e => e.Cpersona)
                    .ValueGeneratedNever()
                    .HasColumnName("cpersona");

                entity.Property(e => e.Alergia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("alergia");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.CategoriaIps)
                    .HasMaxLength(1)
                    .HasColumnName("categoria_ips")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FModificacionClaveEclass)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_clave_eclass");

                entity.Property(e => e.FModificacionEclass)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_eclass");

                entity.Property(e => e.FModificacionIps)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_ips");

                entity.Property(e => e.FUltimoAcceso)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ultimo_acceso");

                entity.Property(e => e.FdocExpedido)
                    .HasColumnType("datetime")
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.Gsanguineo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("gsanguineo");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncalle).HasColumnName("ncalle");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.NroAseguradoIps)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nro_asegurado_ips");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoLive)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_live");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");

                entity.Property(e => e.UModificacionClaveEclass)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("u_modificacion_clave_eclass");

                entity.Property(e => e.UModificacionEclass).HasColumnName("u_modificacion_eclass");

                entity.Property(e => e.UModificacionIps)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("u_modificacion_ips");
            });

            modelBuilder.Entity<Persona2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona2");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FdocExpedido)
                    .HasColumnType("datetime")
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.GempCelularNew).HasColumnName("gemp_celular_new");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncalle).HasColumnName("ncalle");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtelefonoNew)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono_new");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoLive)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_live");

                entity.Property(e => e.TcorreoNew)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_new");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");
            });

            modelBuilder.Entity<Persona20082010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona20082010");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FdocExpedido)
                    .HasColumnType("datetime")
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncalle).HasColumnName("ncalle");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoLive)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_live");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");
            });

            modelBuilder.Entity<Persona212012012>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona2_12012012");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FdocExpedido)
                    .HasColumnType("datetime")
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.GempCelularNew).HasColumnName("gemp_celular_new");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncalle).HasColumnName("ncalle");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtelefonoNew)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono_new");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoLive)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_live");

                entity.Property(e => e.TcorreoNew)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_new");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");
            });

            modelBuilder.Entity<PersonaActDato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_act_datos");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoTrabajo).HasColumnName("cdistrito_trabajo");

                entity.Property(e => e.CgiroNegocio).HasColumnName("cgiro_negocio");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaTrabajo).HasColumnName("cprovincia_trabajo");

                entity.Property(e => e.DcargoTrabajo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcargo_trabajo");

                entity.Property(e => e.Dempresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dempresa");

                entity.Property(e => e.EmailTrabajo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("email_trabajo");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionEmpresa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_empresa");
            });

            modelBuilder.Entity<PersonaActividadC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_actividad_c");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccarrera3).HasColumnName("ccarrera3");

                entity.Property(e => e.Cconectado).HasColumnName("cconectado");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ceducativo1).HasColumnName("ceducativo1");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.CesperaEnvio).HasColumnName("cespera_envio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.CmedioContacto).HasColumnName("cmedio_contacto");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodalidad2).HasColumnName("cmodalidad2");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Corigen).HasColumnName("corigen");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dconectado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dconectado");

                entity.Property(e => e.Dcontacto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistioCharlas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistio_charlas")
                    .IsFixedLength(true);

                entity.Property(e => e.GcomunicoIngreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcomunico_ingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.GegreColegio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gegre_colegio")
                    .IsFixedLength(true);

                entity.Property(e => e.Gingreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.GinteresBeca)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ginteres_beca")
                    .IsFixedLength(true);

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gtercio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtercio")
                    .IsFixedLength(true);

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NgradoInteres).HasColumnName("ngrado_interes");

                entity.Property(e => e.Nopcion).HasColumnName("nopcion");
            });

            modelBuilder.Entity<PersonaActividadCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_actividad_c_h");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccarrera3).HasColumnName("ccarrera3");

                entity.Property(e => e.Cconectado).HasColumnName("cconectado");

                entity.Property(e => e.Cconvenio).HasColumnName("cconvenio");

                entity.Property(e => e.Ceducativo1).HasColumnName("ceducativo1");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.CesperaEnvio).HasColumnName("cespera_envio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CmedioContacto).HasColumnName("cmedio_contacto");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodalidad2).HasColumnName("cmodalidad2");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Corigen).HasColumnName("corigen");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dconectado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dconectado");

                entity.Property(e => e.Dcontacto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistioCharlas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistio_charlas")
                    .IsFixedLength(true);

                entity.Property(e => e.GcomunicoIngreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcomunico_ingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.GegreColegio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gegre_colegio")
                    .IsFixedLength(true);

                entity.Property(e => e.Gingreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.GinteresBeca)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ginteres_beca")
                    .IsFixedLength(true);

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gtercio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtercio")
                    .IsFixedLength(true);

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NgradoInteres).HasColumnName("ngrado_interes");

                entity.Property(e => e.Nopcion).HasColumnName("nopcion");
            });

            modelBuilder.Entity<PersonaActividadD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_actividad_d");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cgestor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cgestor");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Crespuesta).HasColumnName("crespuesta");

                entity.Property(e => e.Csubrespuesta).HasColumnName("csubrespuesta");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fgestion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestion");

                entity.Property(e => e.Finscripcion)
                    .HasColumnType("datetime")
                    .HasColumnName("finscripcion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<PersonaActividadDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_actividad_d_h");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cgestor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cgestor");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Crespuesta).HasColumnName("crespuesta");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fgestion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<PersonaActualizacion>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Cactualizacion });

                entity.ToTable("PERSONA_ACTUALIZACION");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cactualizacion).HasColumnName("CACTUALIZACION");

                entity.Property(e => e.Cclase)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CCLASE")
                    .IsFixedLength(true);

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.NduracionHoras)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NDURACION_HORAS");

                entity.Property(e => e.Sdenominacion)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("SDENOMINACION");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("SPERIODO")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaActualizacions)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA2");
            });

            modelBuilder.Entity<PersonaAfin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_afin");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaAfin).HasColumnName("cpersona_afin");

                entity.Property(e => e.Gafinidad).HasColumnName("gafinidad");

                entity.Property(e => e.Gemergencia).HasColumnName("gemergencia");

                entity.Property(e => e.GnivelAfin).HasColumnName("gnivel_afin");
            });

            modelBuilder.Entity<PersonaArea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_area");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<PersonaCargo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_cargo");

                entity.Property(e => e.Ccargo).HasColumnName("ccargo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Estado).HasColumnName("estado");
            });

            modelBuilder.Entity<PersonaCongreso>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Ccongreso });

                entity.ToTable("PERSONA_CONGRESO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Ccongreso).HasColumnName("CCONGRESO");

                entity.Property(e => e.CalidadDe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CALIDAD_DE");

                entity.Property(e => e.Cciudad).HasColumnName("CCIUDAD");

                entity.Property(e => e.Dinstitucion)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("DINSTITUCION");

                entity.Property(e => e.Sdenominacion)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("SDENOMINACION");

                entity.Property(e => e.Sfecha)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SFECHA");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaCongresos)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA4");
            });

            modelBuilder.Entity<PersonaControlDatos2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_control_datos2");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoTrabajo).HasColumnName("cdistrito_trabajo");

                entity.Property(e => e.CgiroNegocio).HasColumnName("cgiro_negocio");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaTrabajo).HasColumnName("cprovincia_trabajo");

                entity.Property(e => e.CtiempoServicio).HasColumnName("ctiempo_servicio");

                entity.Property(e => e.DcargoTrabajo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcargo_trabajo");

                entity.Property(e => e.Dempresa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dempresa");

                entity.Property(e => e.EmailTrabajo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("email_trabajo");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(40)
                    .HasColumnName("ntelefono1")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionEmpresa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_empresa");
            });

            modelBuilder.Entity<PersonaCv>(entity =>
            {
                entity.HasKey(e => e.Ccv)
                    .HasName("PK_persona_cv_1");

                entity.ToTable("persona_cv");

                entity.Property(e => e.Ccv).HasColumnName("ccv");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cv)
                    .HasColumnType("image")
                    .HasColumnName("cv");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");
            });

            modelBuilder.Entity<PersonaDatoAcademico>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Item });

                entity.ToTable("persona_dato_academico");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Item).HasColumnName("item");

                entity.Property(e => e.AnioEgreso)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("anio_egreso");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clugar).HasColumnName("clugar");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CnivelAcademico).HasColumnName("cnivel_academico");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CtipoInstitucion).HasColumnName("ctipo_institucion");

                entity.Property(e => e.Ctitulo).HasColumnName("ctitulo");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<PersonaDatoAcademicoPeriodo>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cprofesor });

                entity.ToTable("persona_dato_academico_periodo");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.D1).HasColumnName("d1");

                entity.Property(e => e.D2).HasColumnName("d2");

                entity.Property(e => e.Di).HasColumnName("di");

                entity.Property(e => e.E1).HasColumnName("e1");

                entity.Property(e => e.E2).HasColumnName("e2");

                entity.Property(e => e.E3).HasColumnName("e3");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.M1).HasColumnName("m1");

                entity.Property(e => e.M2).HasColumnName("m2");

                entity.Property(e => e.M3).HasColumnName("m3");

                entity.Property(e => e.Tp1).HasColumnName("tp1");

                entity.Property(e => e.Tp2).HasColumnName("tp2");

                entity.Property(e => e.Tp3).HasColumnName("tp3");
            });

            modelBuilder.Entity<PersonaExperiencium>(entity =>
            {
                entity.HasKey(e => new { e.Cexperiencia, e.Cpersona });

                entity.ToTable("PERSONA_EXPERIENCIA");

                entity.Property(e => e.Cexperiencia).HasColumnName("CEXPERIENCIA");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.Scargo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("SCARGO");

                entity.Property(e => e.Smateria)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("SMATERIA");

                entity.Property(e => e.Smodalidad)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SMODALIDAD");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("SPERIODO")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CeducativoNavigation)
                    .WithMany(p => p.PersonaExperiencia)
                    .HasForeignKey(d => d.Ceducativo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_ENTE_EDU8");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaExperiencia)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA8");
            });

            modelBuilder.Entity<PersonaFamilium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_familia");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cfamilia).HasColumnName("cfamilia");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dfamilia)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dfamilia");

                entity.Property(e => e.GestadoCivil).HasColumnName("gestado_civil");

                entity.Property(e => e.Gparentesco).HasColumnName("gparentesco");

                entity.Property(e => e.Nedad).HasColumnName("nedad");
            });

            modelBuilder.Entity<PersonaFormacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_formacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.NtelefonoFijo).HasColumnName("ntelefono_fijo");

                entity.Property(e => e.NtelefonoMovil).HasColumnName("ntelefono_movil");

                entity.Property(e => e.NtelefonoOtro).HasColumnName("ntelefono_otro");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TcentroDocencia1)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tcentro_docencia1");

                entity.Property(e => e.TcentroDocencia2)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tcentro_docencia2");

                entity.Property(e => e.TcentroEstudios)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tcentro_estudios");

                entity.Property(e => e.TcentroOtro)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("tcentro_otro");

                entity.Property(e => e.TcentroPostgrado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcentro_postgrado");

                entity.Property(e => e.Totro)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("totro");

                entity.Property(e => e.Tpostgrado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tpostgrado");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttitulo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ttitulo");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");
            });

            modelBuilder.Entity<PersonaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("persona_h");

                entity.Property(e => e.Alergia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("alergia");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.CategoriaIps)
                    .HasMaxLength(1)
                    .HasColumnName("categoria_ips")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FModificacionClaveEclass)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_clave_eclass");

                entity.Property(e => e.FModificacionEclass)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_eclass");

                entity.Property(e => e.FModificacionIps)
                    .HasColumnType("datetime")
                    .HasColumnName("f_modificacion_ips");

                entity.Property(e => e.FUltimoAcceso)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ultimo_acceso");

                entity.Property(e => e.FdocExpedido)
                    .HasColumnType("datetime")
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_ingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.Gsanguineo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("gsanguineo");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral")
                    .IsFixedLength(true);

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncalle).HasColumnName("ncalle");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.NroAseguradoIps)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nro_asegurado_ips");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoLive)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_live");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");

                entity.Property(e => e.UModificacionClaveEclass)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("u_modificacion_clave_eclass");

                entity.Property(e => e.UModificacionEclass).HasColumnName("u_modificacion_eclass");

                entity.Property(e => e.UModificacionIps)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("u_modificacion_ips");
            });

            modelBuilder.Entity<PersonaIdioma>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Cidioma });

                entity.ToTable("PERSONA_IDIOMA");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cidioma).HasColumnName("CIDIOMA");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.Cnivel)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CNIVEL")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfecha)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SFECHA");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.HasOne(d => d.CeducativoNavigation)
                    .WithMany(p => p.PersonaIdiomas)
                    .HasForeignKey(d => d.Ceducativo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_ENTE_EDU3");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaIdiomas)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA3");
            });

            modelBuilder.Entity<PersonaInvestigacion>(entity =>
            {
                entity.HasKey(e => new { e.Cinvestigacion, e.Cpersona });

                entity.ToTable("PERSONA_INVESTIGACION");

                entity.Property(e => e.Cinvestigacion).HasColumnName("CINVESTIGACION");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cciudad).HasColumnName("CCIUDAD");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("DINSTITUCION");

                entity.Property(e => e.SautorCoautor)
                    .IsRequired()
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .HasColumnName("SAUTOR_COAUTOR");

                entity.Property(e => e.Sfecha)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SFECHA");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.Property(e => e.Stitulo)
                    .IsRequired()
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("STITULO");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaInvestigacions)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA7");
            });

            modelBuilder.Entity<PersonaMencion>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Cmencion });

                entity.ToTable("PERSONA_MENCION");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cmencion).HasColumnName("CMENCION");

                entity.Property(e => e.CalidadDe)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("CALIDAD_DE");

                entity.Property(e => e.Cciudad).HasColumnName("CCIUDAD");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.Sdenominacion)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("SDENOMINACION");

                entity.Property(e => e.Sfecha)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SFECHA");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.HasOne(d => d.CeducativoNavigation)
                    .WithMany(p => p.PersonaMencions)
                    .HasForeignKey(d => d.Ceducativo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_ENTE_EDU5");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaMencions)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA5");
            });

            modelBuilder.Entity<PersonaMig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PERSONA_MIG");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApeMaternoOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno_original");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.ApePaternoOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno_original");

                entity.Property(e => e.Cantida).HasColumnName("cantida");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaMin).HasColumnName("cpersona_min");

                entity.Property(e => e.Cuadra).HasColumnName("cuadra");

                entity.Property(e => e.Dato01)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato01");

                entity.Property(e => e.Dato03)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato03");

                entity.Property(e => e.Dato05)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato05");

                entity.Property(e => e.Dato07)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato07");

                entity.Property(e => e.Dato09)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato09");

                entity.Property(e => e.Dato11)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato11");

                entity.Property(e => e.Dato13)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato13");

                entity.Property(e => e.Dato15)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato15");

                entity.Property(e => e.Dato17)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato17");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.Nnom).HasColumnName("nnom");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NombreOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre_original");

                entity.Property(e => e.Npat).HasColumnName("npat");

                entity.Property(e => e.OriginalDoble).HasColumnName("original_doble");
            });

            modelBuilder.Entity<PersonaPosgrado>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Cposgrado });

                entity.ToTable("PERSONA_POSGRADO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cposgrado).HasColumnName("CPOSGRADO");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.Nano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NANO");

                entity.Property(e => e.Sdenominacion)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("SDENOMINACION");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.Property(e => e.TesisAprobada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TESIS_APROBADA")
                    .HasDefaultValueSql("('R')")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaPosgrados)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA");
            });

            modelBuilder.Entity<PersonaPublicacion>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Cpublicacion });

                entity.ToTable("PERSONA_PUBLICACION");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cpublicacion).HasColumnName("CPUBLICACION");

                entity.Property(e => e.SautorCoautor)
                    .IsRequired()
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .HasColumnName("SAUTOR_COAUTOR");

                entity.Property(e => e.Seditorial)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("SEDITORIAL");

                entity.Property(e => e.Sfecha)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SFECHA");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.Property(e => e.Stitulo)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("STITULO");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaPublicacions)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA6");
            });

            modelBuilder.Entity<PersonaRestringidum>(entity =>
            {
                entity.HasKey(e => e.Cpersona);

                entity.ToTable("persona_restringida");

                entity.Property(e => e.Cpersona)
                    .ValueGeneratedNever()
                    .HasColumnName("cpersona");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dglosa)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<PersonaTesi>(entity =>
            {
                entity.HasKey(e => new { e.Ctesis, e.Cpersona });

                entity.ToTable("PERSONA_TESIS");

                entity.Property(e => e.Ctesis).HasColumnName("CTESIS");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.DtituloTesis)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DTITULO_TESIS");

                entity.Property(e => e.Nano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NANO");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaTesis)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA11");
            });

            modelBuilder.Entity<PersonaTitulo>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Ctitulo });

                entity.ToTable("PERSONA_TITULO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Ctitulo).HasColumnName("CTITULO");

                entity.Property(e => e.Ceducativo).HasColumnName("CEDUCATIVO");

                entity.Property(e => e.Nano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NANO");

                entity.Property(e => e.Sobservaciones)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("SOBSERVACIONES");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaTitulos)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA10");
            });

            modelBuilder.Entity<PersonaTrabajo>(entity =>
            {
                entity.HasKey(e => new { e.Cpersona, e.Ctrabajo });

                entity.ToTable("PERSONA_TRABAJO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Ctrabajo).HasColumnName("CTRABAJO");

                entity.Property(e => e.Nano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NANO");

                entity.Property(e => e.Sorganizacion)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("SORGANIZACION");

                entity.Property(e => e.Starea)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STAREA");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.PersonaTrabajos)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PERSONA__REFERENCE_PERSONA9");
            });

            modelBuilder.Entity<Personal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("personal");

                entity.Property(e => e.CoArea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("co_area");

                entity.Property(e => e.CoEmpr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("co_empr");

                entity.Property(e => e.CoTrab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("co_trab");

                entity.Property(e => e.DeArea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("de_area");

                entity.Property(e => e.DeNomb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("de_nomb");

                entity.Property(e => e.DeTipoSitu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("de_tipo_situ");

                entity.Property(e => e.FeNaciTrab)
                    .HasColumnType("datetime")
                    .HasColumnName("fe_naci_trab");

                entity.Property(e => e.NoApelCasa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("no_apel_casa");

                entity.Property(e => e.NoApelMate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("no_apel_mate");

                entity.Property(e => e.NoApelPate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("no_apel_pate");

                entity.Property(e => e.NoTrab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("no_trab");

                entity.Property(e => e.NuDocuIden)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nu_docu_iden");

                entity.Property(e => e.TiDocuIden)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ti_docu_iden");
            });

            modelBuilder.Entity<PfMedicina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Pf_medicina");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Spagar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("spagar")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PlanillaDetalle>(entity =>
            {
                entity.HasKey(e => new { e.Cplanilla, e.Cdetalle, e.Cinstitucion, e.Cprograma, e.Cperiodo, e.GtipoAsistencia, e.FinicioProg, e.Cprofesor });

                entity.ToTable("planilla_detalle");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cdetalle).HasColumnName("cdetalle");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");
            });

            modelBuilder.Entity<PlanillaDetalleAsuVerano>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("planilla_detalle_asu_verano");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Aprobado).HasColumnName("aprobado");

                entity.Property(e => e.CantAlumnos).HasColumnName("cant_alumnos");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dia1).HasColumnName("dia1");

                entity.Property(e => e.Dia10).HasColumnName("dia10");

                entity.Property(e => e.Dia11).HasColumnName("dia11");

                entity.Property(e => e.Dia12).HasColumnName("dia12");

                entity.Property(e => e.Dia13).HasColumnName("dia13");

                entity.Property(e => e.Dia14).HasColumnName("dia14");

                entity.Property(e => e.Dia15).HasColumnName("dia15");

                entity.Property(e => e.Dia16).HasColumnName("dia16");

                entity.Property(e => e.Dia17).HasColumnName("dia17");

                entity.Property(e => e.Dia18).HasColumnName("dia18");

                entity.Property(e => e.Dia19).HasColumnName("dia19");

                entity.Property(e => e.Dia2).HasColumnName("dia2");

                entity.Property(e => e.Dia20).HasColumnName("dia20");

                entity.Property(e => e.Dia21).HasColumnName("dia21");

                entity.Property(e => e.Dia22).HasColumnName("dia22");

                entity.Property(e => e.Dia23).HasColumnName("dia23");

                entity.Property(e => e.Dia24).HasColumnName("dia24");

                entity.Property(e => e.Dia25).HasColumnName("dia25");

                entity.Property(e => e.Dia26).HasColumnName("dia26");

                entity.Property(e => e.Dia27).HasColumnName("dia27");

                entity.Property(e => e.Dia28).HasColumnName("dia28");

                entity.Property(e => e.Dia29).HasColumnName("dia29");

                entity.Property(e => e.Dia3).HasColumnName("dia3");

                entity.Property(e => e.Dia30).HasColumnName("dia30");

                entity.Property(e => e.Dia31).HasColumnName("dia31");

                entity.Property(e => e.Dia4).HasColumnName("dia4");

                entity.Property(e => e.Dia5).HasColumnName("dia5");

                entity.Property(e => e.Dia6).HasColumnName("dia6");

                entity.Property(e => e.Dia7).HasColumnName("dia7");

                entity.Property(e => e.Dia8).HasColumnName("dia8");

                entity.Property(e => e.Dia9).HasColumnName("dia9");

                entity.Property(e => e.EfHoras).HasColumnName("ef_horas");

                entity.Property(e => e.EfeHoras).HasColumnName("efe_horas");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.MontoHora)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("monto_hora");

                entity.Property(e => e.MontoPagar)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("monto_pagar");

                entity.Property(e => e.Nrocheque)
                    .HasMaxLength(100)
                    .HasColumnName("nrocheque");

                entity.Property(e => e.TipoPlanilla)
                    .HasMaxLength(1)
                    .HasColumnName("tipo_planilla")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PlanillaDetalleCde>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("planilla_detalle_cde");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Aprobado).HasColumnName("aprobado");

                entity.Property(e => e.CantAlumnos).HasColumnName("cant_alumnos");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dia1).HasColumnName("dia1");

                entity.Property(e => e.Dia10).HasColumnName("dia10");

                entity.Property(e => e.Dia11).HasColumnName("dia11");

                entity.Property(e => e.Dia12).HasColumnName("dia12");

                entity.Property(e => e.Dia13).HasColumnName("dia13");

                entity.Property(e => e.Dia14).HasColumnName("dia14");

                entity.Property(e => e.Dia15).HasColumnName("dia15");

                entity.Property(e => e.Dia16).HasColumnName("dia16");

                entity.Property(e => e.Dia17).HasColumnName("dia17");

                entity.Property(e => e.Dia18).HasColumnName("dia18");

                entity.Property(e => e.Dia19).HasColumnName("dia19");

                entity.Property(e => e.Dia2).HasColumnName("dia2");

                entity.Property(e => e.Dia20).HasColumnName("dia20");

                entity.Property(e => e.Dia21).HasColumnName("dia21");

                entity.Property(e => e.Dia22).HasColumnName("dia22");

                entity.Property(e => e.Dia23).HasColumnName("dia23");

                entity.Property(e => e.Dia24).HasColumnName("dia24");

                entity.Property(e => e.Dia25).HasColumnName("dia25");

                entity.Property(e => e.Dia26).HasColumnName("dia26");

                entity.Property(e => e.Dia27).HasColumnName("dia27");

                entity.Property(e => e.Dia28).HasColumnName("dia28");

                entity.Property(e => e.Dia29).HasColumnName("dia29");

                entity.Property(e => e.Dia3).HasColumnName("dia3");

                entity.Property(e => e.Dia30).HasColumnName("dia30");

                entity.Property(e => e.Dia31).HasColumnName("dia31");

                entity.Property(e => e.Dia4).HasColumnName("dia4");

                entity.Property(e => e.Dia5).HasColumnName("dia5");

                entity.Property(e => e.Dia6).HasColumnName("dia6");

                entity.Property(e => e.Dia7).HasColumnName("dia7");

                entity.Property(e => e.Dia8).HasColumnName("dia8");

                entity.Property(e => e.Dia9).HasColumnName("dia9");

                entity.Property(e => e.EfHoras).HasColumnName("ef_horas");

                entity.Property(e => e.EfeHoras).HasColumnName("efe_horas");

                entity.Property(e => e.EstadoRegistro)
                    .HasColumnName("estado_registro")
                    .HasComment("0 (ELIMINADO) 1 (NUEVO) 2 (APROBADO)");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.MontoHora)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("monto_hora");

                entity.Property(e => e.MontoPagar)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("monto_pagar");

                entity.Property(e => e.Nrocheque)
                    .HasMaxLength(100)
                    .HasColumnName("nrocheque");

                entity.Property(e => e.PracticaHospitalaria)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("practica_hospitalaria");

                entity.Property(e => e.ProfesorTiempoCompleto)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("profesor_tiempo_completo");

                entity.Property(e => e.TipoPlanilla)
                    .HasMaxLength(1)
                    .HasColumnName("tipo_planilla")
                    .IsFixedLength(true)
                    .HasComment("R (RESUMEN) D (DETALLE)");
            });

            modelBuilder.Entity<PlanillaDetalleIngresoEgreso>(entity =>
            {
                entity.HasKey(e => new { e.Cplanilla, e.Cdetalle, e.Cinstitucion, e.Cprograma, e.Cprofesor, e.Cpersona, e.Gtipo, e.Nregistro });

                entity.ToTable("planilla_detalle_ingreso_egreso");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cdetalle).HasColumnName("cdetalle");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Gtipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Imonto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imonto");

                entity.Property(e => e.Tobservacion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<PlanillaDetalleIngresoEgresoTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("planilla_detalle_ingreso_egreso_temp");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cdetalle).HasColumnName("cdetalle");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Imonto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imonto");

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.Tobservacion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<PlanillaDetalleTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("planilla_detalle_temp");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdetalle).HasColumnName("cdetalle");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");
            });

            modelBuilder.Entity<PlanillaEquivale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("planilla_equivale");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Sequivalencia)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sequivalencia")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PlanillaPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("planilla_periodo");

                entity.HasIndex(e => new { e.Gplanilla, e.Finicio }, "i01_planilla_periodo_if");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Dplanilla)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dplanilla");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.GparametroOrigen).HasColumnName("gparametro_origen");

                entity.Property(e => e.Gplanilla).HasColumnName("gplanilla");

                entity.Property(e => e.Greporte).HasColumnName("greporte");

                entity.Property(e => e.NmontoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_hora");
            });

            modelBuilder.Entity<PlanillaResuman>(entity =>
            {
                entity.HasKey(e => new { e.Cplanilla, e.Cperiodo, e.Cprofesor });

                entity.ToTable("planilla_resumen");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Aguibruto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("aguibruto")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Apagaravs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("apagaravs")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Apagarnor)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("apagarnor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Apagarpfs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("apagarpfs")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cdetalle).HasColumnName("cdetalle");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Egrbruto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("egrbruto")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .HasColumnName("gtipo_planilla");

                entity.Property(e => e.HorasProgramadas)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("horas_programadas")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ibruto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ibruto")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Iexavs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iexavs");

                entity.Property(e => e.Iexpfs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iexpfs")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ingapagarnor)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ingapagarnor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ingbruto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ingbruto")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MinAntes)
                    .HasColumnName("min_antes")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MinTarde)
                    .HasColumnName("min_tarde")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nadicionales)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("nadicionales")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nexamenavs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("nexamenavs")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nexamenpfs)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("nexamenpfs")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nfaltas)
                    .HasColumnName("nfaltas")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("nhoras")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nrocheque)
                    .HasMaxLength(100)
                    .HasColumnName("nrocheque");
            });

            modelBuilder.Entity<PlanillaTexto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("planilla_texto");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Nplanilla).HasColumnName("nplanilla");

                entity.Property(e => e.Nvez).HasColumnName("nvez");
            });

            modelBuilder.Entity<Plima>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("plima");

                entity.Property(e => e.ApMaterno)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ap_materno");

                entity.Property(e => e.ApPaterno)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ap_paterno");

                entity.Property(e => e.Cevalua1).HasColumnName("cevalua1");

                entity.Property(e => e.Cevalua2).HasColumnName("cevalua2");

                entity.Property(e => e.Cevalua3).HasColumnName("cevalua3");

                entity.Property(e => e.Cevalua4).HasColumnName("cevalua4");

                entity.Property(e => e.Cevalua5).HasColumnName("cevalua5");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cultima)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cultima")
                    .IsFixedLength(true);

                entity.Property(e => e.Lcarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("lcarrera");

                entity.Property(e => e.Lestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("lestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Lmodalidad)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("lmodalidad");

                entity.Property(e => e.Lpuntaje).HasColumnName("lpuntaje");

                entity.Property(e => e.Lvacante).HasColumnName("lvacante");

                entity.Property(e => e.Nombres)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombres");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ucarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ucarrera");
            });

            modelBuilder.Entity<Postulante>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("postulante");

                entity.HasIndex(e => e.Cpostulante, "iu_postulante_cpostulante")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cadmision, e.Cpersona }, "postulante02");

                entity.HasIndex(e => new { e.Cadmision, e.Cpersona, e.Ceducativo }, "postulante03");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.CcarreraPrevia).HasColumnName("ccarrera_previa");

                entity.Property(e => e.CcarreraTraslado).HasColumnName("ccarrera_traslado");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso2")
                    .IsFixedLength(true);

                entity.Property(e => e.CingresoVend)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cingreso_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.CinstitucionVend).HasColumnName("cinstitucion_vend");

                entity.Property(e => e.ClistaPrecio).HasColumnName("clista_precio");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaVend).HasColumnName("cpersona_vend");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.CprogramaVend).HasColumnName("cprograma_vend");

                entity.Property(e => e.CtpdocCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcomentario)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcomentario");

                entity.Property(e => e.Dreserva)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dreserva");

                entity.Property(e => e.Dretiro)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dretiro");

                entity.Property(e => e.FCartaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("f_carta_bienestar");

                entity.Property(e => e.FEntExpConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ent_exp_conv");

                entity.Property(e => e.FRecepcionCarta)
                    .HasColumnType("datetime")
                    .HasColumnName("f_recepcion_carta");

                entity.Property(e => e.FRsptaConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_rspta_conv");

                entity.Property(e => e.Faprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("faprobacion");

                entity.Property(e => e.FasignaCateg)
                    .HasColumnType("datetime")
                    .HasColumnName("fasigna_categ");

                entity.Property(e => e.FfaxSolicita)
                    .HasColumnType("datetime")
                    .HasColumnName("ffax_solicita");

                entity.Property(e => e.FfichaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("fficha_bienestar");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FpagoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_matricula");

                entity.Property(e => e.FpagoReserva)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_reserva");

                entity.Property(e => e.GRindioExplor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("g_rindio_explor")
                    .IsFixedLength(true);

                entity.Property(e => e.GasistiraCharla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistira_charla")
                    .IsFixedLength(true);

                entity.Property(e => e.GcarreraDefinida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida")
                    .IsFixedLength(true);

                entity.Property(e => e.GcatEnteEdu).HasColumnName("gcat_ente_edu");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.GfaxSolicita)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gfax_solicita")
                    .IsFixedLength(true);

                entity.Property(e => e.GfichaBienestar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gficha_bienestar")
                    .IsFixedLength(true);

                entity.Property(e => e.Gintegracion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gintegracion")
                    .IsFixedLength(true);

                entity.Property(e => e.Ginteres).HasColumnName("ginteres");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gparticular)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gparticular")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaIsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_isil")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaUsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_usil")
                    .IsFixedLength(true);

                entity.Property(e => e.GrendiraExamen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grendira_examen")
                    .IsFixedLength(true);

                entity.Property(e => e.GrsptaPostul).HasColumnName("grspta_postul");

                entity.Property(e => e.GtipoContacto).HasColumnName("gtipo_contacto");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");

                entity.Property(e => e.Isecundaria).HasColumnName("isecundaria");

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.NdocumCaja).HasColumnName("ndocum_caja");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.SasistioEntrevis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sasistio_entrevis")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategprog)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategprog")
                    .IsFixedLength(true);

                entity.Property(e => e.Sreserva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sreserva")
                    .IsFixedLength(true);

                entity.Property(e => e.Sretiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tipo_pago")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CadmisionNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cadmision)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_postulante_a_admision");

                entity.HasOne(d => d.Ccarrera1Navigation)
                    .WithMany()
                    .HasForeignKey(d => d.Ccarrera1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_postulante_a_carrera_1");

                entity.HasOne(d => d.Ccarrera2Navigation)
                    .WithMany()
                    .HasForeignKey(d => d.Ccarrera2)
                    .HasConstraintName("fk_postulante_a_carrera_2");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_postulante_a_persona");
            });

            modelBuilder.Entity<PostulanteCarrera>(entity =>
            {
                entity.HasKey(e => new { e.Cadmision, e.Cpersona, e.Ccarrera })
                    .HasName("PK__postulante_carre__20589827");

                entity.ToTable("postulante_carrera");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<PostulanteDoc>(entity =>
            {
                entity.HasKey(e => new { e.Cadmision, e.Cpersona, e.GadmisionDoc });

                entity.ToTable("postulante_doc");

                entity.HasIndex(e => new { e.Cadmision, e.Cpersona, e.GadmisionDoc }, "ui_postulante_doc")
                    .IsUnique();

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.GadmisionDoc).HasColumnName("gadmision_doc");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionEgresado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_egresado");

                entity.Property(e => e.CmodificacionOtro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_otro");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Crecibido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido");

                entity.Property(e => e.CrecibidoEgresado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido_egresado");

                entity.Property(e => e.CrecibidoOtro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido_otro");

                entity.Property(e => e.DescripcionEgresado)
                    .HasMaxLength(250)
                    .HasColumnName("descripcion_egresado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionEgresado)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_egresado");

                entity.Property(e => e.FmodificacionOtro)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_otro");

                entity.Property(e => e.Frecibido)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido");

                entity.Property(e => e.FrecibidoEgresado)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido_egresado");

                entity.Property(e => e.FrecibidoOtro)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido_otro");

                entity.Property(e => e.Grecibido).HasColumnName("grecibido");

                entity.Property(e => e.GrecibidoEgresado).HasColumnName("grecibido_egresado");

                entity.Property(e => e.GrecibidoOtro).HasColumnName("grecibido_otro");

                entity.Property(e => e.Gvisado).HasColumnName("gvisado");

                entity.Property(e => e.GvisadoEgresado).HasColumnName("gvisado_egresado");

                entity.Property(e => e.GvisadoOtro).HasColumnName("gvisado_otro");
            });

            modelBuilder.Entity<PostulanteDocH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("postulante_doc_h");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionEgresado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_egresado");

                entity.Property(e => e.CmodificacionOtro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_otro");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Crecibido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido");

                entity.Property(e => e.CrecibidoEgresado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido_egresado");

                entity.Property(e => e.CrecibidoOtro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("crecibido_otro");

                entity.Property(e => e.DescripcionEgresado)
                    .HasMaxLength(250)
                    .HasColumnName("descripcion_egresado");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionEgresado)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_egresado");

                entity.Property(e => e.FmodificacionOtro)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_otro");

                entity.Property(e => e.Frecibido)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido");

                entity.Property(e => e.FrecibidoEgresado)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido_egresado");

                entity.Property(e => e.FrecibidoOtro)
                    .HasColumnType("datetime")
                    .HasColumnName("frecibido_otro");

                entity.Property(e => e.GadmisionDoc).HasColumnName("gadmision_doc");

                entity.Property(e => e.Grecibido).HasColumnName("grecibido");

                entity.Property(e => e.GrecibidoEgresado).HasColumnName("grecibido_egresado");

                entity.Property(e => e.GrecibidoOtro).HasColumnName("grecibido_otro");

                entity.Property(e => e.Gvisado).HasColumnName("gvisado");

                entity.Property(e => e.GvisadoEgresado).HasColumnName("gvisado_egresado");

                entity.Property(e => e.GvisadoOtro).HasColumnName("gvisado_otro");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PostulanteEncuestaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("postulante_encuesta_h");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");

                entity.Property(e => e.Gmedio).HasColumnName("gmedio");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");
            });

            modelBuilder.Entity<PostulanteEncuestum>(entity =>
            {
                entity.HasKey(e => new { e.Cpostulante, e.Gmedio })
                    .HasName("PK__postulante_encue__51CFF82A");

                entity.ToTable("postulante_encuesta");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Gmedio).HasColumnName("gmedio");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gmarca).HasColumnName("gmarca");
            });

            modelBuilder.Entity<PostulanteH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("postulante_h");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.CcarreraPrevia).HasColumnName("ccarrera_previa");

                entity.Property(e => e.CcarreraTraslado).HasColumnName("ccarrera_traslado");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso2")
                    .IsFixedLength(true);

                entity.Property(e => e.CingresoVend)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cingreso_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.CinstitucionVend).HasColumnName("cinstitucion_vend");

                entity.Property(e => e.ClistaPrecio).HasColumnName("clista_precio");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaVend).HasColumnName("cpersona_vend");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.CprogramaVend).HasColumnName("cprograma_vend");

                entity.Property(e => e.CtpdocCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcomentario)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcomentario");

                entity.Property(e => e.Dreserva)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dreserva");

                entity.Property(e => e.Dretiro)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dretiro");

                entity.Property(e => e.FCartaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("f_carta_bienestar");

                entity.Property(e => e.FEntExpConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ent_exp_conv");

                entity.Property(e => e.FRecepcionCarta)
                    .HasColumnType("datetime")
                    .HasColumnName("f_recepcion_carta");

                entity.Property(e => e.FRsptaConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_rspta_conv");

                entity.Property(e => e.Faprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("faprobacion");

                entity.Property(e => e.FasignaCateg)
                    .HasColumnType("datetime")
                    .HasColumnName("fasigna_categ");

                entity.Property(e => e.FfaxSolicita)
                    .HasColumnType("datetime")
                    .HasColumnName("ffax_solicita");

                entity.Property(e => e.FfichaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("fficha_bienestar");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FpagoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_matricula");

                entity.Property(e => e.FpagoReserva)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_reserva");

                entity.Property(e => e.GRindioExplor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("g_rindio_explor")
                    .IsFixedLength(true);

                entity.Property(e => e.GasistiraCharla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistira_charla")
                    .IsFixedLength(true);

                entity.Property(e => e.GcarreraDefinida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida")
                    .IsFixedLength(true);

                entity.Property(e => e.GcatEnteEdu).HasColumnName("gcat_ente_edu");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.GfaxSolicita)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gfax_solicita")
                    .IsFixedLength(true);

                entity.Property(e => e.GfichaBienestar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gficha_bienestar")
                    .IsFixedLength(true);

                entity.Property(e => e.Gintegracion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gintegracion")
                    .IsFixedLength(true);

                entity.Property(e => e.Ginteres).HasColumnName("ginteres");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gparticular)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gparticular")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaIsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_isil")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaUsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_usil")
                    .IsFixedLength(true);

                entity.Property(e => e.GrendiraExamen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grendira_examen")
                    .IsFixedLength(true);

                entity.Property(e => e.GrsptaPostul).HasColumnName("grspta_postul");

                entity.Property(e => e.GtipoContacto).HasColumnName("gtipo_contacto");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.Isecundaria).HasColumnName("isecundaria");

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.NdocumCaja).HasColumnName("ndocum_caja");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.SasistioEntrevis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sasistio_entrevis")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategprog)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategprog")
                    .IsFixedLength(true);

                entity.Property(e => e.Sreserva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sreserva")
                    .IsFixedLength(true);

                entity.Property(e => e.Sretiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tipo_pago")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<PreConvalidacionC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pre_convalidacion_c");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cresponsable");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nconvalidacion).HasColumnName("nconvalidacion");
            });

            modelBuilder.Entity<PreConvalidacionD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pre_convalidacion_d");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gobservacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("gobservacion");

                entity.Property(e => e.Nconvalidacion).HasColumnName("nconvalidacion");

                entity.Property(e => e.Npromedio).HasColumnName("npromedio");
            });

            modelBuilder.Entity<PrecioCategorium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("precio_categoria");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.NimpCuota)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nimp_cuota");
            });

            modelBuilder.Entity<PreinscipcionFutbol>(entity =>
            {
                entity.HasKey(e => e.Cpreinscripcion)
                    .HasName("PK__preinsci__5795E917B9D964F5");

                entity.ToTable("preinscipcion_futbol");

                entity.Property(e => e.Cpreinscripcion).HasColumnName("cpreinscripcion");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.Ccarrera)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion).HasColumnName("ccreacion");

                entity.Property(e => e.Cfacultad)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cfacultad");

                entity.Property(e => e.Ci)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci");

                entity.Property(e => e.Cinstitucion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.TipoParticipante)
                    .HasMaxLength(10)
                    .HasColumnName("tipo_participante")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Prerequisito>(entity =>
            {
                entity.HasKey(e => new { e.Ccurricula, e.Ccurso, e.CcursoRequisito })
                    .HasName("PK__prerequisito__24F264BB");

                entity.ToTable("prerequisito");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");

                entity.HasOne(d => d.Ccur)
                    .WithMany(p => p.Prerequisitos)
                    .HasForeignKey(d => new { d.Ccurricula, d.Ccurso })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_prerequisito_a_curricula_curso");
            });

            modelBuilder.Entity<PrerequisitoA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prerequisito_as");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");
            });

            modelBuilder.Entity<PrerequisitoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prerequisito_h");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");
            });

            modelBuilder.Entity<PrerequisitoOld>(entity =>
            {
                entity.HasKey(e => new { e.Ccurricula, e.Ccurso, e.CcursoRequisito })
                    .HasName("PK__prerequisito_old__659FB672");

                entity.ToTable("prerequisito_old");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");
            });

            modelBuilder.Entity<Presupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("presupuesto");

                entity.Property(e => e.Anio).HasColumnName("anio");

                entity.Property(e => e.CCuotas).HasColumnName("c_cuotas");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpresupuesto)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cpresupuesto");

                entity.Property(e => e.NCuotas).HasColumnName("n_cuotas");

                entity.Property(e => e.Semestre).HasColumnName("semestre");

                entity.Property(e => e.TotalEstudiantes).HasColumnName("total_estudiantes");
            });

            modelBuilder.Entity<PresupuestoPosgrado>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Ccarrera, e.Cperiodo, e.Ccurso, e.Ccurricula });

                entity.ToTable("presupuesto_posgrado");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.HorasReales)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("horas_reales");

                entity.Property(e => e.NmontoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_hora");
            });

            modelBuilder.Entity<Prioridad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prioridad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dmensaje)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dmensaje");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.FmatriculaFinal)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula_final");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");
            });

            modelBuilder.Entity<Proceso>(entity =>
            {
                entity.HasKey(e => e.Cproceso)
                    .HasName("PK__proceso__7D246A83");

                entity.ToTable("proceso");

                entity.Property(e => e.Cproceso)
                    .ValueGeneratedNever()
                    .HasColumnName("cproceso");

                entity.Property(e => e.Dproceso)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dproceso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Icompleto).HasColumnName("icompleto");
            });

            modelBuilder.Entity<ProcesoDiario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("proceso_diario");

                entity.Property(e => e.Dmensaje)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dmensaje");

                entity.Property(e => e.Dproceso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dproceso");

                entity.Property(e => e.Ffin)
                    .HasColumnType("datetime")
                    .HasColumnName("ffin");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<ProcesoPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("proceso_periodo");

                entity.Property(e => e.Cpaso)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cpaso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cproceso).HasColumnName("cproceso");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");
            });

            modelBuilder.Entity<ProcesoPeriodoLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("proceso_periodo_log");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cproceso).HasColumnName("cproceso");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Idcreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("idcreacion");

                entity.Property(e => e.Tlog)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tlog");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfAsistDistribucion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prof_asist_distribucion");

                entity.Property(e => e.Ccenrp)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("nhoras");
            });

            modelBuilder.Entity<ProfExcepcione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prof_excepciones");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cid");

                entity.Property(e => e.Copcion).HasColumnName("copcion");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Cusuariocrea).HasColumnName("cusuariocrea");

                entity.Property(e => e.Cusuariomod).HasColumnName("cusuariomod");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fparametro01)
                    .HasColumnType("datetime")
                    .HasColumnName("fparametro01");

                entity.Property(e => e.Fparametro02)
                    .HasColumnType("datetime")
                    .HasColumnName("fparametro02");

                entity.Property(e => e.Fparametro03)
                    .HasColumnType("datetime")
                    .HasColumnName("fparametro03");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iparametro04).HasColumnName("iparametro04");

                entity.Property(e => e.Iparametro05).HasColumnName("iparametro05");

                entity.Property(e => e.Iparametro06).HasColumnName("iparametro06");

                entity.Property(e => e.Siparametro07).HasColumnName("siparametro07");

                entity.Property(e => e.Siparametro08).HasColumnName("siparametro08");

                entity.Property(e => e.Siparametro09).HasColumnName("siparametro09");

                entity.Property(e => e.Vcparametro10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("vcparametro10");

                entity.Property(e => e.Vcparametro11)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("vcparametro11");

                entity.Property(e => e.Vcparametro12)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("vcparametro12");
            });

            modelBuilder.Entity<ProfPlanillaSalarioPost>(entity =>
            {
                entity.HasKey(e => e.Registro)
                    .HasName("PK_profesor_planilla_salario_postgrado");

                entity.ToTable("prof_planilla_salario_post");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.Aprobado).HasColumnName("aprobado");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_cheque");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Cpago)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cpago");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprocesopago)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cprocesopago");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionCheque)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_cheque");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.Fprocesopago)
                    .HasColumnType("datetime")
                    .HasColumnName("fprocesopago");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.HorasAsistidas)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("horas_asistidas");

                entity.Property(e => e.HorasCurricula)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("horas_curricula");

                entity.Property(e => e.HorasPagadas)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("horas_pagadas");

                entity.Property(e => e.HorasReales)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("horas_reales");

                entity.Property(e => e.Mensaje)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mensaje");

                entity.Property(e => e.NmontoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_hora");

                entity.Property(e => e.NmontoNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_neto_pagar");

                entity.Property(e => e.NroCheque)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nro_cheque");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.HasOne(d => d.CplanillaNavigation)
                    .WithMany(p => p.ProfPlanillaSalarioPosts)
                    .HasForeignKey(d => d.Cplanilla)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_prof_planilla_salario_post_configurar_planilla_posgrado");
            });

            modelBuilder.Entity<ProfPlanillaSalarioPre>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("prof_planilla_salario_pres");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.CargaHoraria).HasColumnName("carga_horaria");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Ccordinadora).HasColumnName("ccordinadora");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CmodificacionCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion_cheque");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Concepto)
                    .HasMaxLength(250)
                    .HasColumnName("concepto");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Descuento)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("descuento");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FmodificacionCheque)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion_cheque");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .HasColumnName("gtipo_planilla");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto");

                entity.Property(e => e.NmontoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_hora");

                entity.Property(e => e.NmontoNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_neto_pagar");

                entity.Property(e => e.Nrocheque)
                    .HasMaxLength(150)
                    .HasColumnName("nrocheque");

                entity.Property(e => e.Reporte).HasColumnName("reporte");

                entity.Property(e => e.TipoPlanillaDescuento)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("tipo_planilla_descuento");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfPlanillaSalarioTesi>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("prof_planilla_salario_tesis");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.AnioActa).HasColumnName("anio_acta");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.EstadoPago).HasColumnName("estado_pago");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FlagAprobacionPago)
                    .HasColumnName("flag_aprobacion_pago")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.NmontoNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_neto_pagar");

                entity.Property(e => e.NroActa).HasColumnName("nro_acta");

                entity.Property(e => e.NroCheque)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nro_cheque");

                entity.Property(e => e.NroMesa).HasColumnName("nro_mesa");

                entity.Property(e => e.TesisFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("tesis_fecha");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .HasDefaultValueSql("('D')");
            });

            modelBuilder.Entity<ProfPlanillaSalarioVirt>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("prof_planilla_salario_virt");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.CargaHoraria).HasColumnName("carga_horaria");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccarrera3).HasColumnName("ccarrera3");

                entity.Property(e => e.Ccarrera4).HasColumnName("ccarrera4");

                entity.Property(e => e.Ccarrera5).HasColumnName("ccarrera5");

                entity.Property(e => e.Ccarrera6).HasColumnName("ccarrera6");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario1");

                entity.Property(e => e.Comentario2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario2");

                entity.Property(e => e.ComentarioEee)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario_eee");

                entity.Property(e => e.ComentarioEf)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario_ef");

                entity.Property(e => e.ComentarioEfe)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("comentario_efe");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Descuento)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("descuento")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EstadoRegistro).HasColumnName("estado_registro");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoAsistencias).HasColumnName("gtipo_asistencias");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .HasColumnName("gtipo_planilla");

                entity.Property(e => e.HorasEee)
                    .HasColumnName("horas_eee")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HorasEf)
                    .HasColumnName("horas_ef")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HorasEfe)
                    .HasColumnName("horas_efe")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Mes).HasColumnName("mes");

                entity.Property(e => e.Nivel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nivel")
                    .IsFixedLength(true);

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NmontoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_hora")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NmontoNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_neto_pagar")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NroCreditos).HasColumnName("nro_creditos");

                entity.Property(e => e.NroSemanas).HasColumnName("nro_semanas");

                entity.Property(e => e.Nrocheque)
                    .HasMaxLength(150)
                    .HasColumnName("nrocheque");

                entity.Property(e => e.RegistroAsistencia).HasColumnName("registro_asistencia");

                entity.Property(e => e.Semestre).HasColumnName("semestre");

                entity.Property(e => e.TipoPlanillaDescuento)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("tipo_planilla_descuento")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<Profesor>(entity =>
            {
                entity.HasKey(e => e.Cprofesor)
                    .HasName("PK__profesor__2F6FF32E");

                entity.ToTable("profesor");

                entity.Property(e => e.Cprofesor)
                    .ValueGeneratedNever()
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Ccodtra)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ccodtra")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Escalafon).HasColumnName("escalafon");

                entity.Property(e => e.FlagProcesar)
                    .HasColumnName("flag_procesar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistenciaInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistencia_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gregimen).HasColumnName("gregimen");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.Tbancaria)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tbancaria");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.UrlConferencia)
                    .HasMaxLength(250)
                    .HasColumnName("url_conferencia");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.Profesors)
                    .HasForeignKey(d => d.Cpersona)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profesor_a_persona");
            });

            modelBuilder.Entity<ProfesorAsist>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.GtipoAsistencia, e.FinicioProg, e.Cprofesor });

                entity.ToTable("profesor_asist");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.FinicioProg, e.Cprofesor }, "i03_profesor_asist");

                entity.HasIndex(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.GtipoAsistencia, e.FinicioProg, e.Cprofesor }, "i03_profesor_asist_tkey");

                entity.HasIndex(e => new { e.FinicioProg, e.HfinalProg }, "i04_pro_asist_fini_prog_hfin_prog_cpro");

                entity.HasIndex(e => new { e.Cprofesor, e.FinicioProg }, "ia02_profesor_asists_cprofesor_finicio_prog");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo")
                    .HasComment("usuario que ingreso el control administrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo")
                    .HasComment("fecha y hora en que ingresaron el control");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true)
                    .HasComment("Campo control para marcar si los profesores vinieron o no");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121119>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121119");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121120>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121120");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121121>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121121");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121122>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121122");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121123>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121123");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistBorrado20121124>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_borrado_20121124");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_d");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.IdProfesorAsist).HasColumnName("id_profesor_asist");

                entity.Property(e => e.IdProfesorAsistD)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist_d");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<ProfesorAsistDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_d_h");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.IdProfesorAsist).HasColumnName("id_profesor_asist");

                entity.Property(e => e.IdProfesorAsistD).HasColumnName("id_profesor_asist_d");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<ProfesorAsistH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_h");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdCreacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_creacion");

                entity.Property(e => e.IdProfesorAsist).HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistManual>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("profesor_asist_manual");

                entity.Property(e => e.Registro)
                    .ValueGeneratedNever()
                    .HasColumnName("registro");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cplanilla).HasColumnName("cplanilla");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.EstadoPago)
                    .HasColumnName("estado_pago")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.HorasMarcadas)
                    .HasColumnType("datetime")
                    .HasColumnName("horas_marcadas");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistManualVirtual>(entity =>
            {
                entity.HasKey(e => e.Registro);

                entity.ToTable("profesor_asist_manual_virtual");

                entity.Property(e => e.Registro).HasColumnName("registro");

                entity.Property(e => e.Actividad).HasColumnName("actividad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.ChatLinea).HasColumnName("chat_linea");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Credito).HasColumnName("credito");

                entity.Property(e => e.EstadoPago).HasColumnName("estado_pago");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.ForoAyuda).HasColumnName("foro_ayuda");

                entity.Property(e => e.ForoNovedad).HasColumnName("foro_novedad");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoAsistencias).HasColumnName("gtipo_asistencias");

                entity.Property(e => e.Material).HasColumnName("material");

                entity.Property(e => e.Mes).HasColumnName("mes");

                entity.Property(e => e.NroSemanas)
                    .HasColumnName("nro_semanas")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Observacion).HasColumnName("observacion");

                entity.Property(e => e.Semana).HasColumnName("semana");

                entity.Property(e => e.Semestre).HasColumnName("semestre");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAsistMayor27062010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_asist_mayor_27062010");

                entity.Property(e => e.Cadministrativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cadministrativo");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fadministrativo)
                    .HasColumnType("datetime")
                    .HasColumnName("fadministrativo");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gadministrativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gadministrativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.NminutosAntes).HasColumnName("nminutos_antes");

                entity.Property(e => e.NminutosDespues).HasColumnName("nminutos_despues");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorAviso>(entity =>
            {
                entity.HasKey(e => e.CavisoProfesor);

                entity.ToTable("profesor_avisos");

                entity.Property(e => e.CavisoProfesor).HasColumnName("caviso_profesor");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Estado).HasColumnName("estado");
            });

            modelBuilder.Entity<ProfesorContenido>(entity =>
            {
                entity.ToTable("profesor_contenido");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CactividadesCheckbox1).HasColumnName("cactividades_checkbox1");

                entity.Property(e => e.CactividadesCheckbox2).HasColumnName("cactividades_checkbox2");

                entity.Property(e => e.CactividadesCheckbox3).HasColumnName("cactividades_checkbox3");

                entity.Property(e => e.CactividadesCheckbox4).HasColumnName("cactividades_checkbox4");

                entity.Property(e => e.CactividadesCheckbox5).HasColumnName("cactividades_checkbox5");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CestrategiaCheckbox1).HasColumnName("cestrategia_checkbox1");

                entity.Property(e => e.CestrategiaCheckbox2).HasColumnName("cestrategia_checkbox2");

                entity.Property(e => e.CestrategiaCheckbox3).HasColumnName("cestrategia_checkbox3");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ContenidoActitudinales)
                    .HasMaxLength(1200)
                    .HasColumnName("contenido_actitudinales");

                entity.Property(e => e.ContenidoConceptuales)
                    .HasMaxLength(1200)
                    .HasColumnName("contenido_conceptuales");

                entity.Property(e => e.ContenidoProcedimentales)
                    .HasMaxLength(1200)
                    .HasColumnName("contenido_procedimentales");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesormod).HasColumnName("cprofesormod");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DcapacidadesTrabajadas)
                    .HasMaxLength(500)
                    .HasColumnName("dcapacidades_trabajadas");

                entity.Property(e => e.Dcontenido)
                    .HasMaxLength(1200)
                    .IsUnicode(false)
                    .HasColumnName("dcontenido");

                entity.Property(e => e.Dmecanismo)
                    .HasMaxLength(500)
                    .HasColumnName("dmecanismo");

                entity.Property(e => e.DunidadTematica)
                    .HasMaxLength(500)
                    .HasColumnName("dunidad_tematica");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistroclase)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistroclase");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.TipoClase1).HasColumnName("tipo_clase1");

                entity.Property(e => e.TipoClase2).HasColumnName("tipo_clase2");

                entity.Property(e => e.TipoClase3).HasColumnName("tipo_clase3");

                entity.Property(e => e.TipoClase4).HasColumnName("tipo_clase4");
            });

            modelBuilder.Entity<ProfesorContenidoActividad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_contenido_actividad");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Dactividad)
                    .HasMaxLength(200)
                    .HasColumnName("dactividad");
            });

            modelBuilder.Entity<ProfesorContenidoEstrategia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_contenido_estrategias");

                entity.Property(e => e.Cestrategia).HasColumnName("cestrategia");

                entity.Property(e => e.Destrategia)
                    .HasMaxLength(200)
                    .HasColumnName("destrategia");
            });

            modelBuilder.Entity<ProfesorContenidoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_contenido_h");

                entity.Property(e => e.Accion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("accion");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesormod).HasColumnName("cprofesormod");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcontenido)
                    .HasMaxLength(1200)
                    .IsUnicode(false)
                    .HasColumnName("dcontenido");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistroclase)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistroclase");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<ProfesorContenidoTipoClase>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_contenido_tipo_clase");

                entity.Property(e => e.CtipoClase).HasColumnName("ctipo_clase");

                entity.Property(e => e.DtipoClase)
                    .HasMaxLength(50)
                    .HasColumnName("dtipo_clase");
            });

            modelBuilder.Entity<ProfesorCurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_curso");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.HasOne(d => d.CprofesorNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cprofesor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profesor_curso_a_profesor");
            });

            modelBuilder.Entity<ProfesorCursoPrecio>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Cprofesor, e.Ccurso, e.Cbloque });

                entity.ToTable("profesor_curso_precio");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.PagoHora)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("pago_hora")
                    .HasDefaultValueSql("((40000))");
            });

            modelBuilder.Entity<ProfesorDisp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_disp");

                entity.HasIndex(e => e.Cprofesor, "ClusteredIndex-20190212-161108_cprofesor")
                    .IsClustered();

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.HasOne(d => d.CprofesorNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cprofesor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_profesor_disp_a_profesor");
            });

            modelBuilder.Entity<ProfesorEntregaNotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_entrega_nota");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fentrega)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gentrega).HasColumnName("gentrega");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<ProfesorH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_h");

                entity.Property(e => e.Ccodtra)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ccodtra")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gregimen).HasColumnName("gregimen");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.Tbancaria)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tbancaria");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<ProfesorIngresoEgreso>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cprofesor, e.Cpersona, e.Gtipo, e.Nregistro });

                entity.ToTable("profesor_ingreso_egreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Gtipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo")
                    .IsFixedLength(true);

                entity.Property(e => e.Nregistro).HasColumnName("nregistro");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Imonto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("imonto");

                entity.Property(e => e.Tobservacion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");
            });

            modelBuilder.Entity<ProfesorTema>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_temas");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Fasistencia)
                    .HasColumnType("datetime")
                    .HasColumnName("fasistencia");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<ProfesorTipoPlanilla>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Cprofesor });

                entity.ToTable("profesor_tipo_planilla");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPlanilla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_planilla")
                    .IsFixedLength(true);

                entity.Property(e => e.MontoMensual)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("monto_mensual");

                entity.Property(e => e.MontoProyectado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("monto_proyectado");

                entity.Property(e => e.UsuarioCreacion)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ProfesorVirtual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profesor_virtual");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");
            });

            modelBuilder.Entity<Programa>(entity =>
            {
                entity.HasKey(e => e.Cprograma)
                    .HasName("PK__programa__6DA22FD1");

                entity.ToTable("programa");

                entity.Property(e => e.Cprograma)
                    .ValueGeneratedNever()
                    .HasColumnName("cprograma");

                entity.Property(e => e.CgrupoCatProf).HasColumnName("cgrupo_cat_prof");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GeventoExtra)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gevento_extra")
                    .IsFixedLength(true);

                entity.Property(e => e.Ginfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ginfosil")
                    .IsFixedLength(true);

                entity.Property(e => e.GprocesaAsist)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gprocesa_asist")
                    .IsFixedLength(true);

                entity.Property(e => e.NnotaMaxima)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_maxima");

                entity.Property(e => e.NnotaMinima)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_minima");

                entity.Property(e => e.Sprograma)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sprograma");

                entity.HasOne(d => d.CinstitucionNavigation)
                    .WithMany(p => p.Programas)
                    .HasForeignKey(d => d.Cinstitucion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_programa_a_institucion");
            });

            modelBuilder.Entity<ProgramaEducativo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("programa_educativo");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Scategoria)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("scategoria");
            });

            modelBuilder.Entity<ProgramaPension>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("programa_pension");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.NimpMaximo)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_maximo");

                entity.Property(e => e.NimpMinimo)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_minimo");
            });

            modelBuilder.Entity<PromFinalCsir>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prom_final_csir");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.NpromFinal)
                    .HasColumnType("decimal(6, 3)")
                    .HasColumnName("nprom_final");
            });

            modelBuilder.Entity<Promotor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("promotor");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<PropiedadEdicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("propiedad_edicion");

                entity.Property(e => e.Ctiempo).HasColumnName("ctiempo");

                entity.Property(e => e.Cvisible).HasColumnName("cvisible");

                entity.Property(e => e.Dcampo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcampo");

                entity.Property(e => e.Ddatawindow)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddatawindow");
            });

            modelBuilder.Entity<Rango>(entity =>
            {
                entity.HasKey(e => new { e.Clocal, e.Dtabla })
                    .HasName("PK__rango__074CF33B");

                entity.ToTable("rango");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Dtabla)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dtabla");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nmaximo).HasColumnName("nmaximo");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");
            });

            modelBuilder.Entity<RangoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rango_h");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dtabla)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dtabla");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nmaximo).HasColumnName("nmaximo");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");
            });

            modelBuilder.Entity<RegistroEntradaApp>(entity =>
            {
                entity.HasKey(e => e.IdRegistro)
                    .HasName("PK__registro__48155C1FFF183A65");

                entity.ToTable("registro_entrada_app ");

                entity.Property(e => e.IdRegistro).HasColumnName("id_registro");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo)
                    .HasMaxLength(150)
                    .HasColumnName("cperiodo");

                entity.Property(e => e.FechaDeIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_de_Ingreso")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Nombre).HasMaxLength(150);

                entity.Property(e => e.PersonaRegistro)
                    .HasMaxLength(50)
                    .HasColumnName("Persona_Registro");
            });

            modelBuilder.Entity<RegistroEntradum>(entity =>
            {
                entity.ToTable("registro_entrada ");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.FechaDeIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_de_Ingreso")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ip).HasMaxLength(50);

                entity.Property(e => e.Nombre).HasMaxLength(150);

                entity.Property(e => e.TipoDeRegistro)
                    .HasMaxLength(50)
                    .HasColumnName("Tipo_de_Registro");
            });

            modelBuilder.Entity<RegistroFuncionario>(entity =>
            {
                entity.HasKey(e => e.Cregistro);

                entity.ToTable("registro_funcionario");

                entity.Property(e => e.Cregistro).HasColumnName("cregistro");

                entity.Property(e => e.CiFuncionario)
                    .HasMaxLength(20)
                    .HasColumnName("ci_funcionario");

                entity.Property(e => e.Dfuncionario)
                    .HasMaxLength(80)
                    .HasColumnName("dfuncionario");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FhoraAlmuerzoEntrada)
                    .HasColumnType("datetime")
                    .HasColumnName("fhora_almuerzo_entrada");

                entity.Property(e => e.FhoraAlmuerzoSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("fhora_almuerzo_salida");

                entity.Property(e => e.FhoraEntrada)
                    .HasColumnType("datetime")
                    .HasColumnName("fhora_entrada");

                entity.Property(e => e.FhoraSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("fhora_salida");

                entity.Property(e => e.IpRegistro)
                    .HasMaxLength(50)
                    .HasColumnName("ip_registro");

                entity.Property(e => e.PersonaRegistro)
                    .HasMaxLength(50)
                    .HasColumnName("persona_registro");
            });

            modelBuilder.Entity<RendimientoApp>(entity =>
            {
                entity.HasKey(e => e.Crendimiento);

                entity.ToTable("rendimiento_app");

                entity.Property(e => e.Crendimiento).HasColumnName("crendimiento");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(50)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasMaxLength(50)
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Drendimiento).HasColumnName("drendimiento");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ReqDpto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("req_dpto");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("departamento");

                entity.Property(e => e.IdDepartamento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_departamento");
            });

            modelBuilder.Entity<Requerimiento>(entity =>
            {
                entity.HasKey(e => new { e.Ninterno, e.Nrequerimiento });

                entity.ToTable("requerimiento");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Nrequerimiento).HasColumnName("nrequerimiento");

                entity.Property(e => e.AnioDocumento).HasColumnName("anio_documento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Catendido).HasColumnName("catendido");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CorrelativoAlumnoAnio).HasColumnName("correlativo_alumno_anio");

                entity.Property(e => e.CorrelativoTotalAnio).HasColumnName("correlativo_total_anio");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Farchivado)
                    .HasColumnType("datetime")
                    .HasColumnName("farchivado");

                entity.Property(e => e.Fcierre)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.FultimoFlujo)
                    .HasColumnType("datetime")
                    .HasColumnName("fultimo_flujo");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Gturno).HasColumnName("gturno");

                entity.Property(e => e.Imagen).HasColumnName("imagen");

                entity.Property(e => e.NroDocumento).HasColumnName("nro_documento");

                entity.Property(e => e.TipoNota).HasColumnName("tipo_nota");
            });

            modelBuilder.Entity<Requerimiento1>(entity =>
            {
                entity.HasKey(e => e.IdRequerimiento);

                entity.ToTable("requerimientos");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_requerimiento");

                entity.Property(e => e.Requerimiento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("requerimiento");
            });

            modelBuilder.Entity<RequerimientoArea>(entity =>
            {
                entity.HasKey(e => e.Carea);

                entity.ToTable("requerimiento_area");

                entity.Property(e => e.Carea)
                    .ValueGeneratedNever()
                    .HasColumnName("carea");

                entity.Property(e => e.Darea)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("darea");
            });

            modelBuilder.Entity<RequerimientoAreaUsuario>(entity =>
            {
                entity.HasKey(e => new { e.Carea, e.Cusuario });

                entity.ToTable("requerimiento_area_usuario");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");
            });

            modelBuilder.Entity<RequerimientoFlujo>(entity =>
            {
                entity.HasKey(e => new { e.Ninterno, e.Nrequerimiento, e.Nviaje })
                    .HasName("PK_requerimiento_flujo_1");

                entity.ToTable("requerimiento_flujo");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Nrequerimiento).HasColumnName("nrequerimiento");

                entity.Property(e => e.Nviaje).HasColumnName("nviaje");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(255)
                    .HasColumnName("comentario");

                entity.Property(e => e.Crecepcion).HasColumnName("crecepcion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FdigitacionComentario)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigitacion_comentario");

                entity.Property(e => e.Fentrega)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecepcion)
                    .HasColumnType("datetime")
                    .HasColumnName("frecepcion");
            });

            modelBuilder.Entity<RequerimientoFlujoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("requerimiento_flujo_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Crecepcion).HasColumnName("crecepcion");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fentrega)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecepcion)
                    .HasColumnType("datetime")
                    .HasColumnName("frecepcion");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Nrequerimiento).HasColumnName("nrequerimiento");

                entity.Property(e => e.Nviaje).HasColumnName("nviaje");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RequerimientoH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("requerimiento_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Catendido).HasColumnName("catendido");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Farchivado)
                    .HasColumnType("datetime")
                    .HasColumnName("farchivado");

                entity.Property(e => e.Fauditoria)
                    .HasColumnType("datetime")
                    .HasColumnName("fauditoria");

                entity.Property(e => e.Fcierre)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fsolicitado)
                    .HasColumnType("datetime")
                    .HasColumnName("fsolicitado");

                entity.Property(e => e.FultimoFlujo)
                    .HasColumnType("datetime")
                    .HasColumnName("fultimo_flujo");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.Gturno).HasColumnName("gturno");

                entity.Property(e => e.Ninterno).HasColumnName("ninterno");

                entity.Property(e => e.Nrequerimiento).HasColumnName("nrequerimiento");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RequerimientoTipo>(entity =>
            {
                entity.HasKey(e => e.Gtipo);

                entity.ToTable("requerimiento_tipo");

                entity.Property(e => e.Gtipo)
                    .ValueGeneratedNever()
                    .HasColumnName("gtipo");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Dtipo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dtipo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<ReservaEquipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("reserva_equipos");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cequipo).HasColumnName("cequipo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreservaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("freserva_fin");

                entity.Property(e => e.FreservaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("freserva_inicio");
            });

            modelBuilder.Entity<Resolucion>(entity =>
            {
                entity.HasKey(e => e.Nresolucion);

                entity.ToTable("resolucion");

                entity.Property(e => e.Nresolucion)
                    .ValueGeneratedNever()
                    .HasColumnName("nresolucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dresolucion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dresolucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");
            });

            modelBuilder.Entity<ResolucionArchivo>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cfacultad, e.TipoResolucion, e.NroResolucion, e.AnioResolucion });

                entity.ToTable("resolucion_archivo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cfacultad)
                    .HasColumnName("cfacultad")
                    .HasDefaultValueSql("((1))")
                    .HasComment("1:UNIDA,2:Fac. Salud,3:Fac. Ciencias Jurídicas,4:Fac. Gestión,5:Fac. Ingenierias,6:Facultad de Educacion a Distancia y Semipresencial");

                entity.Property(e => e.TipoResolucion).HasColumnName("tipo_resolucion");

                entity.Property(e => e.NroResolucion).HasColumnName("nro_resolucion");

                entity.Property(e => e.AnioResolucion).HasColumnName("anio_resolucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .HasColumnName("nombre_archivo");

                entity.Property(e => e.NroResolucionCadena)
                    .HasMaxLength(5)
                    .HasColumnName("nro_resolucion_cadena");

                entity.Property(e => e.NroResolucionOrden)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nro_resolucion_orden");

                entity.Property(e => e.Resolucion)
                    .HasColumnType("image")
                    .HasColumnName("resolucion");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(500)
                    .HasColumnName("tipo_documento");
            });

            modelBuilder.Entity<ResolucionH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("resolucion_h");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dresolucion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dresolucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Nresolucion).HasColumnName("nresolucion");
            });

            modelBuilder.Entity<RetroalimentacionCoordinadorDocente>(entity =>
            {
                entity.ToTable("retroalimentacion_coordinador_docente");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cuestionario)
                    .HasMaxLength(20)
                    .HasColumnName("cuestionario");

                entity.Property(e => e.CusuarioCoordinador).HasColumnName("cusuario_coordinador");

                entity.Property(e => e.Drecomendacion)
                    .HasMaxLength(1000)
                    .HasColumnName("drecomendacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<RevisaFicha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Revisa_ficha");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dcurso")
                    .IsFixedLength(true);

                entity.Property(e => e.Scurso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("scurso")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RobotFicha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("robot_ficha");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dmodalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Gestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Sbenef00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sbenef00");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.NbenefDefin).HasColumnName("nbenef_defin");

                entity.Property(e => e.NbenefProvi).HasColumnName("nbenef_provi");

                entity.Property(e => e.Nmatriculados).HasColumnName("nmatriculados");

                entity.Property(e => e.Nperio).HasColumnName("nperio");

                entity.Property(e => e.PbenefDefin)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("pbenef_defin");

                entity.Property(e => e.PbenefProvi)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("pbenef_provi");
            });

            modelBuilder.Entity<Scarrera00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("scarrera00");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Qactivos).HasColumnName("qactivos");

                entity.Property(e => e.Qegresados).HasColumnName("qegresados");

                entity.Property(e => e.QexpConducta).HasColumnName("qexp_conducta");

                entity.Property(e => e.QexpNotas).HasColumnName("qexp_notas");

                entity.Property(e => e.Qmatriculados).HasColumnName("qmatriculados");

                entity.Property(e => e.Qnuevos).HasColumnName("qnuevos");

                entity.Property(e => e.Qreserva).HasColumnName("qreserva");

                entity.Property(e => e.QretiroDefinitivo).HasColumnName("qretiro_definitivo");

                entity.Property(e => e.QretiroPeriodo).HasColumnName("qretiro_periodo");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SeccionEvaluacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("seccion_evaluacion");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Dseccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dseccion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Sseccion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sseccion");
            });

            modelBuilder.Entity<SeguimientoAlumno>(entity =>
            {
                entity.HasKey(e => new { e.Cperiodo, e.Ccarrera, e.Calumno, e.Ccurso });

                entity.ToTable("seguimiento_alumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Accion1)
                    .HasMaxLength(150)
                    .HasColumnName("accion1");

                entity.Property(e => e.Accion2)
                    .HasMaxLength(150)
                    .HasColumnName("accion2");

                entity.Property(e => e.Accion3)
                    .HasMaxLength(150)
                    .HasColumnName("accion3");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ucreacion)
                    .HasMaxLength(15)
                    .HasColumnName("ucreacion");

                entity.Property(e => e.Umodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("umodificacion");
            });

            modelBuilder.Entity<SeguimientoAlumnoMatriculado>(entity =>
            {
                entity.HasKey(e => new { e.Cinstitucion, e.Cprograma, e.Cperiodo, e.Calumno, e.Semana, e.AccionNro });

                entity.ToTable("seguimiento_alumno_matriculado");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Semana).HasColumnName("semana");

                entity.Property(e => e.AccionNro).HasColumnName("accion_nro");

                entity.Property(e => e.Accion)
                    .HasMaxLength(150)
                    .HasColumnName("accion");

                entity.Property(e => e.AccionFcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("accion_fcreacion");

                entity.Property(e => e.AccionFmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("accion_fmodificacion");

                entity.Property(e => e.AccionUcreacion)
                    .HasMaxLength(15)
                    .HasColumnName("accion_ucreacion");

                entity.Property(e => e.AccionUmodificacion)
                    .HasMaxLength(15)
                    .HasColumnName("accion_umodificacion");

                entity.Property(e => e.Caccion).HasColumnName("caccion");
            });

            modelBuilder.Entity<SerieCelularesLima>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("serie_celulares_lima");

                entity.Property(e => e.Costo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("costo");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("empresa");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("serie");
            });

            modelBuilder.Entity<ServiciosUnidum>(entity =>
            {
                entity.HasKey(e => e.Idservicio)
                    .HasName("PK__servicio__46FDB924818FD6DA");

                entity.ToTable("servicios_unida");

                entity.Property(e => e.Idservicio).HasColumnName("idservicio");

                entity.Property(e => e.Autorizado).HasColumnName("autorizado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cservicio).HasColumnName("cservicio");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_registro");
            });

            modelBuilder.Entity<ServisilAlertum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_alerta");

                entity.Property(e => e.Alerta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("alerta");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");
            });

            modelBuilder.Entity<ServisilArea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_area");

                entity.Property(e => e.Carea)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("carea");

                entity.Property(e => e.Darea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("darea");

                entity.Property(e => e.Sarea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sarea")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ServisilCola>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_cola");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CtipoCliente).HasColumnName("ctipo_cliente");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FfinalAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_atencion");

                entity.Property(e => e.FinicioAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_atencion");

                entity.Property(e => e.Fticket)
                    .HasColumnType("datetime")
                    .HasColumnName("fticket");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GmostrarTv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gmostrar_tv")
                    .IsFixedLength(true);

                entity.Property(e => e.Natencion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("natencion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sarea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sarea")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfotocheck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfotocheck")
                    .IsFixedLength(true);

                entity.Property(e => e.Sticket)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sticket");

                entity.Property(e => e.SticketMostrar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sticket_mostrar");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ServisilCola2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_cola2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CtipoCliente).HasColumnName("ctipo_cliente");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FfinalAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_atencion");

                entity.Property(e => e.FinicioAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_atencion");

                entity.Property(e => e.Fticket)
                    .HasColumnType("datetime")
                    .HasColumnName("fticket");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GmostrarTv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gmostrar_tv")
                    .IsFixedLength(true);

                entity.Property(e => e.Natencion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("natencion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sarea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sarea")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfotocheck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfotocheck")
                    .IsFixedLength(true);

                entity.Property(e => e.Sticket)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sticket");

                entity.Property(e => e.SticketMostrar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sticket_mostrar");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ServisilMensaje>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_mensaje");

                entity.Property(e => e.Cmensaje)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cmensaje");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dmensaje)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("dmensaje");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<ServisilMenuPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_menu_persona");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Copcion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("copcion");

                entity.Property(e => e.CtipoMenu).HasColumnName("ctipo_menu");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<ServisilModulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_modulo");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Dmodulo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dmodulo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Smodulo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("smodulo");
            });

            modelBuilder.Entity<ServisilParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_parametro");

                entity.Property(e => e.Cparametro).HasColumnName("cparametro");

                entity.Property(e => e.Dparametro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dparametro");

                entity.Property(e => e.Nvalor).HasColumnName("nvalor");

                entity.Property(e => e.Sparametro)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sparametro");
            });

            modelBuilder.Entity<ServisilPermiso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_permiso");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Sarea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sarea")
                    .IsFixedLength(true);

                entity.Property(e => e.Sfotocheck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfotocheck")
                    .IsFixedLength(true);

                entity.Property(e => e.Stipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stipo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ServisilTipoMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("servisil_tipo_menu");

                entity.Property(e => e.CtipoMenu)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ctipo_menu");

                entity.Property(e => e.Druta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("druta");

                entity.Property(e => e.DtipoMenu)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_menu");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.StipoMenu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stipo_menu")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SigIndex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sig_indices");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cindice).HasColumnName("cindice");

                entity.Property(e => e.Dcalculo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dcalculo")
                    .IsFixedLength(true);

                entity.Property(e => e.Dindice)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dindice")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Sindice)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sindice")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SigOpcionAutor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sig_opcion_autor");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Copcion).HasColumnName("copcion");

                entity.Property(e => e.Dusuario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dusuario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<SigOpciones2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sig_opciones2");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Copcion).HasColumnName("copcion");

                entity.Property(e => e.Dopcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dopcion");

                entity.Property(e => e.Druta)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("druta");

                entity.Property(e => e.Gayuda)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("gayuda")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grestringido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grestringido")
                    .IsFixedLength(true);

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<SigOpcionesProg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sig_opciones_prog");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Copcion).HasColumnName("copcion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<SigValoresIndex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sig_valores_indices");

                entity.Property(e => e.Cindice).HasColumnName("cindice");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Findice)
                    .HasColumnType("datetime")
                    .HasColumnName("findice");

                entity.Property(e => e.Gvariacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvariacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("nvalor");
            });

            modelBuilder.Entity<SistemaConfiguracion>(entity =>
            {
                entity.HasKey(e => e.Cconfiguracion)
                    .HasName("PK__sistema_configur__2449249C");

                entity.ToTable("sistema_configuracion");

                entity.Property(e => e.Cconfiguracion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("cconfiguracion");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");
            });

            modelBuilder.Entity<Software>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("software");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Csoftware).HasColumnName("csoftware");

                entity.Property(e => e.Dsoftware)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dsoftware");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gfabricante).HasColumnName("gfabricante");

                entity.Property(e => e.Ssoftware)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ssoftware");

                entity.Property(e => e.Tversion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tversion");
            });

            modelBuilder.Entity<SpuControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spu_control");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cevaluacion1).HasColumnName("cevaluacion1");

                entity.Property(e => e.Cevaluacion2).HasColumnName("cevaluacion2");

                entity.Property(e => e.Cevaluacion3).HasColumnName("cevaluacion3");

                entity.Property(e => e.Cevaluacion4).HasColumnName("cevaluacion4");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Dcapa)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("dcapa")
                    .IsFixedLength(true);

                entity.Property(e => e.DcapaInicial)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dcapa_inicial")
                    .IsFixedLength(true);

                entity.Property(e => e.FcarneEmitido)
                    .HasColumnType("datetime")
                    .HasColumnName("fcarne_emitido");

                entity.Property(e => e.Fdigitacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigitacion");

                entity.Property(e => e.FemisionClaves)
                    .HasColumnType("datetime")
                    .HasColumnName("femision_claves");

                entity.Property(e => e.FentregaFichaspend)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega_fichaspend");

                entity.Property(e => e.FentregaFotospend)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrega_fotospend");

                entity.Property(e => e.FenvioMaterial)
                    .HasColumnType("datetime")
                    .HasColumnName("fenvio_material");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.FrecepcionFichas)
                    .HasColumnType("datetime")
                    .HasColumnName("frecepcion_fichas");

                entity.Property(e => e.FsalidaCourier)
                    .HasColumnType("datetime")
                    .HasColumnName("fsalida_courier");

                entity.Property(e => e.GcarneEmitido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarne_emitido")
                    .IsFixedLength(true);

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.GemisionClaves)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gemision_claves")
                    .IsFixedLength(true);

                entity.Property(e => e.GenProceso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gen_proceso")
                    .IsFixedLength(true);

                entity.Property(e => e.Gengrapado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gengrapado")
                    .IsFixedLength(true);

                entity.Property(e => e.GenvioMaterial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("genvio_material")
                    .IsFixedLength(true);

                entity.Property(e => e.GrecepcionFichas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grecepcion_fichas")
                    .IsFixedLength(true);

                entity.Property(e => e.GsalidaCourier)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gsalida_courier")
                    .IsFixedLength(true);

                entity.Property(e => e.NalumnosAula).HasColumnName("nalumnos_aula");

                entity.Property(e => e.NalumnosTotal).HasColumnName("nalumnos_total");

                entity.Property(e => e.Naula1).HasColumnName("naula1");

                entity.Property(e => e.Naula10).HasColumnName("naula10");

                entity.Property(e => e.Naula2).HasColumnName("naula2");

                entity.Property(e => e.Naula3).HasColumnName("naula3");

                entity.Property(e => e.Naula4).HasColumnName("naula4");

                entity.Property(e => e.Naula5).HasColumnName("naula5");

                entity.Property(e => e.Naula6).HasColumnName("naula6");

                entity.Property(e => e.Naula7).HasColumnName("naula7");

                entity.Property(e => e.Naula8).HasColumnName("naula8");

                entity.Property(e => e.Naula9).HasColumnName("naula9");

                entity.Property(e => e.Naulas).HasColumnName("naulas");

                entity.Property(e => e.NcargoCarta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ncargo_carta");

                entity.Property(e => e.NfichasPendientes).HasColumnName("nfichas_pendientes");

                entity.Property(e => e.NfichasRecibidas).HasColumnName("nfichas_recibidas");

                entity.Property(e => e.NfotosPendientes).HasColumnName("nfotos_pendientes");

                entity.Property(e => e.Ningresantes).HasColumnName("ningresantes");

                entity.Property(e => e.NinscritosEv1).HasColumnName("ninscritos_ev1");

                entity.Property(e => e.NinscritosEv2).HasColumnName("ninscritos_ev2");

                entity.Property(e => e.NinscritosEv3).HasColumnName("ninscritos_ev3");

                entity.Property(e => e.NinscritosEv4).HasColumnName("ninscritos_ev4");

                entity.Property(e => e.Nmatriculados).HasColumnName("nmatriculados");

                entity.Property(e => e.NpersonalColegio).HasColumnName("npersonal_colegio");

                entity.Property(e => e.NpersonalUsil).HasColumnName("npersonal_usil");

                entity.Property(e => e.Npostulantes).HasColumnName("npostulantes");
            });

            modelBuilder.Entity<SpuControlParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spu_control_parametro");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cevaluacion1).HasColumnName("cevaluacion1");

                entity.Property(e => e.Cevaluacion2).HasColumnName("cevaluacion2");

                entity.Property(e => e.Cevaluacion3).HasColumnName("cevaluacion3");

                entity.Property(e => e.Cevaluacion4).HasColumnName("cevaluacion4");

                entity.Property(e => e.Factualizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("factualizacion");
            });

            modelBuilder.Entity<SpuControlPersonal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spu_control_personal");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.GtipoPersona).HasColumnName("gtipo_persona");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Tarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tarea");
            });

            modelBuilder.Entity<Spuclaves01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spuclaves01");

                entity.Property(e => e.Canio).HasColumnName("canio");

                entity.Property(e => e.Cclave).HasColumnName("cclave");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("deducativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Dnombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dnombre")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Simpre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("simpre")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<StadMatriculaEvol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("stad_matricula_evol");

                entity.Property(e => e.Aaaammdd)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("aaaammdd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestancia).HasColumnName("cestancia");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.FprocesoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso_matricula");

                entity.Property(e => e.GtipoMatricula).HasColumnName("gtipo_matricula");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.Nvalor).HasColumnName("nvalor");
            });

            modelBuilder.Entity<Subperiodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("subperiodo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Csubperiodo).HasColumnName("csubperiodo");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssubperiodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ssubperiodo");
            });

            modelBuilder.Entity<SumAlumnoXEgresar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_alumno_x_egresar");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<SumAlumnoXEgresar2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_alumno_x_egresar2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<SumAutorizaMatri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_autoriza_matri");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.GtipoAutorizacion).HasColumnName("gtipo_autorizacion");

                entity.Property(e => e.GtipoPermiso)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_permiso")
                    .IsFixedLength(true);

                entity.Property(e => e.Nautorizaciones).HasColumnName("nautorizaciones");

                entity.Property(e => e.SusuarioAut)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_aut");

                entity.Property(e => e.SusuarioReg)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_reg");
            });

            modelBuilder.Entity<SumAvanceMatricula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_avance_matricula");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CperiodoSum).HasColumnName("cperiodo_sum");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoAlumno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctipo_alumno")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Qasegurados).HasColumnName("qasegurados");

                entity.Property(e => e.QmatriNoPago).HasColumnName("qmatri_no_pago");

                entity.Property(e => e.QmatriPago).HasColumnName("qmatri_pago");

                entity.Property(e => e.QmatriTotal).HasColumnName("qmatri_total");

                entity.Property(e => e.QnomatriNoPago).HasColumnName("qnomatri_no_pago");

                entity.Property(e => e.QnomatriPago).HasColumnName("qnomatri_pago");

                entity.Property(e => e.QnomatriTotal).HasColumnName("qnomatri_total");

                entity.Property(e => e.QtotalNoPago).HasColumnName("qtotal_no_pago");

                entity.Property(e => e.QtotalPago).HasColumnName("qtotal_pago");
            });

            modelBuilder.Entity<SumAvanceMatriculaD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_avance_matricula_d");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.CperiodoSum).HasColumnName("cperiodo_sum");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctpalu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpalu")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gpago)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpago")
                    .IsFixedLength(true);

                entity.Property(e => e.Grecuperado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grecuperado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumAvanceMatriculaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_avance_matricula_h");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CperiodoSum).HasColumnName("cperiodo_sum");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoAlumno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctipo_alumno")
                    .IsFixedLength(true);

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Qasegurados).HasColumnName("qasegurados");

                entity.Property(e => e.QmatriNoPago).HasColumnName("qmatri_no_pago");

                entity.Property(e => e.QmatriPago).HasColumnName("qmatri_pago");

                entity.Property(e => e.QmatriTotal).HasColumnName("qmatri_total");

                entity.Property(e => e.QnomatriNoPago).HasColumnName("qnomatri_no_pago");

                entity.Property(e => e.QnomatriPago).HasColumnName("qnomatri_pago");

                entity.Property(e => e.QnomatriTotal).HasColumnName("qnomatri_total");

                entity.Property(e => e.QtotalNoPago).HasColumnName("qtotal_no_pago");

                entity.Property(e => e.QtotalPago).HasColumnName("qtotal_pago");
            });

            modelBuilder.Entity<SumControlCuotasC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_control_cuotas_c");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarre)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dcarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcondicion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dcondicion")
                    .IsFixedLength(true);

                entity.Property(e => e.Destado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("destado")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Idocum01)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_01");

                entity.Property(e => e.Idocum02)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_02");

                entity.Property(e => e.Idocum03)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_03");

                entity.Property(e => e.Idocum04)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_04");

                entity.Property(e => e.Idocum05)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_05");

                entity.Property(e => e.Idocum06)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_06");

                entity.Property(e => e.Idocum07)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_07");

                entity.Property(e => e.Idocum08)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_08");

                entity.Property(e => e.Idocum09)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_09");

                entity.Property(e => e.Idocum10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_10");

                entity.Property(e => e.Isaldo01)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_01");

                entity.Property(e => e.Isaldo02)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_02");

                entity.Property(e => e.Isaldo03)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_03");

                entity.Property(e => e.Isaldo04)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_04");

                entity.Property(e => e.Isaldo05)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_05");

                entity.Property(e => e.Isaldo06)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_06");

                entity.Property(e => e.Isaldo07)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_07");

                entity.Property(e => e.Isaldo08)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_08");

                entity.Property(e => e.Isaldo09)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_09");

                entity.Property(e => e.Isaldo10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_10");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Qdeudor01).HasColumnName("qdeudor_01");

                entity.Property(e => e.Qdeudor02).HasColumnName("qdeudor_02");

                entity.Property(e => e.Qdeudor03).HasColumnName("qdeudor_03");

                entity.Property(e => e.Qdeudor04).HasColumnName("qdeudor_04");

                entity.Property(e => e.Qdeudor05).HasColumnName("qdeudor_05");

                entity.Property(e => e.Qdeudor06).HasColumnName("qdeudor_06");

                entity.Property(e => e.Qdeudor07).HasColumnName("qdeudor_07");

                entity.Property(e => e.Qdeudor08).HasColumnName("qdeudor_08");

                entity.Property(e => e.Qdeudor09).HasColumnName("qdeudor_09");

                entity.Property(e => e.Qdeudor10).HasColumnName("qdeudor_10");
            });

            modelBuilder.Entity<SumControlCuotasD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_control_cuotas_d");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctpdoc01)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_01")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc02)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_02")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc03)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_03")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc04)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_04")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc05)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_05")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc06)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_06")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc07)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_07")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc08)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_08")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc09)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_09")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpdoc10)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_10")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarre)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dcarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcondicion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dcondicion")
                    .IsFixedLength(true);

                entity.Property(e => e.Destado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("destado")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Idocum01)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_01");

                entity.Property(e => e.Idocum02)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_02");

                entity.Property(e => e.Idocum03)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_03");

                entity.Property(e => e.Idocum04)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_04");

                entity.Property(e => e.Idocum05)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_05");

                entity.Property(e => e.Idocum06)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_06");

                entity.Property(e => e.Idocum07)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_07");

                entity.Property(e => e.Idocum08)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_08");

                entity.Property(e => e.Idocum09)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_09");

                entity.Property(e => e.Idocum10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("idocum_10");

                entity.Property(e => e.Isaldo01)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_01");

                entity.Property(e => e.Isaldo02)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_02");

                entity.Property(e => e.Isaldo03)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_03");

                entity.Property(e => e.Isaldo04)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_04");

                entity.Property(e => e.Isaldo05)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_05");

                entity.Property(e => e.Isaldo06)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_06");

                entity.Property(e => e.Isaldo07)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_07");

                entity.Property(e => e.Isaldo08)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_08");

                entity.Property(e => e.Isaldo09)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_09");

                entity.Property(e => e.Isaldo10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_10");

                entity.Property(e => e.Ndocum01).HasColumnName("ndocum_01");

                entity.Property(e => e.Ndocum02).HasColumnName("ndocum_02");

                entity.Property(e => e.Ndocum03).HasColumnName("ndocum_03");

                entity.Property(e => e.Ndocum04).HasColumnName("ndocum_04");

                entity.Property(e => e.Ndocum05).HasColumnName("ndocum_05");

                entity.Property(e => e.Ndocum06).HasColumnName("ndocum_06");

                entity.Property(e => e.Ndocum07).HasColumnName("ndocum_07");

                entity.Property(e => e.Ndocum08).HasColumnName("ndocum_08");

                entity.Property(e => e.Ndocum09).HasColumnName("ndocum_09");

                entity.Property(e => e.Ndocum10).HasColumnName("ndocum_10");

                entity.Property(e => e.Nperio)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumEscalaDeudor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_escala_deudor");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Drango)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("drango")
                    .IsFixedLength(true);

                entity.Property(e => e.Isalmn)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isalmn");

                entity.Property(e => e.Nrango).HasColumnName("nrango");

                entity.Property(e => e.Qalumn).HasColumnName("qalumn");
            });

            modelBuilder.Entity<SumEvolucion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_evolucion");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Coperacion).HasColumnName("coperacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.N0401).HasColumnName("n0401");

                entity.Property(e => e.N0402).HasColumnName("n0402");

                entity.Property(e => e.N0501).HasColumnName("n0501");

                entity.Property(e => e.N0502).HasColumnName("n0502");

                entity.Property(e => e.N0601).HasColumnName("n0601");

                entity.Property(e => e.N0602).HasColumnName("n0602");

                entity.Property(e => e.N0701).HasColumnName("n0701");

                entity.Property(e => e.N0702).HasColumnName("n0702");

                entity.Property(e => e.N0801).HasColumnName("n0801");

                entity.Property(e => e.N0802).HasColumnName("n0802");

                entity.Property(e => e.N0901).HasColumnName("n0901");

                entity.Property(e => e.N0902).HasColumnName("n0902");

                entity.Property(e => e.N1001).HasColumnName("n1001");

                entity.Property(e => e.N1002).HasColumnName("n1002");

                entity.Property(e => e.N1101).HasColumnName("n1101");

                entity.Property(e => e.N1102).HasColumnName("n1102");

                entity.Property(e => e.Negr).HasColumnName("negr");

                entity.Property(e => e.Nexp).HasColumnName("nexp");
            });

            modelBuilder.Entity<SumEvolucionProg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_evolucion_prog");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cpromocion).HasColumnName("cpromocion");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.NsecuPeriodo).HasColumnName("nsecu_periodo");

                entity.Property(e => e.NsecuPromocion).HasColumnName("nsecu_promocion");

                entity.Property(e => e.Qactivos).HasColumnName("qactivos");

                entity.Property(e => e.Qegresados).HasColumnName("qegresados");

                entity.Property(e => e.QexpConducta).HasColumnName("qexp_conducta");

                entity.Property(e => e.QexpNotas).HasColumnName("qexp_notas");

                entity.Property(e => e.Qmatriculados).HasColumnName("qmatriculados");

                entity.Property(e => e.Qreservas).HasColumnName("qreservas");

                entity.Property(e => e.QretDefinitivo).HasColumnName("qret_definitivo");

                entity.Property(e => e.QretPeriodo).HasColumnName("qret_periodo");
            });

            modelBuilder.Entity<SumFactualizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_factualizacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Factua)
                    .HasColumnType("datetime")
                    .HasColumnName("factua");
            });

            modelBuilder.Entity<SumIngresantesC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_ingresantes_c");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.Ccuadro)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccuadro")
                    .IsFixedLength(true);

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cevaluacion1).HasColumnName("cevaluacion1");

                entity.Property(e => e.Cevaluacion2).HasColumnName("cevaluacion2");

                entity.Property(e => e.Cevaluacion3).HasColumnName("cevaluacion3");

                entity.Property(e => e.Cevaluacion4).HasColumnName("cevaluacion4");

                entity.Property(e => e.Cevaluacion5).HasColumnName("cevaluacion5");

                entity.Property(e => e.Cevaluacion6).HasColumnName("cevaluacion6");

                entity.Property(e => e.Cevaluacion7).HasColumnName("cevaluacion7");

                entity.Property(e => e.Cevaluacion8).HasColumnName("cevaluacion8");

                entity.Property(e => e.Cevaluacion9).HasColumnName("cevaluacion9");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoPasado).HasColumnName("cperiodo_pasado");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dwhere)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dwhere");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");
            });

            modelBuilder.Entity<SumIngresantesD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_ingresantes_d");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.Ccuadro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccuadro")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmodalidad)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Ningre01).HasColumnName("ningre_01");

                entity.Property(e => e.Ningre02).HasColumnName("ningre_02");

                entity.Property(e => e.Ningre03).HasColumnName("ningre_03");

                entity.Property(e => e.Ningre04).HasColumnName("ningre_04");

                entity.Property(e => e.Ningre05).HasColumnName("ningre_05");

                entity.Property(e => e.Ningre06).HasColumnName("ningre_06");

                entity.Property(e => e.Ningre07).HasColumnName("ningre_07");

                entity.Property(e => e.Ningre08).HasColumnName("ningre_08");

                entity.Property(e => e.Ningre09).HasColumnName("ningre_09");

                entity.Property(e => e.Ningre10).HasColumnName("ningre_10");

                entity.Property(e => e.Ningre11).HasColumnName("ningre_11");

                entity.Property(e => e.Ningre12).HasColumnName("ningre_12");

                entity.Property(e => e.Ningre13).HasColumnName("ningre_13");

                entity.Property(e => e.Ningre14).HasColumnName("ningre_14");

                entity.Property(e => e.Ningre15).HasColumnName("ningre_15");

                entity.Property(e => e.Ningre16).HasColumnName("ningre_16");

                entity.Property(e => e.Ningre17).HasColumnName("ningre_17");

                entity.Property(e => e.Ningre18).HasColumnName("ningre_18");

                entity.Property(e => e.Ningre19).HasColumnName("ningre_19");

                entity.Property(e => e.NingreAntCierre).HasColumnName("ningre_ant_cierre");

                entity.Property(e => e.NingreAntFecha).HasColumnName("ningre_ant_fecha");

                entity.Property(e => e.NingreSinCarrera).HasColumnName("ningre_sin_carrera");

                entity.Property(e => e.NingreTotal).HasColumnName("ningre_total");
            });

            modelBuilder.Entity<SumMonitoreoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_monitoreo_d");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.CcargoCoordina).HasColumnName("ccargo_coordina");

                entity.Property(e => e.CcargoDecano).HasColumnName("ccargo_decano");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.NfalCur)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nfal_cur");

                entity.Property(e => e.NfalProf)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nfal_prof");

                entity.Property(e => e.NfalSes)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nfal_ses");

                entity.Property(e => e.NperMin)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nper_min");

                entity.Property(e => e.NperSes)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nper_ses");

                entity.Property(e => e.NprogCur)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nprog_cur");

                entity.Property(e => e.NprogMin)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nprog_min");

                entity.Property(e => e.NprogProf)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nprog_prof");

                entity.Property(e => e.NprogSes)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nprog_ses");

                entity.Property(e => e.NrecCurcomp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nrec_curcomp");

                entity.Property(e => e.NrecCurincomp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nrec_curincomp");

                entity.Property(e => e.NrecProfcomp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nrec_profcomp");

                entity.Property(e => e.NrecProfincomp)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nrec_profincomp");

                entity.Property(e => e.NrecSes)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nrec_ses");

                entity.Property(e => e.NsesOtros)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nses_otros");

                entity.Property(e => e.NtardCur)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ntard_cur");

                entity.Property(e => e.NtardMin)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ntard_min");

                entity.Property(e => e.NtardProf)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ntard_prof");

                entity.Property(e => e.NtardSes)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ntard_ses");
            });

            modelBuilder.Entity<SumPagosAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_pagos_alumnos");

                entity.Property(e => e.Ccarre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ccarre")
                    .IsFixedLength(true);

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.Fproce)
                    .HasColumnType("datetime")
                    .HasColumnName("fproce");

                entity.Property(e => e.IaluPgcb1)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb1");

                entity.Property(e => e.IaluPgcb10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb10");

                entity.Property(e => e.IaluPgcb2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb2");

                entity.Property(e => e.IaluPgcb3)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb3");

                entity.Property(e => e.IaluPgcb4)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb4");

                entity.Property(e => e.IaluPgcb5)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb5");

                entity.Property(e => e.IaluPgcb6)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb6");

                entity.Property(e => e.IaluPgcb7)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb7");

                entity.Property(e => e.IaluPgcb8)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb8");

                entity.Property(e => e.IaluPgcb9)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgcb9");

                entity.Property(e => e.IaluPglb1)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb1");

                entity.Property(e => e.IaluPglb10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb10");

                entity.Property(e => e.IaluPglb2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb2");

                entity.Property(e => e.IaluPglb3)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb3");

                entity.Property(e => e.IaluPglb4)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb4");

                entity.Property(e => e.IaluPglb5)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb5");

                entity.Property(e => e.IaluPglb6)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb6");

                entity.Property(e => e.IaluPglb7)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb7");

                entity.Property(e => e.IaluPglb8)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb8");

                entity.Property(e => e.IaluPglb9)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglb9");

                entity.Property(e => e.IaluPglv1)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv1");

                entity.Property(e => e.IaluPglv10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv10");

                entity.Property(e => e.IaluPglv2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv2");

                entity.Property(e => e.IaluPglv3)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv3");

                entity.Property(e => e.IaluPglv4)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv4");

                entity.Property(e => e.IaluPglv5)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv5");

                entity.Property(e => e.IaluPglv6)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv6");

                entity.Property(e => e.IaluPglv7)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv7");

                entity.Property(e => e.IaluPglv8)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv8");

                entity.Property(e => e.IaluPglv9)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pglv9");

                entity.Property(e => e.IaluPgot1)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot1");

                entity.Property(e => e.IaluPgot10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot10");

                entity.Property(e => e.IaluPgot2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot2");

                entity.Property(e => e.IaluPgot3)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot3");

                entity.Property(e => e.IaluPgot4)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot4");

                entity.Property(e => e.IaluPgot5)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot5");

                entity.Property(e => e.IaluPgot6)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot6");

                entity.Property(e => e.IaluPgot7)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot7");

                entity.Property(e => e.IaluPgot8)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot8");

                entity.Property(e => e.IaluPgot9)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_pgot9");

                entity.Property(e => e.IaluSaldo1)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo1");

                entity.Property(e => e.IaluSaldo10)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo10");

                entity.Property(e => e.IaluSaldo2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo2");

                entity.Property(e => e.IaluSaldo3)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo3");

                entity.Property(e => e.IaluSaldo4)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo4");

                entity.Property(e => e.IaluSaldo5)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo5");

                entity.Property(e => e.IaluSaldo6)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo6");

                entity.Property(e => e.IaluSaldo7)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo7");

                entity.Property(e => e.IaluSaldo8)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo8");

                entity.Property(e => e.IaluSaldo9)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("ialu_saldo9");

                entity.Property(e => e.NaluMatriFin).HasColumnName("nalu_matri_fin");

                entity.Property(e => e.NaluMatriIni).HasColumnName("nalu_matri_ini");

                entity.Property(e => e.NaluPgpar1).HasColumnName("nalu_pgpar1");

                entity.Property(e => e.NaluPgpar10).HasColumnName("nalu_pgpar10");

                entity.Property(e => e.NaluPgpar2).HasColumnName("nalu_pgpar2");

                entity.Property(e => e.NaluPgpar3).HasColumnName("nalu_pgpar3");

                entity.Property(e => e.NaluPgpar4).HasColumnName("nalu_pgpar4");

                entity.Property(e => e.NaluPgpar5).HasColumnName("nalu_pgpar5");

                entity.Property(e => e.NaluPgpar6).HasColumnName("nalu_pgpar6");

                entity.Property(e => e.NaluPgpar7).HasColumnName("nalu_pgpar7");

                entity.Property(e => e.NaluPgpar8).HasColumnName("nalu_pgpar8");

                entity.Property(e => e.NaluPgpar9).HasColumnName("nalu_pgpar9");

                entity.Property(e => e.NaluPgtot1).HasColumnName("nalu_pgtot1");

                entity.Property(e => e.NaluPgtot10).HasColumnName("nalu_pgtot10");

                entity.Property(e => e.NaluPgtot2).HasColumnName("nalu_pgtot2");

                entity.Property(e => e.NaluPgtot3).HasColumnName("nalu_pgtot3");

                entity.Property(e => e.NaluPgtot4).HasColumnName("nalu_pgtot4");

                entity.Property(e => e.NaluPgtot5).HasColumnName("nalu_pgtot5");

                entity.Property(e => e.NaluPgtot6).HasColumnName("nalu_pgtot6");

                entity.Property(e => e.NaluPgtot7).HasColumnName("nalu_pgtot7");

                entity.Property(e => e.NaluPgtot8).HasColumnName("nalu_pgtot8");

                entity.Property(e => e.NaluPgtot9).HasColumnName("nalu_pgtot9");

                entity.Property(e => e.Negresado).HasColumnName("negresado");

                entity.Property(e => e.Nexpulsado).HasColumnName("nexpulsado");

                entity.Property(e => e.Nperio).HasColumnName("nperio");

                entity.Property(e => e.Nreserva).HasColumnName("nreserva");

                entity.Property(e => e.NretiroDefinitivo).HasColumnName("nretiro_definitivo");

                entity.Property(e => e.NretiroPeriodo).HasColumnName("nretiro_periodo");
            });

            modelBuilder.Entity<SumRecordAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_record_alumno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcurriculaSum).HasColumnName("ccurricula_sum");

                entity.Property(e => e.Ceducativo1).HasColumnName("ceducativo1");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.CperiodoPuesto).HasColumnName("cperiodo_puesto");

                entity.Property(e => e.CperiodoSum).HasColumnName("cperiodo_sum");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmodalidad)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad");

                entity.Property(e => e.Dsegmento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dsegmento");

                entity.Property(e => e.EstadoActual)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("estado_actual");

                entity.Property(e => e.Nalumnos).HasColumnName("nalumnos");

                entity.Property(e => e.NcalAvance).HasColumnName("ncal_avance");

                entity.Property(e => e.NcalDisper).HasColumnName("ncal_disper");

                entity.Property(e => e.NcalRanking).HasColumnName("ncal_ranking");

                entity.Property(e => e.NcalRendim).HasColumnName("ncal_rendim");

                entity.Property(e => e.NcalTotal).HasColumnName("ncal_total");

                entity.Property(e => e.NcicloEquiv)
                    .HasColumnType("decimal(3, 1)")
                    .HasColumnName("nciclo_equiv");

                entity.Property(e => e.NcicloMatric).HasColumnName("nciclo_matric");

                entity.Property(e => e.NcreAprob).HasColumnName("ncre_aprob");

                entity.Property(e => e.NcreConval).HasColumnName("ncre_conval");

                entity.Property(e => e.NcreElect).HasColumnName("ncre_elect");

                entity.Property(e => e.NcreMatric).HasColumnName("ncre_matric");

                entity.Property(e => e.NcreOblig).HasColumnName("ncre_oblig");

                entity.Property(e => e.NcreProm).HasColumnName("ncre_prom");

                entity.Property(e => e.NcursoAprob).HasColumnName("ncurso_aprob");

                entity.Property(e => e.NcursoAprob1).HasColumnName("ncurso_aprob1");

                entity.Property(e => e.NcursoAprob2).HasColumnName("ncurso_aprob2");

                entity.Property(e => e.NcursoAprob3).HasColumnName("ncurso_aprob3");

                entity.Property(e => e.NcursoConval).HasColumnName("ncurso_conval");

                entity.Property(e => e.NcursoDesaprob).HasColumnName("ncurso_desaprob");

                entity.Property(e => e.NcursoDesaprob1).HasColumnName("ncurso_desaprob1");

                entity.Property(e => e.NcursoDesaprob2).HasColumnName("ncurso_desaprob2");

                entity.Property(e => e.NcursoDesaprob3).HasColumnName("ncurso_desaprob3");

                entity.Property(e => e.NcursoElect).HasColumnName("ncurso_elect");

                entity.Property(e => e.NcursoMatric).HasColumnName("ncurso_matric");

                entity.Property(e => e.NcursoObMax).HasColumnName("ncurso_ob_max");

                entity.Property(e => e.NcursoObMin).HasColumnName("ncurso_ob_min");

                entity.Property(e => e.NcursoOblig).HasColumnName("ncurso_oblig");

                entity.Property(e => e.NcursoPend2).HasColumnName("ncurso_pend2");

                entity.Property(e => e.NcursoPend3).HasColumnName("ncurso_pend3");

                entity.Property(e => e.NcursoProm).HasColumnName("ncurso_prom");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.NpromRango1).HasColumnName("nprom_rango1");

                entity.Property(e => e.NpromRango2).HasColumnName("nprom_rango2");

                entity.Property(e => e.NpromRango3).HasColumnName("nprom_rango3");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.PcursoAprob)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_aprob");

                entity.Property(e => e.PcursoAprob1)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_aprob1");

                entity.Property(e => e.PcursoAprob2)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_aprob2");

                entity.Property(e => e.PcursoAprob3)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_aprob3");

                entity.Property(e => e.PcursoConval)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_conval");

                entity.Property(e => e.PcursoDesaprob)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_desaprob");

                entity.Property(e => e.PcursoDesaprob1)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_desaprob1");

                entity.Property(e => e.PcursoDesaprob2)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_desaprob2");

                entity.Property(e => e.PcursoDesaprob3)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pcurso_desaprob3");

                entity.Property(e => e.PpromRango1)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pprom_rango1");

                entity.Property(e => e.PpromRango2)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pprom_rango2");

                entity.Property(e => e.PpromRango3)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("pprom_rango3");
            });

            modelBuilder.Entity<SumRecordSinCurri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_record_sin_curri");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<SumRendimientoDeudum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_rendimiento_deuda");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ccategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DrangoCred)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("drango_cred")
                    .IsFixedLength(true);

                entity.Property(e => e.DrangoPond)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("drango_pond")
                    .IsFixedLength(true);

                entity.Property(e => e.Isaldo030)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_0_30");

                entity.Property(e => e.Isaldo3160)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_31_60");

                entity.Property(e => e.Isaldo6190)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_61_90");

                entity.Property(e => e.Isaldo91Mas)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("isaldo_91_mas");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Qalumn030).HasColumnName("qalumn_0_30");

                entity.Property(e => e.Qalumn3160).HasColumnName("qalumn_31_60");

                entity.Property(e => e.Qalumn6190).HasColumnName("qalumn_61_90");

                entity.Property(e => e.Qalumn91Mas).HasColumnName("qalumn_91_mas");

                entity.Property(e => e.QalumnDeudor).HasColumnName("qalumn_deudor");

                entity.Property(e => e.Qalumnos).HasColumnName("qalumnos");
            });

            modelBuilder.Entity<SumRetiro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_retiros");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gmotivo).HasColumnName("gmotivo");

                entity.Property(e => e.Gnuevo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnuevo")
                    .IsFixedLength(true);

                entity.Property(e => e.Nretiros).HasColumnName("nretiros");

                entity.Property(e => e.NretirosAnt).HasColumnName("nretiros_ant");

                entity.Property(e => e.PorRet)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("por_ret");

                entity.Property(e => e.PorRetCar)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("por_ret_car");

                entity.Property(e => e.PorTot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("por_tot");

                entity.Property(e => e.PorTotCar)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("por_tot_car");
            });

            modelBuilder.Entity<SumRetirosAnual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_retiros_anual");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Nanio).HasColumnName("nanio");

                entity.Property(e => e.QretiradosAbr).HasColumnName("qretirados_abr");

                entity.Property(e => e.QretiradosAgo).HasColumnName("qretirados_ago");

                entity.Property(e => e.QretiradosDic).HasColumnName("qretirados_dic");

                entity.Property(e => e.QretiradosEne).HasColumnName("qretirados_ene");

                entity.Property(e => e.QretiradosFeb).HasColumnName("qretirados_feb");

                entity.Property(e => e.QretiradosJul).HasColumnName("qretirados_jul");

                entity.Property(e => e.QretiradosJun).HasColumnName("qretirados_jun");

                entity.Property(e => e.QretiradosMar).HasColumnName("qretirados_mar");

                entity.Property(e => e.QretiradosMay).HasColumnName("qretirados_may");

                entity.Property(e => e.QretiradosNov).HasColumnName("qretirados_nov");

                entity.Property(e => e.QretiradosOct).HasColumnName("qretirados_oct");

                entity.Property(e => e.QretiradosSet).HasColumnName("qretirados_set");
            });

            modelBuilder.Entity<SumSeguimAlu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_seguim_alu");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraOut).HasColumnName("ccarrera_out");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.DcicloEquiv)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dciclo_equiv")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcondicion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dcondicion")
                    .IsFixedLength(true);

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo")
                    .IsFixedLength(true);

                entity.Property(e => e.Destado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("destado")
                    .IsFixedLength(true);

                entity.Property(e => e.Dmodalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcategoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Gclasificacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gclasificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcicloEquiv).HasColumnName("nciclo_equiv");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.NsecuenciaIng).HasColumnName("nsecuencia_ing");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2")
                    .IsFixedLength(true);

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3")
                    .IsFixedLength(true);

                entity.Property(e => e.Sbiquero)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sbiquero")
                    .IsFixedLength(true);

                entity.Property(e => e.ScambioCarre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scambio_carre")
                    .IsFixedLength(true);

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Sdesertor)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sdesertor")
                    .IsFixedLength(true);

                entity.Property(e => e.Segresado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("segresado")
                    .IsFixedLength(true);

                entity.Property(e => e.Sexpulsado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexpulsado")
                    .IsFixedLength(true);

                entity.Property(e => e.Snuevo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("snuevo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);

                entity.Property(e => e.SperiodoIng)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo_ing")
                    .IsFixedLength(true);

                entity.Property(e => e.SquintoSup)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("squinto_sup")
                    .IsFixedLength(true);

                entity.Property(e => e.Srecuperado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("srecuperado")
                    .IsFixedLength(true);

                entity.Property(e => e.SretiroDef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro_def")
                    .IsFixedLength(true);

                entity.Property(e => e.SretiroPer)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro_per")
                    .IsFixedLength(true);

                entity.Property(e => e.Ssuspendido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssuspendido")
                    .IsFixedLength(true);

                entity.Property(e => e.StercioSup)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stercio_sup")
                    .IsFixedLength(true);

                entity.Property(e => e.Striquero)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("striquero")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumSeguimDet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_seguim_det");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Darea)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("darea");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Nbiqueros).HasColumnName("nbiqueros");

                entity.Property(e => e.Nexpulsados).HasColumnName("nexpulsados");

                entity.Property(e => e.Nmatriculados).HasColumnName("nmatriculados");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Ntriqueros).HasColumnName("ntriqueros");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumSeguimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_seguimiento");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIng).HasColumnName("cperiodo_ing");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.DcicloEquiv)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dciclo_equiv")
                    .IsFixedLength(true);

                entity.Property(e => e.Deducativo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Dmodalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Gcategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Gclasificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gclasificacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.NalumnosMatri).HasColumnName("nalumnos_matri");

                entity.Property(e => e.Nantiguos).HasColumnName("nantiguos");

                entity.Property(e => e.Nbiqueros).HasColumnName("nbiqueros");

                entity.Property(e => e.NcambioCarre).HasColumnName("ncambio_carre");

                entity.Property(e => e.NcambioCarreOut).HasColumnName("ncambio_carre_out");

                entity.Property(e => e.NcicloEquiv).HasColumnName("nciclo_equiv");

                entity.Property(e => e.Ndesertores).HasColumnName("ndesertores");

                entity.Property(e => e.Negresados).HasColumnName("negresados");

                entity.Property(e => e.Nexpulsados).HasColumnName("nexpulsados");

                entity.Property(e => e.Nnuevos).HasColumnName("nnuevos");

                entity.Property(e => e.NquintoSup).HasColumnName("nquinto_sup");

                entity.Property(e => e.Nrecuperados).HasColumnName("nrecuperados");

                entity.Property(e => e.NretirosDef).HasColumnName("nretiros_def");

                entity.Property(e => e.NretirosPer).HasColumnName("nretiros_per");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.NsecuenciaIng).HasColumnName("nsecuencia_ing");

                entity.Property(e => e.Nsuspendidos).HasColumnName("nsuspendidos");

                entity.Property(e => e.NtercioSup).HasColumnName("ntercio_sup");

                entity.Property(e => e.Ntriqueros).HasColumnName("ntriqueros");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);

                entity.Property(e => e.SperiodoIng)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo_ing")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumTricaDesertor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_trica_desertor");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<SumTricaExpulsado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_trica_expulsado");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.NalumnosMatri).HasColumnName("nalumnos_matri");

                entity.Property(e => e.Nantiguos).HasColumnName("nantiguos");

                entity.Property(e => e.Nbiqueros).HasColumnName("nbiqueros");

                entity.Property(e => e.Ndesertores).HasColumnName("ndesertores");

                entity.Property(e => e.Negresados).HasColumnName("negresados");

                entity.Property(e => e.Nexpulsados).HasColumnName("nexpulsados");

                entity.Property(e => e.Nnuevos).HasColumnName("nnuevos");

                entity.Property(e => e.Nrecuperados).HasColumnName("nrecuperados");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Ntriqueros).HasColumnName("ntriqueros");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumTricaExpulsadoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_trica_expulsado_d");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Nbiqueros).HasColumnName("nbiqueros");

                entity.Property(e => e.Nexpulsados).HasColumnName("nexpulsados");

                entity.Property(e => e.Nmatriculados).HasColumnName("nmatriculados");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Ntriqueros).HasColumnName("ntriqueros");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<SumTricaRecuperado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sum_trica_recuperado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<SyAction>(entity =>
            {
                entity.HasKey(e => e.ActionId)
                    .HasName("PK__SY_Actio__FFE3F4B97F60ED59");

                entity.ToTable("SY_Action");

                entity.Property(e => e.ActionId).HasColumnName("ActionID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyCompany>(entity =>
            {
                entity.HasKey(e => e.CompanyId)
                    .HasName("PK__SY_Compa__2D971C4C7F60ED59");

                entity.ToTable("SY_Company");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Address)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CountryId).HasColumnName("CountryID");

                entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

                entity.Property(e => e.DatabaseName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlagBenefitCenter)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.LicenceType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordDb)
                    .HasMaxLength(500)
                    .HasColumnName("PasswordDB");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Telephone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UserDb)
                    .HasMaxLength(50)
                    .HasColumnName("UserDB");

                entity.Property(e => e.VersionType)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyCountry>(entity =>
            {
                entity.HasKey(e => e.CountryId)
                    .HasName("PK__SY_Count__10D160BF1504B0D1");

                entity.ToTable("SY_Country");

                entity.Property(e => e.CountryId).HasColumnName("CountryID");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SyCurrency>(entity =>
            {
                entity.HasKey(e => e.CurrencyId)
                    .HasName("PK_temp");

                entity.ToTable("SY_Currency");

                entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

                entity.Property(e => e.Code).HasMaxLength(255);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Symbol).HasMaxLength(255);
            });

            modelBuilder.Entity<SyDependence>(entity =>
            {
                entity.HasKey(e => e.Code)
                    .HasName("SY_Dependence_Code_pk");

                entity.ToTable("SY_Dependence");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DependenceId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("DependenceID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyDependenceArea>(entity =>
            {
                entity.HasKey(e => e.DependenceAreaId)
                    .HasName("PK_Td_DependenceArea");

                entity.ToTable("SY_DependenceArea");

                entity.Property(e => e.DependenceAreaId).HasColumnName("DependenceAreaID");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Dependence)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DependenceSub)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyDependenceSub>(entity =>
            {
                entity.HasKey(e => e.Code)
                    .HasName("SI_DependenceSub_Code_pk");

                entity.ToTable("SY_DependenceSub");

                entity.Property(e => e.Code)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Dependence)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyLog>(entity =>
            {
                entity.ToTable("SY_Log");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("createdate");

                entity.Property(e => e.Deleted).HasColumnName("deleted");

                entity.Property(e => e.DocumentId).HasColumnName("document_id");

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(50)
                    .HasColumnName("document_type");

                entity.Property(e => e.Ipaddress)
                    .HasMaxLength(20)
                    .HasColumnName("ipaddress");

                entity.Property(e => e.Logonnt)
                    .HasMaxLength(100)
                    .HasColumnName("logonnt");

                entity.Property(e => e.Machine)
                    .HasMaxLength(100)
                    .HasColumnName("machine");

                entity.Property(e => e.Note).HasColumnName("note");

                entity.Property(e => e.StringId)
                    .HasMaxLength(100)
                    .HasColumnName("string_id");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<SyOption>(entity =>
            {
                entity.HasKey(e => e.OptionId)
                    .HasName("PK__SY_Optio__92C7A1DF0AD2A005");

                entity.ToTable("SY_Option");

                entity.Property(e => e.OptionId).HasColumnName("OptionID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlagTemplate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.VersionType)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyOptionAction>(entity =>
            {
                entity.HasKey(e => new { e.OptionId, e.ActionId })
                    .HasName("PK__SY_Optio__1D399E942446F461");

                entity.ToTable("SY_OptionAction");

                entity.Property(e => e.OptionId).HasColumnName("OptionID");

                entity.Property(e => e.ActionId).HasColumnName("ActionID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.HasOne(d => d.Action)
                    .WithMany(p => p.SyOptionActions)
                    .HasForeignKey(d => d.ActionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SY_Option__Actio__108B795B");

                entity.HasOne(d => d.Option)
                    .WithMany(p => p.SyOptionActions)
                    .HasForeignKey(d => d.OptionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SY_Option__Optio__117F9D94");
            });

            modelBuilder.Entity<SyProfile>(entity =>
            {
                entity.HasKey(e => e.ProfileId)
                    .HasName("PK__SY_Profi__290C8884145C0A3F");

                entity.ToTable("SY_Profile");

                entity.Property(e => e.ProfileId)
                    .ValueGeneratedNever()
                    .HasColumnName("ProfileID");

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CompanyID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyProfileOptionAction>(entity =>
            {
                entity.HasKey(e => new { e.ProfileId, e.OptionId, e.ActionId });

                entity.ToTable("SY_ProfileOptionAction");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.OptionId).HasColumnName("OptionID");

                entity.Property(e => e.ActionId).HasColumnName("ActionID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.LastUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SyUser>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__SY_User__1788CCAC182C9B23");

                entity.ToTable("SY_User");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Email).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.Password).HasMaxLength(500);

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<SyUserHistorical>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SY_UserHistorical");

                entity.Property(e => e.Area)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Dependence)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DependenceSub)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<SyUserProfile>(entity =>
            {
                entity.HasKey(e => new { e.UserId, e.ProfileId })
                    .HasName("PK__SY_UserP__451804241ED998B2");

                entity.ToTable("SY_UserProfile");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.HasOne(d => d.Profile)
                    .WithMany(p => p.SyUserProfiles)
                    .HasForeignKey(d => d.ProfileId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SY_UserPr__Profi__20C1E124");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SyUserProfiles)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SY_UserPr__UserI__300424B4");
            });

            modelBuilder.Entity<Sysconstraint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("sysconstraints");

                entity.Property(e => e.Actions).HasColumnName("actions");

                entity.Property(e => e.Colid).HasColumnName("colid");

                entity.Property(e => e.Constid).HasColumnName("constid");

                entity.Property(e => e.Error).HasColumnName("error");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Spare1).HasColumnName("spare1");

                entity.Property(e => e.Status).HasColumnName("status");
            });

            modelBuilder.Entity<Syssegment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("syssegments");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Segment).HasColumnName("segment");

                entity.Property(e => e.Status).HasColumnName("status");
            });

            modelBuilder.Entity<T1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_1");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Nexcede).HasColumnName("nexcede");

                entity.Property(e => e.Nmaterias).HasColumnName("nmaterias");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("observacion");
            });

            modelBuilder.Entity<T100Ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t100_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T10Car>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t10_car");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEquiv).HasColumnName("ccarrera_equiv");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");
            });

            modelBuilder.Entity<T140Ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t140_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Destado)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("destado");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Nexcede).HasColumnName("nexcede");

                entity.Property(e => e.Nmaterias).HasColumnName("nmaterias");
            });

            modelBuilder.Entity<T2004100070>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2004100070");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnota).HasColumnName("nnota");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.NpromedioOriginal)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_original");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<T20081204Ap03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_20081204_ap03");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T20081204Bo03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_20081204_bo03");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<T20081204Boc03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_20081204_boc03");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Fcontable)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T20081204Bom03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_20081204_bom03");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cmovimiento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CMOVIMIENTO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fmovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FMOVIMIENTO");

                entity.Property(e => e.Fpublicacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FPUBLICACION");

                entity.Property(e => e.NAlSaldo).HasColumnName("n_al_saldo");

                entity.Property(e => e.NcreditoNormal).HasColumnName("ncredito_normal");

                entity.Property(e => e.NcreditoPasante).HasColumnName("ncredito_pasante");

                entity.Property(e => e.Ndiferencial).HasColumnName("NDIFERENCIAL");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO");

                entity.Property(e => e.Nsumar).HasColumnName("NSUMAR");

                entity.Property(e => e.Scalculo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCALCULO");

                entity.Property(e => e.Sefecto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEFECTO");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.SorigenBeneficio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen_beneficio");

                entity.Property(e => e.Sresultado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.Property(e => e.Tmovimiento)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("TMOVIMIENTO");

                entity.Property(e => e.Trequerimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trequerimiento");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T2ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<T2apNoExAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2apNoExAP");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<T2apcam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2apcam");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurricula2).HasColumnName("ccurricula2");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodalidad2).HasColumnName("cmodalidad2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<T2apcamApl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2apcam_apl");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurricula2).HasColumnName("ccurricula2");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodalidad2).HasColumnName("cmodalidad2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<T2bc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bc");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffinal).HasColumnName("ffinal");

                entity.Property(e => e.Finicio).HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nreservado).HasColumnName("nreservado");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssesion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssesion");

                entity.Property(e => e.Tfolio).HasColumnName("tfolio");

                entity.Property(e => e.Turl).HasColumnName("turl");
            });

            modelBuilder.Entity<T2blA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2blA");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncorrelativo).HasColumnName("ncorrelativo");
            });

            modelBuilder.Entity<T2bloqueSiglaCar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bloque_sigla_car");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Corto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corto");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<T2bloqueSiglaCarEq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bloque_sigla_car_eq");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Corto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corto");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.MaxCcarrera).HasColumnName("max_ccarrera");

                entity.Property(e => e.MinCcarrera).HasColumnName("min_ccarrera");
            });

            modelBuilder.Entity<T2bsB>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bs_b");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<T2bsS>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bs_s");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesor2).HasColumnName("cprofesor2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<T2bsS2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2bs_s2");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<T2fic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2fic");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso).HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia).HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta).HasColumnName("pfalta");

                entity.Property(e => e.Tvalida).HasColumnName("tvalida");
            });

            modelBuilder.Entity<T2fiex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2fiex");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<T2insap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2insap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<T2mialuequi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2mialuequi");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");
            });

            modelBuilder.Entity<T2migraAluCalu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2migra_alu_calu");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Correla)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("correla");
            });

            modelBuilder.Entity<T2ncA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2ncA");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Npromedio).HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");
            });

            modelBuilder.Entity<T2ndum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2ndA");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.Prova)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PROVA");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<T2pc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2pc");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");
            });

            modelBuilder.Entity<T2pcca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2pcca");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<T2persoUni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2perso_uni");

                entity.Property(e => e.ApeConyuge).HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp).HasColumnName("cafp");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss).HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cpersona");

                entity.Property(e => e.Cpersona2)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cpersona2");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.FdocExpedido)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fdoc_expedido");

                entity.Property(e => e.Fmodificacion).HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fnacimiento")
                    .IsFixedLength(true);

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion).HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral).HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar).HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje).HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.Ncorrela)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorrela");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar).HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre).HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre).HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona).HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio).HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab).HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2).HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab).HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3).HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona).HasColumnName("spersona");

                entity.Property(e => e.Tcargo).HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil).HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes).HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo).HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2).HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoSil).HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo).HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab).HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa).HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab).HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion).HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion).HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo).HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion).HasColumnName("turbanizacion");

                entity.Property(e => e.Unico).HasColumnName("unico");
            });

            modelBuilder.Entity<T2prono>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_2prono");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesor2)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(140)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<T50Ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t50_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T60Ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t60_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<T90Ap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t90_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TA090319>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_a090319");

                entity.Property(e => e.Calumno).HasColumnName("calumno");
            });

            modelBuilder.Entity<TA090320T>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_a090320_t");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.NchequeoMax)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nchequeo_max");

                entity.Property(e => e.NchequeoMin)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nchequeo_min");

                entity.Property(e => e.NchequeoSum)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("nchequeo_sum");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Sturno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sturno");
            });

            modelBuilder.Entity<TANoAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_a_no_ap");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso).HasColumnName("gformaingreso");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.Gturno).HasColumnName("gturno");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<TAc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ac");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.GaprobadoR2).HasColumnName("gaprobado_r2");

                entity.Property(e => e.NpromedioR2)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_r2");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Taccion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("taccion");

                entity.Property(e => e.Tcomentario)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tcomentario");

                entity.Property(e => e.Toperacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("toperacion");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TAc2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ac2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Toperacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("toperacion");
            });

            modelBuilder.Entity<TAcue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue");

                entity.Property(e => e.Afavor).HasColumnName("afavor");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.CcronoAc).HasColumnName("ccrono_ac");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.FvenAaaammdd)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fven_aaaammdd");

                entity.Property(e => e.Ncorrelativo).HasColumnName("ncorrelativo");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nmonto");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TAcueAp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_ap1");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nelejido).HasColumnName("nelejido");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Nsecperbus).HasColumnName("nsecperbus");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TAcueAp1Up>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_ap1_up");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TAcueAp1minsec>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_ap1minsec");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Minsec).HasColumnName("minsec");
            });

            modelBuilder.Entity<TAcueAp2Up>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_ap2_up");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TAcueBcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_bcc");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Crebaja).HasColumnName("crebaja");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.NmontoGastoAdministrativo).HasColumnName("nmonto_gasto_administrativo");

                entity.Property(e => e.NporcentajeInteresDiario)
                    .HasColumnType("numeric(4, 4)")
                    .HasColumnName("nporcentaje_interes_diario");
            });

            modelBuilder.Entity<TAcueFir>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_ACUE_FIR");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cmovimiento)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CMOVIMIENTO");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fmovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FMOVIMIENTO");

                entity.Property(e => e.Fpublicacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FPUBLICACION");

                entity.Property(e => e.NAlSaldo).HasColumnName("n_al_saldo");

                entity.Property(e => e.NcreditoNormal).HasColumnName("ncredito_normal");

                entity.Property(e => e.NcreditoPasante).HasColumnName("ncredito_pasante");

                entity.Property(e => e.Ndiferencial).HasColumnName("NDIFERENCIAL");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("NMONTO");

                entity.Property(e => e.Nsumar).HasColumnName("NSUMAR");

                entity.Property(e => e.Scalculo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCALCULO");

                entity.Property(e => e.Sefecto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEFECTO");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SORIGEN");

                entity.Property(e => e.SorigenBeneficio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen_beneficio");

                entity.Property(e => e.Sresultado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SRESULTADO");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("STIPO");

                entity.Property(e => e.Tmovimiento)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("TMOVIMIENTO");

                entity.Property(e => e.Trequerimiento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trequerimiento");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TAcueNoExpe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_no_expe");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecper).HasColumnName("nsecper");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<TAcuePO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_acue_p_o");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ncorre)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorre");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<TAdmision>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_admision");

                entity.Property(e => e.AnoIngresso)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano_ingresso");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.SemIngresso)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("sem_ingresso");
            });

            modelBuilder.Entity<TAdo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ado");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.M1).HasColumnName("m1");

                entity.Property(e => e.M2).HasColumnName("m2");

                entity.Property(e => e.M3).HasColumnName("m3");

                entity.Property(e => e.M4).HasColumnName("m4");

                entity.Property(e => e.M5).HasColumnName("m5");

                entity.Property(e => e.Nidentidad)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("nidentidad");
            });

            modelBuilder.Entity<TAl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_al");

                entity.Property(e => e.Calumno).HasColumnName("calumno");
            });

            modelBuilder.Entity<TAl1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_al1");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TAlco>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_alco");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TAlterado1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_alterado1");

                entity.Property(e => e.Alterado).HasColumnName("alterado");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxCpersona).HasColumnName("max_cpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Quees)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("quees");
            });

            modelBuilder.Entity<TAlterado2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_alterado2");

                entity.Property(e => e.Alterado).HasColumnName("alterado");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxCpersona).HasColumnName("max_cpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Quees)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("quees");
            });

            modelBuilder.Entity<TAlterado4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_alterado4");

                entity.Property(e => e.Alterado).HasColumnName("alterado");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxCpersona).HasColumnName("max_cpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Quees)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("quees");
            });

            modelBuilder.Entity<TAlumnoT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_alumno_t");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<TAna>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ana");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DBLOQUE");
            });

            modelBuilder.Entity<TAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<TAp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_AP1");

                entity.Property(e => e.AGastoadm)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_GASTOADM");

                entity.Property(e => e.AIntereses)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_INTERESES");

                entity.Property(e => e.APerdidaBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_PERDIDA_BE");

                entity.Property(e => e.BAutoriBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("B_AUTORI_BE");

                entity.Property(e => e.BAutoriGa)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("B_AUTORI_ga");

                entity.Property(e => e.BAutoriIn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("B_AUTORI_IN");

                entity.Property(e => e.CAjustePago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_AJUSTE_PAGO");

                entity.Property(e => e.CPago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO");

                entity.Property(e => e.CPagoCuentaAf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_AF");

                entity.Property(e => e.CPagoCuentaDf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_DF");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.DBeneficio)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("D_BENEFICIO");

                entity.Property(e => e.DEmision)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("D_EMISION");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.NmontoDescuento)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_descuento");
            });

            modelBuilder.Entity<TAp10>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_AP10");

                entity.Property(e => e.AGastoadm)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_GASTOADM");

                entity.Property(e => e.AIntereses)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_INTERESES");

                entity.Property(e => e.CAjustePago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_AJUSTE_PAGO");

                entity.Property(e => e.CGastoadm)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_GASTOADM");

                entity.Property(e => e.CIntereses)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_INTERESES");

                entity.Property(e => e.CPago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO");

                entity.Property(e => e.CPagoCuentaAf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_AF");

                entity.Property(e => e.CPagoCuentaDf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_DF");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.MasBeneficioCalculado2)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("mas_beneficio_calculado2");

                entity.Property(e => e.MenosAutoriBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("menos_AUTORI_BE");

                entity.Property(e => e.MenosBeneficioRegistrado)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("menos_BENEFICIO_registrado");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.RecAutoriGa)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_AUTORI_ga");

                entity.Property(e => e.RecAutoriIn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_AUTORI_IN");

                entity.Property(e => e.RecEmision)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_EMISION");

                entity.Property(e => e.RecPerdidaBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_PERDIDA_BE");

                entity.Property(e => e.SaldoFinal)
                    .HasColumnType("decimal(37, 2)")
                    .HasColumnName("saldo_final");

                entity.Property(e => e.SaldoOperacion)
                    .HasColumnType("decimal(23, 2)")
                    .HasColumnName("saldo_operacion");
            });

            modelBuilder.Entity<TAp11>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_AP11");

                entity.Property(e => e.AGastoadm)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_GASTOADM");

                entity.Property(e => e.AIntereses)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("A_INTERESES");

                entity.Property(e => e.CAjustePago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_AJUSTE_PAGO");

                entity.Property(e => e.CGastoadm)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_GASTOADM");

                entity.Property(e => e.CIntereses)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_INTERESES");

                entity.Property(e => e.CPago)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO");

                entity.Property(e => e.CPagoCuentaAf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_AF");

                entity.Property(e => e.CPagoCuentaDf)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("C_PAGO_CUENTA_DF");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.MasBeneficioCalculado2)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("mas_beneficio_calculado2");

                entity.Property(e => e.MenosAutoriBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("menos_AUTORI_BE");

                entity.Property(e => e.MenosBeneficioRegistrado)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("menos_BENEFICIO_registrado");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.RecAutoriGa)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_AUTORI_ga");

                entity.Property(e => e.RecAutoriIn)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_AUTORI_IN");

                entity.Property(e => e.RecEmision)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_EMISION");

                entity.Property(e => e.RecPerdidaBe)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("REC_PERDIDA_BE");

                entity.Property(e => e.SaldoFinal)
                    .HasColumnType("decimal(37, 2)")
                    .HasColumnName("saldo_final");

                entity.Property(e => e.SaldoOperacion)
                    .HasColumnType("decimal(23, 2)")
                    .HasColumnName("saldo_operacion");
            });

            modelBuilder.Entity<TAp2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<TAp3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<TApCu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_cu");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fcreditos)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreditos");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.SaldoFinal)
                    .HasColumnType("decimal(37, 2)")
                    .HasColumnName("saldo_final");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");
            });

            modelBuilder.Entity<TApNacu2808>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_nacu2808");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TApPAcuCro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_p_acu_cro");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ncorr)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorr");
            });

            modelBuilder.Entity<TApPCro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_p_cro");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ncorr)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorr");
            });

            modelBuilder.Entity<TApPpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_ppos");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cadmisionf).HasColumnName("cadmisionf");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.GcarreraDefinida)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida");

                entity.Property(e => e.Ncorrelativo)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorrelativo");
            });

            modelBuilder.Entity<TApPpos2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_ppos2");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.GcarreraDefinida)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida");
            });

            modelBuilder.Entity<TApPpos3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_ppos3");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.MaxCin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("max_cin")
                    .IsFixedLength(true);

                entity.Property(e => e.MinCin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("min_cin")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TApR5>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ap_r5");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TApad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_apad");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");
            });

            modelBuilder.Entity<TApagr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_apagr");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.MaxCperiodo).HasColumnName("max_cperiodo");
            });

            modelBuilder.Entity<TApePat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ape_pat");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TApePatFila>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ape_pat_fila");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Caracter)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("caracter");

                entity.Property(e => e.Caracternew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CARACTERNEW");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Corregir).HasColumnName("CORREGIR");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ncaracter).HasColumnName("ncaracter");
            });

            modelBuilder.Entity<TApf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_apf");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TApo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_apo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<TAsi2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_asi2");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nota_final");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(5, 4)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tflags).HasColumnName("tflags");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TAsicu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_asicu");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TB>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_b");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TB1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bs");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<TB2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_b2");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TBF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_b_f");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<TBFU>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_b_f_u");

                entity.Property(e => e.Canper).HasColumnName("canper");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Newdbloque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("newdbloque");
            });

            modelBuilder.Entity<TBb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bb");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TBc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bc");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iingles).HasColumnName("iingles");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nreservado).HasColumnName("nreservado");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssesion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssesion")
                    .IsFixedLength(true);

                entity.Property(e => e.Tfolio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tfolio");

                entity.Property(e => e.Turl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("turl");
            });

            modelBuilder.Entity<TBkEe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bk_ee");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcontacto1X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto1_x");

                entity.Property(e => e.Dcontacto2X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto2_x");

                entity.Property(e => e.Dcontacto3X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto3_x");

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Faniversario)
                    .HasColumnType("datetime")
                    .HasColumnName("faniversario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo1X).HasColumnName("gcargo1_x");

                entity.Property(e => e.Gcargo2X).HasColumnName("gcargo2_x");

                entity.Property(e => e.Gcargo3X).HasColumnName("gcargo3_x");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcategoria2).HasColumnName("gcategoria2");

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gidioma1).HasColumnName("gidioma1");

                entity.Property(e => e.Gidioma2).HasColumnName("gidioma2");

                entity.Property(e => e.Gmoneda).HasColumnName("gmoneda");

                entity.Property(e => e.Grree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grree")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo1).HasColumnName("gtipo1");

                entity.Property(e => e.Gtipo2).HasColumnName("gtipo2");

                entity.Property(e => e.Gtipo3).HasColumnName("gtipo3");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.Ncantidad1).HasColumnName("ncantidad1");

                entity.Property(e => e.Ncantidad2).HasColumnName("ncantidad2");

                entity.Property(e => e.Ncantidad3).HasColumnName("ncantidad3");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.NimpApafa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_apafa");

                entity.Property(e => e.NimpMatricula)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_matricula");

                entity.Property(e => e.NimpOtro)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_otro");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Npension).HasColumnName("npension");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtipoCambio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ntipo_cambio");

                entity.Property(e => e.Seducativo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("seducativo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<TBkEe1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bk_ees");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpromotor).HasColumnName("cpromotor");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcontacto1X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto1_x");

                entity.Property(e => e.Dcontacto2X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto2_x");

                entity.Property(e => e.Dcontacto3X)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcontacto3_x");

                entity.Property(e => e.Deducativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Faniversario)
                    .HasColumnType("datetime")
                    .HasColumnName("faniversario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcargo1X).HasColumnName("gcargo1_x");

                entity.Property(e => e.Gcargo2X).HasColumnName("gcargo2_x");

                entity.Property(e => e.Gcargo3X).HasColumnName("gcargo3_x");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcategoria2).HasColumnName("gcategoria2");

                entity.Property(e => e.Gclasificacion).HasColumnName("gclasificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gidioma1).HasColumnName("gidioma1");

                entity.Property(e => e.Gidioma2).HasColumnName("gidioma2");

                entity.Property(e => e.Gmoneda).HasColumnName("gmoneda");

                entity.Property(e => e.Grree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grree")
                    .IsFixedLength(true);

                entity.Property(e => e.Gtipo1).HasColumnName("gtipo1");

                entity.Property(e => e.Gtipo2).HasColumnName("gtipo2");

                entity.Property(e => e.Gtipo3).HasColumnName("gtipo3");

                entity.Property(e => e.GtipoEnte).HasColumnName("gtipo_ente");

                entity.Property(e => e.Ncantidad1).HasColumnName("ncantidad1");

                entity.Property(e => e.Ncantidad2).HasColumnName("ncantidad2");

                entity.Property(e => e.Ncantidad3).HasColumnName("ncantidad3");

                entity.Property(e => e.Ncuota).HasColumnName("ncuota");

                entity.Property(e => e.Nfax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nfax");

                entity.Property(e => e.NimpApafa)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_apafa");

                entity.Property(e => e.NimpMatricula)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_matricula");

                entity.Property(e => e.NimpOtro)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nimp_otro");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Npension).HasColumnName("npension");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.NtipoCambio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ntipo_cambio");

                entity.Property(e => e.Seducativo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("seducativo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Temail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("temail");

                entity.Property(e => e.Twww)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("twww");
            });

            modelBuilder.Entity<TBkPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bk_pos");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.CcarreraPrevia).HasColumnName("ccarrera_previa");

                entity.Property(e => e.CcarreraTraslado).HasColumnName("ccarrera_traslado");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso2")
                    .IsFixedLength(true);

                entity.Property(e => e.CingresoVend)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cingreso_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.CinstitucionVend).HasColumnName("cinstitucion_vend");

                entity.Property(e => e.ClistaPrecio).HasColumnName("clista_precio");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaVend).HasColumnName("cpersona_vend");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.CprogramaVend).HasColumnName("cprograma_vend");

                entity.Property(e => e.CtpdocCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcomentario)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcomentario");

                entity.Property(e => e.Dreserva)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dreserva");

                entity.Property(e => e.Dretiro)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dretiro");

                entity.Property(e => e.FCartaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("f_carta_bienestar");

                entity.Property(e => e.FEntExpConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ent_exp_conv");

                entity.Property(e => e.FRecepcionCarta)
                    .HasColumnType("datetime")
                    .HasColumnName("f_recepcion_carta");

                entity.Property(e => e.FRsptaConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_rspta_conv");

                entity.Property(e => e.Faprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("faprobacion");

                entity.Property(e => e.FasignaCateg)
                    .HasColumnType("datetime")
                    .HasColumnName("fasigna_categ");

                entity.Property(e => e.FfaxSolicita)
                    .HasColumnType("datetime")
                    .HasColumnName("ffax_solicita");

                entity.Property(e => e.FfichaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("fficha_bienestar");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FpagoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_matricula");

                entity.Property(e => e.FpagoReserva)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_reserva");

                entity.Property(e => e.GRindioExplor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("g_rindio_explor")
                    .IsFixedLength(true);

                entity.Property(e => e.GasistiraCharla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistira_charla")
                    .IsFixedLength(true);

                entity.Property(e => e.GcarreraDefinida)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida")
                    .IsFixedLength(true);

                entity.Property(e => e.GcatEnteEdu).HasColumnName("gcat_ente_edu");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.GfaxSolicita)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gfax_solicita")
                    .IsFixedLength(true);

                entity.Property(e => e.GfichaBienestar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gficha_bienestar")
                    .IsFixedLength(true);

                entity.Property(e => e.Gintegracion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gintegracion")
                    .IsFixedLength(true);

                entity.Property(e => e.Ginteres).HasColumnName("ginteres");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gparticular)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gparticular")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaIsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_isil")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaUsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_usil")
                    .IsFixedLength(true);

                entity.Property(e => e.GrendiraExamen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grendira_examen")
                    .IsFixedLength(true);

                entity.Property(e => e.GrsptaPostul).HasColumnName("grspta_postul");

                entity.Property(e => e.GtipoContacto).HasColumnName("gtipo_contacto");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");

                entity.Property(e => e.Isecundaria).HasColumnName("isecundaria");

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.NdocumCaja).HasColumnName("ndocum_caja");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.SasistioEntrevis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sasistio_entrevis")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategprog)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategprog")
                    .IsFixedLength(true);

                entity.Property(e => e.Sreserva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sreserva")
                    .IsFixedLength(true);

                entity.Property(e => e.Sretiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tipo_pago")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TBlA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_blA");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TBlAh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_blAh");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TBlaEq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bla_eq");

                entity.Property(e => e.Cbloque)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cbloque");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");
            });

            modelBuilder.Entity<TBlahNop>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_blah_nop");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TBloqueCursoRegistroEv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_curso_registro_ev");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CprofesorRegistro).HasColumnName("cprofesor_registro");

                entity.Property(e => e.Cregistro)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cregistro");

                entity.Property(e => e.FdigitaDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_desde");

                entity.Property(e => e.FdigitaHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fdigita_hasta");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<TBloqueSiglaCar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_sigla_car");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Corto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corto");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TBloqueSiglaCarEq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_sigla_car_eq");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Corto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corto");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.MaxCcarrera).HasColumnName("max_ccarrera");

                entity.Property(e => e.MinCcarrera).HasColumnName("min_ccarrera");
            });

            modelBuilder.Entity<TBloqueSiglaCarEqh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_sigla_car_eqh");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.MaxCcarrera).HasColumnName("max_ccarrera");

                entity.Property(e => e.MinCcarrera).HasColumnName("min_ccarrera");
            });

            modelBuilder.Entity<TBloqueSiglaCarHsi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_sigla_car_hsi");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cbloque2)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cbloque2");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.MinScarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("min_scarrera");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TBloqueSiglaCarh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bloque_sigla_carh");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Turma)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TBob>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bob");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Nporcentaje)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("NPORCENTAJE");

                entity.Property(e => e.Tbeneficio)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("TBENEFICIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TBobRep>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bob_rep");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Nporcentaje)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("NPORCENTAJE");

                entity.Property(e => e.Tbeneficio)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("TBENEFICIO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TBsS>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bs_s");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesor2).HasColumnName("cprofesor2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<TBsS2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bs_s2");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<TBsp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_bsp");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");
            });

            modelBuilder.Entity<TCalu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_calu");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");
            });

            modelBuilder.Entity<TCara>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cara");

                entity.Property(e => e.Caracter)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("caracter");

                entity.Property(e => e.Nfila).HasColumnName("nfila");
            });

            modelBuilder.Entity<TCarrera>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_carrera");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Curso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("curso");
            });

            modelBuilder.Entity<TCb130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cb130");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TCfMaxOrno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cf_max_orno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.MaxOrno).HasColumnName("max_orno");
            });

            modelBuilder.Entity<TCfT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cf_t");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DGRUPO");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNotaUltima).HasColumnName("gtipo_nota_ultima");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NdGtipoNotaEs).HasColumnName("nd_gtipo_nota_es");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.NmaxParametro).HasColumnName("nmax_parametro");

                entity.Property(e => e.NordenNota).HasColumnName("norden_nota");

                entity.Property(e => e.Notas).HasColumnName("notas");

                entity.Property(e => e.Nparametro).HasColumnName("nparametro");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<TCin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cin");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");
            });

            modelBuilder.Entity<TCin2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cin2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TCla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cla");

                entity.Property(e => e.Cclasificacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.Property(e => e.Tbackup)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tbackup");
            });

            modelBuilder.Entity<TCla1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_clas");

                entity.Property(e => e.Clave).HasColumnName("clave");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Tclas)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tclas");
            });

            modelBuilder.Entity<TClas2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_clas2");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Clave)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("clave");

                entity.Property(e => e.Tclas)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tclas");
            });

            modelBuilder.Entity<TCom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_com");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<TComparaNt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_compara_nt");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.ComparaNr)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("compara_nr");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo).HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TComparaNt2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_compara_nt2");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.ComparaNr)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("compara_nr");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo).HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TComparaNt3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_compara_nt3");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.ComparaNr)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("compara_nr");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo).HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TComparaNt3ApliI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_compara_nt3_apli_i");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoCal).HasColumnName("gaprobado_cal");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioCal).HasColumnName("npromedio_cal");

                entity.Property(e => e.Tcambio)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tcambio");
            });

            modelBuilder.Entity<TComparaNt3r>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_COMPARA_NT3R");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.ComparaNr)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("compara_nr");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.GaprobadoR2).HasColumnName("gaprobado_r2");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpromedioR2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_r2");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo).HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Proceso)
                    .IsRequired()
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .HasColumnName("PROCESO");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TPuntaje)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("T_PUNTAJE");

                entity.Property(e => e.TResultado)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("T_RESULTADO");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TCua>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cua");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NnotaAprob)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("nnota_aprob");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TCuano>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_CUANO");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NnotaAprob)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("nnota_aprob");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TCumig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_cumig");

                entity.Property(e => e.Ccurso)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccurso");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TCurri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_curri");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ccurricula");

                entity.Property(e => e.Dcurricula)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Scurricula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TCurriUsa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_curri_usa");

                entity.Property(e => e.MaxTurno).HasColumnName("max_turno");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");
            });

            modelBuilder.Entity<TCurric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_curric");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Carrera)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurricula2).HasColumnName("ccurricula2");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.DcurriculaNuevo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula_nuevo");

                entity.Property(e => e.Existe).HasColumnName("existe");

                entity.Property(e => e.OrdenTurno).HasColumnName("orden_turno");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.ScurriculaNuevo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula_nuevo");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turno");

                entity.Property(e => e.Usar).HasColumnName("usar");
            });

            modelBuilder.Entity<TCurricF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_curric_f");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Carrera)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("carrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurricula2).HasColumnName("ccurricula2");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRICULO");

                entity.Property(e => e.DcurriculaNuevo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula_nuevo");

                entity.Property(e => e.Existe).HasColumnName("existe");

                entity.Property(e => e.OrdenTurno).HasColumnName("orden_turno");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.ScurriculaNuevo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurricula_nuevo");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turno");

                entity.Property(e => e.Usar).HasColumnName("usar");
            });

            modelBuilder.Entity<TCurriculum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_curricula");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Curriculo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("curriculo");
            });

            modelBuilder.Entity<TDato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dato");

                entity.Property(e => e.Ccolumna).HasColumnName("ccolumna");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cdato)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cdato");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Tdato1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tdato");
            });

            modelBuilder.Entity<TDatoU>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dato_u");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantida).HasColumnName("cantida");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaMin).HasColumnName("cpersona_min");

                entity.Property(e => e.Dato01)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato01");

                entity.Property(e => e.Dato03)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato03");

                entity.Property(e => e.Dato05)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato05");

                entity.Property(e => e.Dato07)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato07");

                entity.Property(e => e.Dato09)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato09");

                entity.Property(e => e.Dato11)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato11");

                entity.Property(e => e.Dato13)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato13");

                entity.Property(e => e.Dato15)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato15");

                entity.Property(e => e.Dato17)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato17");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.Nnom)
                    .HasColumnName("nnom")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Npat)
                    .HasColumnName("npat")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TDatoUu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dato_uu");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dato01)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato01");

                entity.Property(e => e.Dato03)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato03");

                entity.Property(e => e.Dato05)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato05");

                entity.Property(e => e.Dato07)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato07");

                entity.Property(e => e.Dato09)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato09");

                entity.Property(e => e.Dato11)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato11");

                entity.Property(e => e.Dato13)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato13");

                entity.Property(e => e.Dato15)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato15");

                entity.Property(e => e.Dato17)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dato17");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DpersonaOriginal)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_original");

                entity.Property(e => e.Nnom).HasColumnName("nnom");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Npat).HasColumnName("npat");
            });

            modelBuilder.Entity<TDeedu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_deedu");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Deducativo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("deducativo");

                entity.Property(e => e.Ncorrelativo)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorrelativo");
            });

            modelBuilder.Entity<TDisci>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_disci");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");
            });

            modelBuilder.Entity<TDisciF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_DISCI_F");

                entity.Property(e => e.Asociado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ASOCIADO");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");
            });

            modelBuilder.Entity<TDisciFEquiv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_disci_f_EQUIV");

                entity.Property(e => e.Asociado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asociado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dato).HasColumnName("dato");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("grupo");
            });

            modelBuilder.Entity<TDisciFPre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_disci_f_PRE");

                entity.Property(e => e.Asociado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asociado");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dato).HasColumnName("dato");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("grupo");

                entity.Property(e => e.GtipoRequisto).HasColumnName("gtipo_requisto");
            });

            modelBuilder.Entity<TDocen>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_docen");

                entity.Property(e => e.ApeConyuge).HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpersona2)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cpersona2");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona).HasColumnName("spersona");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TDocenEnper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_docen_enper");

                entity.Property(e => e.ApeConyuge).HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpersona2)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cpersona2");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona).HasColumnName("spersona");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");
            });

            modelBuilder.Entity<TDu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_du");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Canti).HasColumnName("canti");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TDu2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_du2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Canti).HasColumnName("canti");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");
            });

            modelBuilder.Entity<TDuA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_duA");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Canti).HasColumnName("canti");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TDuasi2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_duasi2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Canti).HasColumnName("canti");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TDumin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dumin");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.CpersonaMin).HasColumnName("cpersona_min");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<TDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dup");

                entity.Property(e => e.ApeConyuge).HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp).HasColumnName("cafp");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss).HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion).HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fnacimiento")
                    .IsFixedLength(true);

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion).HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral).HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar).HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje).HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar).HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre).HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre).HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona).HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio).HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab).HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2).HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab).HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3).HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona).HasColumnName("spersona");

                entity.Property(e => e.Tcargo).HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil).HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes).HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo).HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2).HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoSil).HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo).HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab).HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa).HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab).HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion).HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion).HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo).HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion).HasColumnName("turbanizacion");

                entity.Property(e => e.Unico).HasColumnName("unico");
            });

            modelBuilder.Entity<TDup1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dups");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");
            });

            modelBuilder.Entity<TDupblo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dupblo");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");
            });

            modelBuilder.Entity<TDupe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dupe");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.MaxCpersona).HasColumnName("max_cpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Quees)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("quees");
            });

            modelBuilder.Entity<TDupef>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dupef");

                entity.Property(e => e.Alterado).HasColumnName("alterado");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxCpersona).HasColumnName("max_cpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Quees)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("quees");
            });

            modelBuilder.Entity<TDupli>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_dupli");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MinCpersona).HasColumnName("min_cpersona");
            });

            modelBuilder.Entity<TEac>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_eac");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");
            });

            modelBuilder.Entity<TEgr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_egr");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TEgr2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_egr2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.CperiodoUlt).HasColumnName("cperiodo_ult");
            });

            modelBuilder.Entity<TEq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_eq");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Caracter)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("caracter");

                entity.Property(e => e.Codigoascci).HasColumnName("codigoascci");

                entity.Property(e => e.Nuevocaracter)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nuevocaracter");
            });

            modelBuilder.Entity<TEquivalenciaConYPreguntum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_equivalencia_con_y_pregunta");

                entity.Property(e => e.Asociado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asociado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoEquiv).HasColumnName("ccurso_equiv");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dato).HasColumnName("dato");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gequivalencia).HasColumnName("gequivalencia");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("grupo");
            });

            modelBuilder.Entity<TF1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_f1");

                entity.Property(e => e.AlumnoTurno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("alumno_turno");

                entity.Property(e => e.BloqueTurno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("bloque_turno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsAutorizado).HasColumnName("es_autorizado");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TF130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_f130");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TFCb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_f_cb");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TFCb130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_f_cb130");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TFigAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_ap");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");
            });

            modelBuilder.Entity<TFigApGcondicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_ap_gcondicion");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TFigApGestado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_ap_gestado");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TFigCarre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_carre");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DCARRERA");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCARRERA");
            });

            modelBuilder.Entity<TFigInsti>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_insti");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DINSTITUCION");

                entity.Property(e => e.Sinstitucion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SINSTITUCION");
            });

            modelBuilder.Entity<TFigPeri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_peri");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPERIODO");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPERIODO");
            });

            modelBuilder.Entity<TFigPerso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_perso");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_MATERNO");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_PATERNO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPERSONA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<TFigProgra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fig_progra");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPROGRAMA");

                entity.Property(e => e.Sprograma)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPROGRAMA");
            });

            modelBuilder.Entity<TFila>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fila");

                entity.Property(e => e.Caracter).HasColumnName("caracter");

                entity.Property(e => e.Nfila)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("nfila");
            });

            modelBuilder.Entity<TFmin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_fmin");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.MinCbloque).HasColumnName("min_cbloque");
            });

            modelBuilder.Entity<TH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_hs");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<TInfoApNopaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_info_ap_nopaso");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cseccion).HasColumnName("cseccion");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmatricula).HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado).HasColumnName("gobservado");

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor).HasColumnName("gvendedor");

                entity.Property(e => e.Modalidad).HasColumnName("modalidad");

                entity.Property(e => e.Nacumulado).HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca).HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado).HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<TIni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ini");

                entity.Property(e => e.DtipoNota)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_nota");

                entity.Property(e => e.Gcomplementa).HasColumnName("gcomplementa");

                entity.Property(e => e.GsumaNota).HasColumnName("gsuma_nota");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.GtipoCalculo).HasColumnName("gtipo_calculo");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnivel).HasColumnName("nnivel");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NnotaCom)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_com");

                entity.Property(e => e.NnotaSum)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_sum");

                entity.Property(e => e.NnotaSus)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota_sus");

                entity.Property(e => e.Nponderacion)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderacion");

                entity.Property(e => e.Pcom).HasColumnName("pcom");

                entity.Property(e => e.Psum).HasColumnName("psum");

                entity.Property(e => e.Psus).HasColumnName("psus");
            });

            modelBuilder.Entity<TLmar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_lmar");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.M1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m1")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M10)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m10")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M11)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m11")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M12)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m12")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M13)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m13")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M14)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m14")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M15)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m15")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M16)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m16")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M17)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m17")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M18)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m18")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M19)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m19")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m2")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M20)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m20")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M21)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m21")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M22)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m22")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M23)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m23")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M24)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m24")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M25)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m25")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M26)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m26")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M27)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m27")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M28)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m28")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M29)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m29")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m3")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M30)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m30")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M31)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m31")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M32)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m32")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M33)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m33")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M34)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m34")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M35)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m35")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M36)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m36")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M37)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m37")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M38)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m38")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M39)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m39")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M4)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m4")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M40)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m40")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M41)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m41")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M42)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m42")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M43)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m43")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M44)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m44")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M45)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m45")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M46)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m46")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M47)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m47")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M48)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m48")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M49)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m49")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M5)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m5")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M50)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m50")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M6)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m6")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M7)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m7")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M8)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m8")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                entity.Property(e => e.M9)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("m9")
                    .UseCollation("SQL_Latin1_General_CP1_CI_AS");
            });

            modelBuilder.Entity<TLogBaseSaldo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_log_base_saldo");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.IdProceso)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_proceso");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto");
            });

            modelBuilder.Entity<TLyfic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_lyfic");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Semestre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("semestre");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TLynt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_lynt");

                entity.Property(e => e.Alumno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("alumno");

                entity.Property(e => e.Ano).HasColumnName("ano");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.NotaFinal)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nota_final");

                entity.Property(e => e.Semestre).HasColumnName("semestre");
            });

            modelBuilder.Entity<TM>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_m");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoMatricula).HasColumnName("gtipo_matricula");

                entity.Property(e => e.Hproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("hproceso");

                entity.Property(e => e.Hregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("hregistro");

                entity.Property(e => e.Nip)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.QcursosMatri).HasColumnName("qcursos_matri");

                entity.Property(e => e.Tmensaje)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tmensaje");
            });

            modelBuilder.Entity<TM2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_m2");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.MaxCid).HasColumnName("max_cid");

                entity.Property(e => e.MinCid).HasColumnName("min_cid");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<TM2m>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_m2m");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cid");

                entity.Property(e => e.Cod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cod");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.IdProfesorAsistProcesado).HasColumnName("id_profesor_asist_procesado");

                entity.Property(e => e.Saccion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saccion");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<TM2mu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_m2mu");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Maxpro).HasColumnName("maxpro");

                entity.Property(e => e.Minpro).HasColumnName("minpro");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<TM2mum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_m2mum");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.MinCid).HasColumnName("min_cid");

                entity.Property(e => e.Tbarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbarra");
            });

            modelBuilder.Entity<TMadu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_madu");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<TMau>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mau");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoMatricula).HasColumnName("gtipo_matricula");

                entity.Property(e => e.Hproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("hproceso");

                entity.Property(e => e.Hregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("hregistro");

                entity.Property(e => e.Ncorre)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorre");

                entity.Property(e => e.Nip)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.QcursosMatri).HasColumnName("qcursos_matri");

                entity.Property(e => e.Tmensaje)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tmensaje");
            });

            modelBuilder.Entity<TMau3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mau3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoMatricula).HasColumnName("gtipo_matricula");

                entity.Property(e => e.Hproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("hproceso");

                entity.Property(e => e.Hregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("hregistro");

                entity.Property(e => e.Ncorre)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorre");

                entity.Property(e => e.Nip)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("nip");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.QcursosMatri).HasColumnName("qcursos_matri");

                entity.Property(e => e.Tmensaje)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("tmensaje");
            });

            modelBuilder.Entity<TMax>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_max");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");
            });

            modelBuilder.Entity<TMax2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_max2");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.MaxCcurri).HasColumnName("max_ccurri");
            });

            modelBuilder.Entity<TMc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mc");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Ntransaccion).HasColumnName("ntransaccion");

                entity.Property(e => e.Nvez).HasColumnName("nvez");
            });

            modelBuilder.Entity<TMctaco>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mctaco");

                entity.Property(e => e.Cclctc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cclctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaaj)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaaj")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaau)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaau")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctacc)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctacc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("cctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Cgrctc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cgrctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Cnvsal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cnvsal")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpane)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpane")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpctc)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ctpctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpplc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpplc")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpref)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpref")
                    .IsFixedLength(true);

                entity.Property(e => e.Cusuar)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cusuar")
                    .IsFixedLength(true);

                entity.Property(e => e.Dabctc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dabctc")
                    .IsFixedLength(true);

                entity.Property(e => e.Dctaco)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Fvigen)
                    .HasColumnType("datetime")
                    .HasColumnName("fvigen");

                entity.Property(e => e.Sajust)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sajust")
                    .IsFixedLength(true);

                entity.Property(e => e.Scontr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scontr")
                    .IsFixedLength(true);

                entity.Property(e => e.Sctaco)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sctaco")
                    .IsFixedLength(true);

                entity.Property(e => e.Sctpry)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sctpry")
                    .IsFixedLength(true);

                entity.Property(e => e.Smonna)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("smonna")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TMi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis");

                entity.Property(e => e.Aaaa)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("aaaa");

                entity.Property(e => e.Afavor).HasColumnName("afavor");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.FvenAaaammdd)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fven_aaaammdd");

                entity.Property(e => e.Mm)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mm");

                entity.Property(e => e.Nacuerdos).HasColumnName("nacuerdos");

                entity.Property(e => e.Ncorrelativo).HasColumnName("ncorrelativo");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nmonto");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TMialuequi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mialuequi");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");
            });

            modelBuilder.Entity<TMicu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_micu");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TMigraAluCalu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_alu_calu");

                entity.Property(e => e.Calumno)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");
            });

            modelBuilder.Entity<TMigraCarre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_carre");

                entity.Property(e => e.Ccarre).HasColumnName("ccarre");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEquiv).HasColumnName("ccarrera_equiv");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CoCentCost).HasColumnName("co_cent_cost");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.NcredPromPerio).HasColumnName("ncred_prom_perio");

                entity.Property(e => e.NcursoPromPerio).HasColumnName("ncurso_prom_perio");

                entity.Property(e => e.NcursosIngresantes).HasColumnName("ncursos_ingresantes");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scategoria).HasColumnName("scategoria");

                entity.Property(e => e.ScategoriaAutom).HasColumnName("scategoria_autom");
            });

            modelBuilder.Entity<TMigraCurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_curso");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TMigraFacul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_facul");

                entity.Property(e => e.Cfacultad)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cfacultad");

                entity.Property(e => e.Dfacultad)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dfacultad");

                entity.Property(e => e.Sigla)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sigla");
            });

            modelBuilder.Entity<TMigraFacul2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_facul2");

                entity.Property(e => e.Cfacultad)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfacultad");

                entity.Property(e => e.Dfacultad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("dfacultad");
            });

            modelBuilder.Entity<TMigraFichah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_fichah");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso).HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pfalta).HasColumnName("pfalta");

                entity.Property(e => e.Tvalida).HasColumnName("tvalida");
            });

            modelBuilder.Entity<TMigraFichahDi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_fichah_di");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso).HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pfalta).HasColumnName("pfalta");

                entity.Property(e => e.Tvalida).HasColumnName("tvalida");
            });

            modelBuilder.Entity<TMigraFichahDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_fichah_dup");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TMigraFichahDupD>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_fichah_dup_d");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso).HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pfalta).HasColumnName("pfalta");

                entity.Property(e => e.Tvalida).HasColumnName("tvalida");
            });

            modelBuilder.Entity<TMigraFichahNomi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_fichah_nomi");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso).HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pfalta).HasColumnName("pfalta");

                entity.Property(e => e.Tvalida).HasColumnName("tvalida");
            });

            modelBuilder.Entity<TMigraPersoUni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_migra_perso_uni");

                entity.Property(e => e.ApeConyuge).HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp).HasColumnName("cafp");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss).HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion).HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fnacimiento")
                    .IsFixedLength(true);

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion).HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral).HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar).HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje).HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar).HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre).HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre).HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona).HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio).HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab).HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2).HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab).HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3).HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona).HasColumnName("spersona");

                entity.Property(e => e.Tcargo).HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil).HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes).HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo).HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2).HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoSil).HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo).HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab).HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa).HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab).HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion).HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion).HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo).HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion).HasColumnName("turbanizacion");

                entity.Property(e => e.Unico).HasColumnName("unico");
            });

            modelBuilder.Entity<TMin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_min");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");
            });

            modelBuilder.Entity<TMirar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mirar");

                entity.Property(e => e.Orden)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("orden");

                entity.Property(e => e.Texto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("texto");
            });

            modelBuilder.Entity<TMisAcue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_acue");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.Cobraca2)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cobraca2");

                entity.Property(e => e.Cobranca)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cobranca");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("mes");
            });

            modelBuilder.Entity<TMisAp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_ap1");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nelejido).HasColumnName("nelejido");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Nsecperbus).HasColumnName("nsecperbus");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TMisAp1Up>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_ap1_up");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TMisAp1minsec>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_ap1minsec");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Minsec).HasColumnName("minsec");
            });

            modelBuilder.Entity<TMisBcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_bcc");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Crebaja).HasColumnName("crebaja");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.NmontoGastoAdministrativo).HasColumnName("nmonto_gasto_administrativo");

                entity.Property(e => e.NporcentajeInteresDiario)
                    .HasColumnType("numeric(4, 4)")
                    .HasColumnName("nporcentaje_interes_diario");
            });

            modelBuilder.Entity<TMisNoExpe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_no_expe");

                entity.Property(e => e.Calumno).HasColumnName("CALUMNO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Nsecper).HasColumnName("nsecper");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<TMisPO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mis_p_o");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ncorre)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ncorre");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Sestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Stipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");
            });

            modelBuilder.Entity<TModelo>(entity =>
            {
                entity.HasKey(e => new { e.Nproceso, e.Sgrupo, e.Debhab, e.Cctaco });

                entity.ToTable("t_modelo");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.Sgrupo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo");

                entity.Property(e => e.Debhab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("debhab");

                entity.Property(e => e.Cctaco)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cctaco");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nmonto");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<TMp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_mp");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondVivienProv).HasColumnName("gcond_vivien_prov");

                entity.Property(e => e.GcondicionVivien).HasColumnName("gcondicion_vivien");

                entity.Property(e => e.Gdireccion).HasColumnName("gdireccion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.GreferenciaDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("greferencia_direccion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral");

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tclubes)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tclubes");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.TcorreoTrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_trabajo");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprofesion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tprofesion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");

                entity.Property(e => e.Turbanizacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("turbanizacion");
            });

            modelBuilder.Entity<TN45>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_n45");

                entity.Property(e => e.Calumno).HasColumnName("calumno");
            });

            modelBuilder.Entity<TNc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TNc2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc2");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.NivelPresenca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.NotaFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nota_final");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tflags).HasColumnName("tflags");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TNcA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ncA");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Npromedio).HasColumnName("npromedio");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Tflags).HasColumnName("tflags");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TNcRecal2000402V>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc_recal_2000402_v");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("av1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("av2");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pe");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pf");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pf1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pf2");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("tp");

                entity.Property(e => e.Unidad).HasColumnName("unidad");
            });

            modelBuilder.Entity<TNcRecal200402>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc_recal_200402");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TNcRecal200801>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc_recal_200801");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Diferencias)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("diferencias");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TNcRecalCer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nc_recal_cer");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEstado).HasColumnName("ccarrera_estado");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TNcaYa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_NCA_YA");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoEsquema).HasColumnName("gtipo_esquema");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ncredito");

                entity.Property(e => e.Npromedio).HasColumnName("npromedio");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Tflags).HasColumnName("tflags");

                entity.Property(e => e.Tpromedio).HasColumnName("tpromedio");

                entity.Property(e => e.Vale).HasColumnName("vale");
            });

            modelBuilder.Entity<TNcm2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ncm_2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TNcm3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ncm_3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TNd2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nd2");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.NotaId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nota_id");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<TNdum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ndA");

                entity.Property(e => e.Aluno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("aluno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Data).HasColumnName("data");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nnota");

                entity.Property(e => e.Prova)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PROVA");

                entity.Property(e => e.Tnota).HasColumnName("tnota");
            });

            modelBuilder.Entity<TNparti>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DGRUPO");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NacumuladoHastaNota).HasColumnName("nacumulado_hasta_nota");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NordenNota).HasColumnName("norden_nota");

                entity.Property(e => e.Notas).HasColumnName("notas");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<TNparti2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DGRUPO");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NacumuladoHastaNota).HasColumnName("nacumulado_hasta_nota");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NordenNota).HasColumnName("norden_nota");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.NpunPar).HasColumnName("npun_par");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<TNparti26>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti26");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DGRUPO");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NacumuladoHastaNota).HasColumnName("nacumulado_hasta_nota");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NordenNota).HasColumnName("norden_nota");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.NpunPar).HasColumnName("npun_par");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<TNparti3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DGRUPO");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NacumuladoHastaNota).HasColumnName("nacumulado_hasta_nota");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.NordenNota).HasColumnName("norden_nota");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.NpunPar).HasColumnName("npun_par");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<TNpartiNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TNpartiNd2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<TNpartiNd3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<TNpartiNdPunPar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd_pun_par");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.SumPunParciales)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("sum_pun_parciales");
            });

            modelBuilder.Entity<TNpartiNdPunPar2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd_pun_par2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.SumPunParciales)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("sum_pun_parciales");
            });

            modelBuilder.Entity<TNpartiNdPunPar26>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd_pun_par26");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.SumPunParciales)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("sum_pun_parciales");
            });

            modelBuilder.Entity<TNpartiNdPunPar3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nparti_nd_pun_par3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.SumPunParciales)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("sum_pun_parciales");
            });

            modelBuilder.Entity<TNt132>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_nt132");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TNtd132>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ntd132");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TObma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_obma");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Norden).HasColumnName("norden");
            });

            modelBuilder.Entity<TOm2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_om2");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");
            });

            modelBuilder.Entity<TP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_p");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dpabellon)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dpabellon");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Pabellon).HasColumnName("pabellon");

                entity.Property(e => e.Spabellon)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("spabellon");
            });

            modelBuilder.Entity<TP1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_p1");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.DtEmissaoIdent)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DT_EMISSAO_IDENT");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.IndInadimplente)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("IND_INADIMPLENTE");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.NumCertifMilitar)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CERTIF_MILITAR");

                entity.Property(e => e.NumSecaoTitulo)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("NUM_SECAO_TITULO");

                entity.Property(e => e.NumTituloEleitor)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("NUM_TITULO_ELEITOR");

                entity.Property(e => e.NumZonaTitulo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ZONA_TITULO");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.SglEmissorCertifMilitar)
                    .IsRequired()
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("SGL_EMISSOR_CERTIF_MILITAR");

                entity.Property(e => e.SglOrgaoEmissor)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SGL_ORGAO_EMISSOR");

                entity.Property(e => e.SglUfCertifMilitar)
                    .IsRequired()
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("SGL_UF_CERTIF_MILITAR");

                entity.Property(e => e.SglUfIdent)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SGL_UF_IDENT");

                entity.Property(e => e.SglUfTitulo)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SGL_UF_TITULO");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<TP2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_p2");

                entity.Property(e => e.Cinco)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CINCO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Cuatro)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUATRO");

                entity.Property(e => e.Diez)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIEZ");

                entity.Property(e => e.Dos)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DOS");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPERSONA");

                entity.Property(e => e.Nueve)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUEVE");

                entity.Property(e => e.Ocho)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OCHO");

                entity.Property(e => e.Onche)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ONCHE");

                entity.Property(e => e.Original)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ORIGINAL");

                entity.Property(e => e.Seis)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEIS");

                entity.Property(e => e.Siete)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIETE");

                entity.Property(e => e.Tres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TRES");

                entity.Property(e => e.Uno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNO");
            });

            modelBuilder.Entity<TPa160b>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pa160b");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");
            });

            modelBuilder.Entity<TParti26AcuhasnotaPg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti26_acuhasnota_pg");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CantidadCursos).HasColumnName("cantidad_cursos");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.SumaAcuHasNota)
                    .HasColumnType("numeric(38, 1)")
                    .HasColumnName("suma_acu_has_nota");
            });

            modelBuilder.Entity<TParti26Acuhasnotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti26_acuhasnota");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxOrden).HasColumnName("max_orden");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.SumAcuHasNota).HasColumnName("sum_acu_has_nota");

                entity.Property(e => e.UnidadCurso).HasColumnName("unidad_curso");
            });

            modelBuilder.Entity<TParti26Acuper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti26_acuper");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CantidadCursos).HasColumnName("cantidad_cursos");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Numerador)
                    .HasColumnType("numeric(38, 1)")
                    .HasColumnName("numerador");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TParti3AcuhasnotaPg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti3_acuhasnota_pg");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Denomina)
                    .HasColumnType("numeric(13, 1)")
                    .HasColumnName("denomina");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Numera)
                    .HasColumnType("numeric(38, 1)")
                    .HasColumnName("numera");

                entity.Property(e => e.Punprofin)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("punprofin");
            });

            modelBuilder.Entity<TParti3Acuhasnotum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti3_acuhasnota");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.MaxOrden).HasColumnName("max_orden");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.SumAcuHasNota).HasColumnName("sum_acu_has_nota");
            });

            modelBuilder.Entity<TParti3Acuper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_parti3_acuper");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Denominador)
                    .HasColumnType("numeric(13, 1)")
                    .HasColumnName("denominador");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Numerador)
                    .HasColumnType("numeric(38, 1)")
                    .HasColumnName("numerador");

                entity.Property(e => e.Punprofin)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("punprofin");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<TPc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pc");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");
            });

            modelBuilder.Entity<TPcca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pcca");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TPd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CertEstRecibido).HasColumnName("cert_est_recibido");

                entity.Property(e => e.CertEstVisado).HasColumnName("cert_est_visado");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ConCompromiso).HasColumnName("con_compromiso");

                entity.Property(e => e.ConPop).HasColumnName("con_pop");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Nregistro)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("nregistro");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Sestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Suma).HasColumnName("suma");

                entity.Property(e => e.TitBacColRecibido).HasColumnName("tit_bac_col_recibido");

                entity.Property(e => e.TitBacColVisado).HasColumnName("tit_bac_col_visado");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Tsituacion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tsituacion");
            });

            modelBuilder.Entity<TPegCc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_peg_cc");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.EsAprobado).HasColumnName("es_aprobado");

                entity.Property(e => e.EsEquivalente).HasColumnName("es_equivalente");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Nmaxciccur).HasColumnName("nmaxciccur");
            });

            modelBuilder.Entity<TPegCc2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_peg_cc2");

                entity.Property(e => e.Aprobados).HasColumnName("aprobados");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Desaprobado).HasColumnName("desaprobado");

                entity.Property(e => e.MinCicJalado).HasColumnName("min_cic_jalado");

                entity.Property(e => e.NaprobadoUltimoCiclo).HasColumnName("naprobado_ultimo_ciclo");

                entity.Property(e => e.NcursoUltimoCiclo).HasColumnName("ncurso_ultimo_ciclo");

                entity.Property(e => e.NjaladoNoUltimoCiclo).HasColumnName("njalado_no_ultimo_ciclo");

                entity.Property(e => e.Tcomentario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcomentario");
            });

            modelBuilder.Entity<TPegCc3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_peg_cc3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tcomentario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcomentario");
            });

            modelBuilder.Entity<TPegCcm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_peg_ccm");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Maxciccur).HasColumnName("maxciccur");
            });

            modelBuilder.Entity<TPeriodoT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_periodo_t");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");
            });

            modelBuilder.Entity<TPermig2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_permig2");

                entity.Property(e => e.ApeMaternoOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno_original");

                entity.Property(e => e.ApePaternoOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno_original");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.NombreOriginal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre_original");
            });

            modelBuilder.Entity<TPfa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pfa");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClaveHoraContinua)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("clave_hora_continua");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.CprofesorReemp).HasColumnName("cprofesor_reemp");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.FhmarcacionE)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_e");

                entity.Property(e => e.FhmarcacionS)
                    .HasColumnType("datetime")
                    .HasColumnName("fhmarcacion_s");

                entity.Property(e => e.FinicioProg)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_prog");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Frecupera)
                    .HasColumnType("datetime")
                    .HasColumnName("frecupera");

                entity.Property(e => e.Freemplazo)
                    .HasColumnType("datetime")
                    .HasColumnName("freemplazo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Grevisado).HasColumnName("grevisado");

                entity.Property(e => e.GtipoAsistencia).HasColumnName("gtipo_asistencia");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.HfinalAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_asist");

                entity.Property(e => e.HfinalProg)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal_prog");

                entity.Property(e => e.HinicioAsist)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio_asist");

                entity.Property(e => e.IdProfesorAsist)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id_profesor_asist");

                entity.Property(e => e.Ijustificacion).HasColumnName("ijustificacion");

                entity.Property(e => e.Nhoras)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nhoras");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");

                entity.Property(e => e.Tcategoria)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tcategoria");

                entity.Property(e => e.Tjustificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tjustificacion");
            });

            modelBuilder.Entity<TPh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ph");

                entity.Property(e => e.ApeConyuge)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_conyuge");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cafp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cafp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.CdepartamentoNac).HasColumnName("cdepartamento_nac");

                entity.Property(e => e.CdepartamentoTrab).HasColumnName("cdepartamento_trab");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.CdistritoNac).HasColumnName("cdistrito_nac");

                entity.Property(e => e.CdistritoTrab).HasColumnName("cdistrito_trab");

                entity.Property(e => e.Cipss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cipss");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cnacionalidad).HasColumnName("cnacionalidad");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.CpaisNac).HasColumnName("cpais_nac");

                entity.Property(e => e.CpaisTrab).HasColumnName("cpais_trab");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.CprovinciaNac).HasColumnName("cprovincia_nac");

                entity.Property(e => e.CprovinciaTrab).HasColumnName("cprovincia_trab");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fnacimiento");

                entity.Property(e => e.GbecaColegio).HasColumnName("gbeca_colegio");

                entity.Property(e => e.GbecaMotivo).HasColumnName("gbeca_motivo");

                entity.Property(e => e.GcondicionViv).HasColumnName("gcondicion_viv");

                entity.Property(e => e.GcondicionVivPro).HasColumnName("gcondicion_viv_pro");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.GempCelular).HasColumnName("gemp_celular");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoCivilMad).HasColumnName("gestado_civil_mad");

                entity.Property(e => e.GestadoCivilPad).HasColumnName("gestado_civil_pad");

                entity.Property(e => e.GestadoCivilPer).HasColumnName("gestado_civil_per");

                entity.Property(e => e.Gestadocivil).HasColumnName("gestadocivil");

                entity.Property(e => e.GgiroEmpresa).HasColumnName("ggiro_empresa");

                entity.Property(e => e.GgradoInstrucMad).HasColumnName("ggrado_instruc_mad");

                entity.Property(e => e.GgradoInstrucPad).HasColumnName("ggrado_instruc_pad");

                entity.Property(e => e.GgradoInstrucPer).HasColumnName("ggrado_instruc_per");

                entity.Property(e => e.Gingles).HasColumnName("gingles");

                entity.Property(e => e.GmonedaEgreso).HasColumnName("gmoneda_egreso");

                entity.Property(e => e.GmonedaIngreso).HasColumnName("gmoneda_ingreso");

                entity.Property(e => e.GmonedaPension).HasColumnName("gmoneda_pension");

                entity.Property(e => e.GnivelEstudio).HasColumnName("gnivel_estudio");

                entity.Property(e => e.Gprofesion).HasColumnName("gprofesion");

                entity.Property(e => e.Gsangre).HasColumnName("gsangre");

                entity.Property(e => e.GsituacionLabMad).HasColumnName("gsituacion_lab_mad");

                entity.Property(e => e.GsituacionLabPad).HasColumnName("gsituacion_lab_pad");

                entity.Property(e => e.GsituacionLabPer).HasColumnName("gsituacion_lab_per");

                entity.Property(e => e.GtipoVivienda).HasColumnName("gtipo_vivienda");

                entity.Property(e => e.Gvive).HasColumnName("gvive");

                entity.Property(e => e.GviveCon).HasColumnName("gvive_con");

                entity.Property(e => e.Gvivienda).HasColumnName("gvivienda");

                entity.Property(e => e.GviviendaProv).HasColumnName("gvivienda_prov");

                entity.Property(e => e.LibElectoral)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("lib_electoral")
                    .IsFixedLength(true);

                entity.Property(e => e.LibMilitar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("lib_militar");

                entity.Property(e => e.NbecaPorcentaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca_porcentaje");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.NedadMadre).HasColumnName("nedad_madre");

                entity.Property(e => e.NedadPadre).HasColumnName("nedad_padre");

                entity.Property(e => e.NegresoFamiliar)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("negreso_familiar");

                entity.Property(e => e.Nhijo).HasColumnName("nhijo");

                entity.Property(e => e.NingresoMadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_madre");

                entity.Property(e => e.NingresoPadre)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_padre");

                entity.Property(e => e.NingresoPersona)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ningreso_persona");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.NpensionColegio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npension_colegio");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.Ntelefono1Trab)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1_trab");

                entity.Property(e => e.Ntelefono2)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2");

                entity.Property(e => e.Ntelefono2Trab)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono2_trab");

                entity.Property(e => e.Ntelefono3)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono3");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Spersona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spersona");

                entity.Property(e => e.Tcargo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tcargo");

                entity.Property(e => e.TclaveSil)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tclave_sil");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tcorreo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo2");

                entity.Property(e => e.TcorreoSil)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo_sil");

                entity.Property(e => e.Tdireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion");

                entity.Property(e => e.TdireccionTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tdireccion_trab");

                entity.Property(e => e.Tempresa)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("tempresa");

                entity.Property(e => e.TgiroTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tgiro_trab");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Ttrabajo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ttrabajo");
            });

            modelBuilder.Entity<TPm2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pm2");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<TPm3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pm3");

                entity.Property(e => e.ApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<TPmig2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pmig2");

                entity.HasIndex(e => e.Cpersona, "ui_t_pmig2")
                    .IsUnique();

                entity.HasIndex(e => new { e.ApePaterno, e.ApeMaterno, e.Nombre }, "ui_t_pmig2_3")
                    .IsUnique();

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dpersona2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona2");

                entity.Property(e => e.DpersonaP)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona_p");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<TPmig2Dob>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pmig2_dob");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<TPmig2Dob3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pmig2_dob3");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<TPn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_pn");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.Cprogr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gnivel).HasColumnName("gnivel");

                entity.Property(e => e.Iagregar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iagregar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iconsultar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iconsultar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iejecutar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iejecutar")
                    .IsFixedLength(true);

                entity.Property(e => e.Ieliminar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ieliminar")
                    .IsFixedLength(true);

                entity.Property(e => e.Iexportar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("iexportar")
                    .IsFixedLength(true);

                entity.Property(e => e.Imodificar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("imodificar")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TPpd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ppd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.NmateriaNormal).HasColumnName("nmateria_normal");

                entity.Property(e => e.Pe).HasColumnName("pe");

                entity.Property(e => e.Pf1).HasColumnName("pf1");

                entity.Property(e => e.Pf2).HasColumnName("pf2");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TPpd081>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ppd081");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.NmateriaNormal).HasColumnName("nmateria_normal");

                entity.Property(e => e.Pe).HasColumnName("pe");

                entity.Property(e => e.Pf1).HasColumnName("pf1");

                entity.Property(e => e.Pf2).HasColumnName("pf2");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TPpd2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ppd2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.SmateriaNormal).HasColumnName("smateria_normal");

                entity.Property(e => e.Spe).HasColumnName("spe");

                entity.Property(e => e.Spf1).HasColumnName("spf1");

                entity.Property(e => e.Spf2).HasColumnName("spf2");
            });

            modelBuilder.Entity<TPpd3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ppd3");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.NpuntajePeriodo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npuntaje_periodo");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.SmateriaNormal).HasColumnName("smateria_normal");

                entity.Property(e => e.Spe).HasColumnName("spe");

                entity.Property(e => e.Spf1).HasColumnName("spf1");

                entity.Property(e => e.Spf2).HasColumnName("spf2");
            });

            modelBuilder.Entity<TPpd33>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ppd33");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.NpuntajePeriodo)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npuntaje_periodo");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.SmateriaNormal).HasColumnName("smateria_normal");

                entity.Property(e => e.Spe).HasColumnName("spe");

                entity.Property(e => e.Spf1).HasColumnName("spf1");

                entity.Property(e => e.Spf2).HasColumnName("spf2");
            });

            modelBuilder.Entity<TPrere92>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_prere92");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");
            });

            modelBuilder.Entity<TPrereqNoEnCurriPreguntum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_prereq_no_en_curri_pregunta");

                entity.Property(e => e.Asociado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asociado");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dato).HasColumnName("dato");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurricula)
                    .HasMaxLength(66)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(116)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoReq)
                    .HasMaxLength(116)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_req");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("grupo");

                entity.Property(e => e.GtipoRequisto).HasColumnName("gtipo_requisto");
            });

            modelBuilder.Entity<TProf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_prof");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<TProfesorT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_profesor_t");

                entity.Property(e => e.Ccodtra)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ccodtra")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");
            });

            modelBuilder.Entity<TProno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_prono");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor");

                entity.Property(e => e.Cprofesor2)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("cprofesor2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(140)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_Hora");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ndia");
            });

            modelBuilder.Entity<TRprufina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_rprufina");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TSu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_sus");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<TSum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_sum");

                entity.Property(e => e.GsumaNota).HasColumnName("gsuma_nota");

                entity.Property(e => e.NnotaSum)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("nnota_sum");
            });

            modelBuilder.Entity<TSuscom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_suscom");

                entity.Property(e => e.Gcomplementa).HasColumnName("gcomplementa");

                entity.Property(e => e.Gsustituye).HasColumnName("gsustituye");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");
            });

            modelBuilder.Entity<TTAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_t_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");
            });

            modelBuilder.Entity<TTF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_t_f");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TTNc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_t_nc");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");
            });

            modelBuilder.Entity<TTNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_t_nd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TTablaDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tabla_data");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CertifSperiodo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("certif_speriodo");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.DtInicioPerCer)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio_per_cer");

                entity.Property(e => e.DtMatCer)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_mat_cer");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.GtipoNotaUltima).HasColumnName("gtipo_nota_ultima");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.NdEvaluacionNotaEvol).HasColumnName("nd_evaluacion_nota_evol");

                entity.Property(e => e.NdGtipoNotaEs).HasColumnName("nd_gtipo_nota_es");

                entity.Property(e => e.NdNotaEsta).HasColumnName("nd_nota_esta");

                entity.Property(e => e.NdNotaEvol).HasColumnName("nd_nota_evol");

                entity.Property(e => e.NdParcialFijo).HasColumnName("nd_parcial_fijo");

                entity.Property(e => e.NdValorDiv).HasColumnName("nd_valor_div");

                entity.Property(e => e.NdataFila)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ndata_fila");

                entity.Property(e => e.Ndivisor).HasColumnName("ndivisor");

                entity.Property(e => e.NmaxParametro).HasColumnName("nmax_parametro");

                entity.Property(e => e.NoportunidadNota).HasColumnName("noportunidad_nota");

                entity.Property(e => e.Notas).HasColumnName("notas");

                entity.Property(e => e.Npagina).HasColumnName("npagina");

                entity.Property(e => e.Nparametro).HasColumnName("nparametro");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpuntajeFinalMateria).HasColumnName("npuntaje_final_materia");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituacionDisciplina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tsituacion_disciplina");

                entity.Property(e => e.TsituacionNotaEvol)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tsituacion_nota_evol");
            });

            modelBuilder.Entity<TTgcBk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tgc_bk");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TTgcE>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tgc_e");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TTgdBk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tgd_bk");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TTgdE>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tgd_e");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TTmasad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_tmasad");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cadmision1).HasColumnName("cadmision1");

                entity.Property(e => e.Cadmision2).HasColumnName("cadmision2");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TTrabaT>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_traba_t");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<TUni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_uni");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<TUtr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_utr");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Utran).HasColumnName("utran");
            });

            modelBuilder.Entity<TVAlumnoPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_alumno_periodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");
            });

            modelBuilder.Entity<TVCarrera>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_carrera");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DCARRERA");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCARRERA");
            });

            modelBuilder.Entity<TVInstitucion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_institucion");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DINSTITUCION");

                entity.Property(e => e.Sinstitucion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SINSTITUCION");
            });

            modelBuilder.Entity<TVPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_periodo");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPERIODO");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPERIODO");
            });

            modelBuilder.Entity<TVPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_persona");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_MATERNO");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_PATERNO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPERSONA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<TVPrograma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_programa");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPROGRAMA");

                entity.Property(e => e.Sprograma)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPROGRAMA");
            });

            modelBuilder.Entity<TVTgdAlumnoPeriodoGcondicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_v_tgd_alumno_periodo_gcondicion");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<TVcalPf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_vcal_pf");

                entity.Property(e => e.Av1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV1");

                entity.Property(e => e.Av2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("AV2");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Detalle)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EsAprobadoHistorico).HasColumnName("es_aprobado_historico");

                entity.Property(e => e.FGestado).HasColumnName("f_gestado");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.NpuntajeHistorico)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje_historico");

                entity.Property(e => e.NpuntajeRecalculo).HasColumnName("npuntaje_recalculo");

                entity.Property(e => e.Pe)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PE");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pf1)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF1");

                entity.Property(e => e.Pf2)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("PF2");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<TVcalPfV1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_vcal_pf_v1");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Nnuevo).HasColumnName("nnuevo");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Pf)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("pf");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tp)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("tp");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<Tabla00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla00");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CondicionCurso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("condicion_curso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dbloque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dbloque")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dcurso")
                    .IsFixedLength(true);

                entity.Property(e => e.Dprofesor)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dprofesor")
                    .IsFixedLength(true);

                entity.Property(e => e.HorasLab).HasColumnName("horas_lab");

                entity.Property(e => e.HorasPra).HasColumnName("horas_pra");

                entity.Property(e => e.HorasTeo).HasColumnName("horas_teo");

                entity.Property(e => e.Naprob1).HasColumnName("naprob1");

                entity.Property(e => e.Naprob2).HasColumnName("naprob2");

                entity.Property(e => e.Naprob3).HasColumnName("naprob3");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Ndesap1).HasColumnName("ndesap1");

                entity.Property(e => e.Ndesap2).HasColumnName("ndesap2");

                entity.Property(e => e.Ndesap3).HasColumnName("ndesap3");

                entity.Property(e => e.Nmatr1).HasColumnName("nmatr1");

                entity.Property(e => e.Nmatr2).HasColumnName("nmatr2");

                entity.Property(e => e.Nmatr3).HasColumnName("nmatr3");

                entity.Property(e => e.Nprom1)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("nprom1");

                entity.Property(e => e.Nprom2)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("nprom2");

                entity.Property(e => e.Nprom3)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("nprom3");

                entity.Property(e => e.Nret1).HasColumnName("nret1");

                entity.Property(e => e.Nret2).HasColumnName("nret2");

                entity.Property(e => e.Nret3).HasColumnName("nret3");

                entity.Property(e => e.Regimen)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("regimen")
                    .IsFixedLength(true);

                entity.Property(e => e.TotalHoras).HasColumnName("total_horas");
            });

            modelBuilder.Entity<Tabla01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla01");

                entity.Property(e => e.Ccodigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccodigo")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cpromo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cpromo");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Dgrupo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dgrupo")
                    .IsFixedLength(true);

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<Tabla02>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla02");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(240)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");
            });

            modelBuilder.Entity<TablaDia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla_dias");

                entity.Property(e => e.Fcontrol)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontrol");

                entity.Property(e => e.Gestado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gferiado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gferiado")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TablaGeneralC>(entity =>
            {
                entity.HasKey(e => e.Ctabla)
                    .HasName("PK__tabla_general_c__7AC720C5");

                entity.ToTable("tabla_general_c");

                entity.Property(e => e.Ctabla)
                    .ValueGeneratedNever()
                    .HasColumnName("ctabla");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Dtabla)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dtabla");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Stabla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stabla");
            });

            modelBuilder.Entity<TablaGeneralCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla_general_c_h");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Dtabla)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dtabla");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Stabla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stabla");
            });

            modelBuilder.Entity<TablaGeneralD>(entity =>
            {
                entity.HasKey(e => new { e.Ctabla, e.Citem })
                    .HasName("PK__tabla_general_d__7BBB44FE");

                entity.ToTable("tabla_general_d");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");

                entity.HasOne(d => d.CtablaNavigation)
                    .WithMany(p => p.TablaGeneralDs)
                    .HasForeignKey(d => d.Ctabla)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_tgd_a_tgc");
            });

            modelBuilder.Entity<TablaGeneralDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tabla_general_d_h");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Clog).HasColumnName("clog");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gparametro).HasColumnName("gparametro");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<Tablac>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TABLAC");

                entity.Property(e => e.Caplic).HasColumnName("CAPLIC");

                entity.Property(e => e.Cmodif)
                    .HasMaxLength(60)
                    .HasColumnName("CMODIF");

                entity.Property(e => e.Ctabla).HasColumnName("CTABLA");

                entity.Property(e => e.Dtabla)
                    .HasMaxLength(160)
                    .HasColumnName("DTABLA");

                entity.Property(e => e.Fmodif)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIF");

                entity.Property(e => e.Gestado).HasColumnName("GESTADO");

                entity.Property(e => e.Stabla)
                    .HasMaxLength(60)
                    .HasColumnName("STABLA");
            });

            modelBuilder.Entity<Tablad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TABLAD");

                entity.Property(e => e.Citem).HasColumnName("CITEM");

                entity.Property(e => e.Cmodif)
                    .HasMaxLength(60)
                    .HasColumnName("CMODIF");

                entity.Property(e => e.Ctabla).HasColumnName("CTABLA");

                entity.Property(e => e.Ditem)
                    .HasMaxLength(240)
                    .HasColumnName("DITEM");

                entity.Property(e => e.Fmodif)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIF");

                entity.Property(e => e.Gestado).HasColumnName("GESTADO");

                entity.Property(e => e.Gpara).HasColumnName("GPARA");

                entity.Property(e => e.Nvalor)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("nvalor");

                entity.Property(e => e.Sitem)
                    .HasMaxLength(60)
                    .HasColumnName("SITEM");
            });

            modelBuilder.Entity<Taller>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("taller");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctaller).HasColumnName("ctaller");

                entity.Property(e => e.Dexpositor)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dexpositor");

                entity.Property(e => e.Dtaller)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dtaller");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Staller)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("staller");
            });

            modelBuilder.Entity<TallerParticipante>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("taller_participante");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Ctaller).HasColumnName("ctaller");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gasistencia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistencia")
                    .IsFixedLength(true);

                entity.Property(e => e.Gconfirmacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gconfirmacion")
                    .IsFixedLength(true);

                entity.Property(e => e.Gnousil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnousil")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TallerTurno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("taller_turno");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cevento).HasColumnName("cevento");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctaller).HasColumnName("ctaller");

                entity.Property(e => e.Cturno).HasColumnName("cturno");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndisponibles).HasColumnName("ndisponibles");

                entity.Property(e => e.Nturno).HasColumnName("nturno");

                entity.Property(e => e.Nvacantes).HasColumnName("nvacantes");
            });

            modelBuilder.Entity<Tcenrp01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tcenrp01");

                entity.Property(e => e.Ccenrp)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ccenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Clcemi)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("clcemi")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcenrp)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dcenrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Scenrp)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scenrp")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Tclaves00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tclaves00");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cpering).HasColumnName("cpering");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Dcarrera)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Ddepartamento)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ddepartamento");

                entity.Property(e => e.Ddistrito)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ddistrito");

                entity.Property(e => e.Dpais)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dpais");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dpersona")
                    .IsFixedLength(true);

                entity.Property(e => e.Dprovincia)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dprovincia");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera")
                    .IsFixedLength(true);

                entity.Property(e => e.Simpre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("simpre")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Teindi00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("teindi00");

                entity.Property(e => e.Cbasdt)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cbasdt")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cubica)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cubica")
                    .IsFixedLength(true);

                entity.Property(e => e.Fuleje)
                    .HasColumnType("datetime")
                    .HasColumnName("fuleje");

                entity.Property(e => e.Hfiuej)
                    .HasColumnType("datetime")
                    .HasColumnName("hfiuej");

                entity.Property(e => e.Hinuej)
                    .HasColumnType("datetime")
                    .HasColumnName("hinuej");

                entity.Property(e => e.Suleje)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("suleje")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Temp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<TempLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_log");

                entity.Property(e => e.Numero)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("numero");

                entity.Property(e => e.Valor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("valor");
            });

            modelBuilder.Entity<Tempau>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempau");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.Ncapacidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ncapacidad");
            });

            modelBuilder.Entity<Tempau1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempau1");

                entity.Property(e => e.IdAulas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("id_aulas");
            });

            modelBuilder.Entity<Tempre00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempre00");

                entity.Property(e => e.Cempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.CempreConta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre_conta")
                    .IsFixedLength(true);

                entity.Property(e => e.Crucem)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("crucem")
                    .IsFixedLength(true);

                entity.Property(e => e.Dempre)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Fcapit)
                    .HasColumnType("datetime")
                    .HasColumnName("fcapit");

                entity.Property(e => e.Fcieco)
                    .HasColumnType("datetime")
                    .HasColumnName("fcieco");

                entity.Property(e => e.Fciere)
                    .HasColumnType("datetime")
                    .HasColumnName("fciere");

                entity.Property(e => e.Fmaape)
                    .HasColumnType("datetime")
                    .HasColumnName("fmaape");

                entity.Property(e => e.Fmaulc)
                    .HasColumnType("datetime")
                    .HasColumnName("fmaulc");

                entity.Property(e => e.Fregco)
                    .HasColumnType("datetime")
                    .HasColumnName("fregco");

                entity.Property(e => e.Fulcfm)
                    .HasColumnType("datetime")
                    .HasColumnName("fulcfm");

                entity.Property(e => e.Fulint)
                    .HasColumnType("datetime")
                    .HasColumnName("fulint");

                entity.Property(e => e.Hciere)
                    .HasColumnType("datetime")
                    .HasColumnName("hciere");

                entity.Property(e => e.Sempre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sempre")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TicketUnidum>(entity =>
            {
                entity.HasKey(e => e.TicketId);

                entity.ToTable("ticketUnida");

                entity.Property(e => e.TicketId).HasColumnName("ticketID");

                entity.Property(e => e.Carrera).HasColumnName("carrera");

                entity.Property(e => e.CiMat)
                    .IsUnicode(false)
                    .HasColumnName("ci_mat");

                entity.Property(e => e.EstadoTicket)
                    .IsUnicode(false)
                    .HasColumnName("estado_ticket");

                entity.Property(e => e.Femision)
                    .HasColumnType("date")
                    .HasColumnName("femision");

                entity.Property(e => e.Fmodificacion).HasColumnName("fmodificacion");

                entity.Property(e => e.Institucion)
                    .IsUnicode(false)
                    .HasColumnName("institucion");

                entity.Property(e => e.Modulo)
                    .IsUnicode(false)
                    .HasColumnName("modulo");

                entity.Property(e => e.Nombre)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Programa)
                    .IsUnicode(false)
                    .HasColumnName("programa");

                entity.Property(e => e.Tcorreo).HasColumnName("tcorreo");

                entity.Property(e => e.Usuario).HasColumnName("usuario");
            });

            modelBuilder.Entity<Tindia00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tindia00");

                entity.Property(e => e.Cdieje)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cdieje")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprogr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cprogr")
                    .IsFixedLength(true);

                entity.Property(e => e.Cprpre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cprpre")
                    .IsFixedLength(true);

                entity.Property(e => e.Dparam)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dparam")
                    .IsFixedLength(true);

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Sprogr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sprogr")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TipoActividad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tipo_actividad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CtipoActividad).HasColumnName("ctipo_actividad");

                entity.Property(e => e.DtipoActividad)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dtipo_actividad");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gnaturaleza)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnaturaleza")
                    .IsFixedLength(true);

                entity.Property(e => e.StipoActividad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo_actividad");
            });

            modelBuilder.Entity<TipoCambio>(entity =>
            {
                entity.HasKey(e => e.Nregistro);

                entity.ToTable("tipo_cambio");

                entity.Property(e => e.Nregistro)
                    .ValueGeneratedNever()
                    .HasColumnName("nregistro");

                entity.Property(e => e.Ccreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproceso)
                    .HasColumnType("datetime")
                    .HasColumnName("fproceso");

                entity.Property(e => e.Gmoneda)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gmoneda")
                    .IsFixedLength(true);

                entity.Property(e => e.Ivalor)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("ivalor");

                entity.Property(e => e.Svigen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TipoExamenActa>(entity =>
            {
                entity.ToTable("tipo_examen_actas");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.GtipoNota)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("gtipo_nota");

                entity.Property(e => e.TipoExamen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tipo_examen");
            });

            modelBuilder.Entity<TituloEducativaExtranjero>(entity =>
            {
                entity.HasKey(e => e.Ctitulo);

                entity.ToTable("titulo_educativa_extranjero");

                entity.Property(e => e.Ctitulo)
                    .ValueGeneratedNever()
                    .HasColumnName("ctitulo");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(250)
                    .HasColumnName("dtitulo");
            });

            modelBuilder.Entity<Tly>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TLY");

                entity.Property(e => e.Ativa)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATIVA")
                    .IsFixedLength(true);

                entity.Property(e => e.AulasSemAtiv)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_ATIV");

                entity.Property(e => e.AulasSemAula)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_AULA");

                entity.Property(e => e.AulasSemLab)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEM_LAB");

                entity.Property(e => e.AulasSemanais)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("AULAS_SEMANAIS");

                entity.Property(e => e.ConceitoMin1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_1");

                entity.Property(e => e.ConceitoMin2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_2");

                entity.Property(e => e.ConceitoMin3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_3");

                entity.Property(e => e.ConceitoMinEx)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX");

                entity.Property(e => e.ConceitoMinEx2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEITO_MIN_EX_2");

                entity.Property(e => e.CopiaNotaSubturma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COPIA_NOTA_SUBTURMA")
                    .IsFixedLength(true);

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("CREDITOS");

                entity.Property(e => e.Depto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPTO");

                entity.Property(e => e.Disciplina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISCIPLINA");

                entity.Property(e => e.Estagio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTAGIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Faculdade)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FACULDADE");

                entity.Property(e => e.FaltaDiaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FALTA_DIARIA")
                    .IsFixedLength(true);

                entity.Property(e => e.FormulaCa1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA1");

                entity.Property(e => e.FormulaCa2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA2");

                entity.Property(e => e.FormulaCa3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_CA3");

                entity.Property(e => e.FormulaEquiv)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_EQUIV");

                entity.Property(e => e.FormulaMf1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF1");

                entity.Property(e => e.FormulaMf2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF2");

                entity.Property(e => e.FormulaMf3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_MF3");

                entity.Property(e => e.FormulaPrereq)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA_PREREQ");

                entity.Property(e => e.GrupoMedia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_MEDIA");

                entity.Property(e => e.GrupoNota)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_NOTA");

                entity.Property(e => e.HorasAtiv)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ATIV");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_AULA");

                entity.Property(e => e.HorasEstagio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_ESTAGIO");

                entity.Property(e => e.HorasLab)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HORAS_LAB");

                entity.Property(e => e.NCasasDec)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC");

                entity.Property(e => e.NCasasDecMedia)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("N_CASAS_DEC_MEDIA");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOME");

                entity.Property(e => e.NomeCompl)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOME_COMPL");

                entity.Property(e => e.NotaMax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX");

                entity.Property(e => e.NotaMaxMedia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_MAX_MEDIA");

                entity.Property(e => e.PercPresmin)
                    .HasColumnType("decimal(7, 4)")
                    .HasColumnName("PERC_PRESMIN");

                entity.Property(e => e.Pim)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PIM")
                    .IsFixedLength(true);

                entity.Property(e => e.PrazoDivulgacao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("prazo_divulgacao");

                entity.Property(e => e.PrazoRevisao)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PRAZO_REVISAO");

                entity.Property(e => e.PriorizaFreq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIZA_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.Servico)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERVICO");

                entity.Property(e => e.TemFreq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_FREQ")
                    .IsFixedLength(true);

                entity.Property(e => e.TemNota)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEM_NOTA")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoNota)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NOTA");

                entity.Property(e => e.TruncaMedia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRUNCA_MEDIA")
                    .IsFixedLength(true);

                entity.Property(e => e.VerificaHorario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VERIFICA_HORARIO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TmpFoto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tmp_foto");

                entity.Property(e => e.Archivo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("archivo")
                    .IsFixedLength(true);

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");
            });

            modelBuilder.Entity<Token>(entity =>
            {
                entity.HasKey(e => e.Calumno)
                    .HasName("PK__token__C538DD5904843045");

                entity.ToTable("token");

                entity.Property(e => e.Calumno)
                    .ValueGeneratedNever()
                    .HasColumnName("calumno");

                entity.Property(e => e.Token1)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("token");
            });

            modelBuilder.Entity<Torige00>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("torige00");

                entity.Property(e => e.Corige)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctpori)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ctpori")
                    .IsFixedLength(true);

                entity.Property(e => e.Cubica)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cubica")
                    .IsFixedLength(true);

                entity.Property(e => e.Ddirec)
                    .IsRequired()
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ddirec")
                    .IsFixedLength(true);

                entity.Property(e => e.Dorige)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("dorige")
                    .IsFixedLength(true);

                entity.Property(e => e.Fulmod)
                    .HasColumnType("datetime")
                    .HasColumnName("fulmod");

                entity.Property(e => e.Ntelef)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ntelef")
                    .IsFixedLength(true);

                entity.Property(e => e.Sempfa)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sempfa")
                    .IsFixedLength(true);

                entity.Property(e => e.Sempgu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sempgu")
                    .IsFixedLength(true);

                entity.Property(e => e.Sempnc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sempnc")
                    .IsFixedLength(true);

                entity.Property(e => e.Sorige)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sorige")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpaseA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_a");

                entity.Property(e => e.Borrar)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("borrar");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CestadoCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("cestado_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodificacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoCalculado).HasColumnName("cperiodo_calculado");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CultPerMat).HasColumnName("cult_per_mat");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GaptoPracticas).HasColumnName("gapto_practicas");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoFinal).HasColumnName("gestado_final");

                entity.Property(e => e.Gformaingreso).HasColumnName("gformaingreso");

                entity.Property(e => e.Gnaturaleza).HasColumnName("gnaturaleza");

                entity.Property(e => e.Gtipoingreso).HasColumnName("gtipoingreso");

                entity.Property(e => e.GturnoX).HasColumnName("gturno_x");

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Nreingresos).HasColumnName("nreingresos");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave")
                    .IsFixedLength(true);

                entity.Property(e => e.Tclave6)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("tclave6")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveAdicional)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_adicional")
                    .IsFixedLength(true);

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<TpaseAa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_aa");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Darea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("darea");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sarea)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sarea");
            });

            modelBuilder.Entity<TpaseAdmi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_admi");

                entity.Property(e => e.Cactividad).HasColumnName("cactividad");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cperiodo2).HasColumnName("cperiodo2");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dadmision)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dadmision");

                entity.Property(e => e.FminExamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fmin_examen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.GtipoCalculo).HasColumnName("gtipo_calculo");

                entity.Property(e => e.IgeneraFichaMatricula).HasColumnName("igenera_ficha_matricula");

                entity.Property(e => e.Naprobado).HasColumnName("naprobado");

                entity.Property(e => e.NmaxExamenes).HasColumnName("nmax_examenes");

                entity.Property(e => e.NminExamenes).HasColumnName("nmin_examenes");

                entity.Property(e => e.Sadmision)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sadmision");
            });

            modelBuilder.Entity<TpaseAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_ap");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloqueo).HasColumnName("cbloqueo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoInicial).HasColumnName("cperiodo_inicial");

                entity.Property(e => e.CperiodoVieneDe).HasColumnName("cperiodo_viene_de");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fgcondicion)
                    .HasColumnType("datetime")
                    .HasColumnName("fgcondicion");

                entity.Property(e => e.Fgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fgestado");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fproteccion)
                    .HasColumnType("datetime")
                    .HasColumnName("fproteccion");

                entity.Property(e => e.FreglamentoMatric)
                    .HasColumnType("datetime")
                    .HasColumnName("freglamento_matric");

                entity.Property(e => e.Gautoriza).HasColumnName("gautoriza");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gconvalidados).HasColumnName("gconvalidados");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gobservado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gobservado")
                    .IsFixedLength(true);

                entity.Property(e => e.Gpago).HasColumnName("gpago");

                entity.Property(e => e.Greingreso).HasColumnName("greingreso");

                entity.Property(e => e.Gseccion).HasColumnName("gseccion");

                entity.Property(e => e.Gsituacion).HasColumnName("gsituacion");

                entity.Property(e => e.Gvendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvendedor")
                    .IsFixedLength(true);

                entity.Property(e => e.Nacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nacumulado");

                entity.Property(e => e.Nbeca)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nbeca");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoAcum).HasColumnName("ncredito_acum");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Nparacad).HasColumnName("nparacad");

                entity.Property(e => e.NparacadAcum).HasColumnName("nparacad_acum");

                entity.Property(e => e.Nponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nponderado");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.NvecesMatricula).HasColumnName("nveces_matricula");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosAprob).HasColumnName("qcursos_aprob");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.QcursosPend).HasColumnName("qcursos_pend");

                entity.Property(e => e.TreglamentoMatricIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("treglamento_matric_ip");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<TpaseApc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_apc");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Ncredito)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ncredito");
            });

            modelBuilder.Entity<TpaseB>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_b");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");
            });

            modelBuilder.Entity<TpaseB1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_bs");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fdesde)
                    .HasColumnType("datetime")
                    .HasColumnName("fdesde");

                entity.Property(e => e.Fhasta)
                    .HasColumnType("datetime")
                    .HasColumnName("fhasta");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoHora).HasColumnName("gtipo_hora");

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hfinal)
                    .HasColumnType("datetime")
                    .HasColumnName("hfinal");

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");
            });

            modelBuilder.Entity<TpaseBc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_bc");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Iingles).HasColumnName("iingles");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.Nmatriculado).HasColumnName("nmatriculado");

                entity.Property(e => e.Nreservado).HasColumnName("nreservado");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Ssesion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ssesion")
                    .IsFixedLength(true);

                entity.Property(e => e.Tfolio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tfolio");

                entity.Property(e => e.Turl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("turl");
            });

            modelBuilder.Entity<TpaseBsp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_bsp");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GasistInfosil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasist_infosil")
                    .IsFixedLength(true);

                entity.Property(e => e.Gvirtual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gvirtual")
                    .IsFixedLength(true);

                entity.Property(e => e.Hinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("hinicio");

                entity.Property(e => e.Ndia).HasColumnName("ndia");

                entity.Property(e => e.Nprofesor).HasColumnName("nprofesor");
            });

            modelBuilder.Entity<TpaseC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_c");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.DcursoCertificadoU)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado_u");

                entity.Property(e => e.DcursoU)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_u");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.GcobraU).HasColumnName("gcobra_u");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.GinasistenciaU).HasColumnName("ginasistencia_u");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.Gtipocurso).HasColumnName("gtipocurso");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.NcadenaU).HasColumnName("ncadena_u");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.NcreditoRealU).HasColumnName("ncredito_real_u");

                entity.Property(e => e.NcreditoU).HasColumnName("ncredito_u");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.NfamiliaU).HasColumnName("nfamilia_u");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.NlaboratorioU).HasColumnName("nlaboratorio_u");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.NpracticaU).HasColumnName("npractica_u");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NteoriaU).HasColumnName("nteoria_u");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.NvezMaximaU).HasColumnName("nvez_maxima_u");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.PorcInasistenciaU)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia_u");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.ScursoU)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");
            });

            modelBuilder.Entity<TpaseCam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_cam");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcampania)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dcampania");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Scampania)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("scampania");
            });

            modelBuilder.Entity<TpaseCarre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_carre");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.CcarreraEquiv).HasColumnName("ccarrera_equiv");

                entity.Property(e => e.Cfacultad).HasColumnName("cfacultad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dtitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dtitulo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");
            });

            modelBuilder.Entity<TpaseCucu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_cucu");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DcursoCertificado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso_certificado");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcobra).HasColumnName("gcobra");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Ginasistencia).HasColumnName("ginasistencia");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.Ncadena).HasColumnName("ncadena");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NcreditoMinimo)
                    .HasColumnType("decimal(4, 1)")
                    .HasColumnName("ncredito_minimo");

                entity.Property(e => e.NcreditoReal).HasColumnName("ncredito_real");

                entity.Property(e => e.Nfamilia).HasColumnName("nfamilia");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Norden).HasColumnName("norden");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvezMaxima).HasColumnName("nvez_maxima");

                entity.Property(e => e.PorcInasistencia)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("porc_inasistencia");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");
            });

            modelBuilder.Entity<TpaseCurri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_curri");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dcurricula)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcurricula");

                entity.Property(e => e.Dobservacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dobservacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NnotaAprob)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("nnota_aprob");

                entity.Property(e => e.Scurricula)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");
            });

            modelBuilder.Entity<TpaseDum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_da");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ddepartamento)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddepartamento");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sdepartamento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sdepartamento");
            });

            modelBuilder.Entity<TpaseEspeci>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_especi");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cresponsabilidad)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cresponsabilidad")
                    .IsFixedLength(true);

                entity.Property(e => e.Despecialidad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("despecialidad");

                entity.Property(e => e.Sespecialidad)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sespecialidad");
            });

            modelBuilder.Entity<TpaseEva>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_eva");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ccampania).HasColumnName("ccampania");

                entity.Property(e => e.CcampaniaAsoc).HasColumnName("ccampania_asoc");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Devaluacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("devaluacion");

                entity.Property(e => e.Fexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("fexamen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.GcarreXDefinir)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarre_x_definir")
                    .IsFixedLength(true);

                entity.Property(e => e.Gentrevista).HasColumnName("gentrevista");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GformatoFecha).HasColumnName("gformato_fecha");

                entity.Property(e => e.IaprobacionAuto).HasColumnName("iaprobacion_auto");

                entity.Property(e => e.IdistribucionAuto).HasColumnName("idistribucion_auto");

                entity.Property(e => e.IpasaJunior).HasColumnName("ipasa_junior");

                entity.Property(e => e.IverFecha).HasColumnName("iver_fecha");

                entity.Property(e => e.IverHora).HasColumnName("iver_hora");

                entity.Property(e => e.IverInstitucion).HasColumnName("iver_institucion");

                entity.Property(e => e.Ivisible).HasColumnName("ivisible");

                entity.Property(e => e.Nescala).HasColumnName("nescala");

                entity.Property(e => e.Ngrado).HasColumnName("ngrado");

                entity.Property(e => e.Nproceso).HasColumnName("nproceso");

                entity.Property(e => e.Sevaluacion)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sevaluacion");
            });

            modelBuilder.Entity<TpaseEvaexo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_evaexo");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");
            });

            modelBuilder.Entity<TpaseEvapo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_evapos");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Cevaluacion).HasColumnName("cevaluacion");

                entity.Property(e => e.CevaluacionClave).HasColumnName("cevaluacion_clave");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cregistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cregistro");

                entity.Property(e => e.Fentrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("fentrevista");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fregistro");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gtipo).HasColumnName("gtipo");

                entity.Property(e => e.GturnoCol).HasColumnName("gturno_col");

                entity.Property(e => e.IbachillerComercial).HasColumnName("ibachiller_comercial");

                entity.Property(e => e.IbachillerHumanistico).HasColumnName("ibachiller_humanistico");

                entity.Property(e => e.Iconfirma).HasColumnName("iconfirma");

                entity.Property(e => e.Imanual).HasColumnName("imanual");

                entity.Property(e => e.NemisionCarnet).HasColumnName("nemision_carnet");

                entity.Property(e => e.Nexamen).HasColumnName("nexamen");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.Scolegio).HasColumnName("scolegio");

                entity.Property(e => e.Spuerta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("spuerta");

                entity.Property(e => e.TbachillerEnOtro)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tbachiller_en_otro");

                entity.Property(e => e.Trespuesta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("trespuesta")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpaseF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_f");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.CcurriculaFuente).HasColumnName("ccurricula_fuente");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FprimeraMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fprimera_matricula");

                entity.Property(e => e.FretiroCurso)
                    .HasColumnType("datetime")
                    .HasColumnName("fretiro_curso");

                entity.Property(e => e.FultimaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fultima_matricula");

                entity.Property(e => e.GautorizaInasis).HasColumnName("gautoriza_inasis");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gprogramado).HasColumnName("gprogramado");

                entity.Property(e => e.Nasistencia).HasColumnName("nasistencia");

                entity.Property(e => e.NasistenciaProgramada).HasColumnName("nasistencia_programada");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.Nfalta).HasColumnName("nfalta");

                entity.Property(e => e.Njustifica).HasColumnName("njustifica");

                entity.Property(e => e.Nlaboratorio).HasColumnName("nlaboratorio");

                entity.Property(e => e.Npractica).HasColumnName("npractica");

                entity.Property(e => e.Nteoria).HasColumnName("nteoria");

                entity.Property(e => e.NvecesRetiro).HasColumnName("nveces_retiro");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.NvezReal).HasColumnName("nvez_real");

                entity.Property(e => e.Pasistencia)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pasistencia");

                entity.Property(e => e.Pfalta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("pfalta");

                entity.Property(e => e.Tvalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tvalida")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpaseNc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_nc");

                entity.Property(e => e.AulasDadas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_dadas");

                entity.Property(e => e.AulasPrevistas)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("aulas_previstas");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaOrigen).HasColumnName("ccurricula_origen");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CobrancaSep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cobranca_sep")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobservacion).HasColumnName("cobservacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Creditos)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("creditos");

                entity.Property(e => e.Disciplina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("disciplina");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_matricula");

                entity.Property(e => e.DtUltalt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultalt");

                entity.Property(e => e.Fcalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("fcalculo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fresolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fresolucion");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.GaprobadoMigrado).HasColumnName("gaprobado_migrado");

                entity.Property(e => e.Gmigrado).HasColumnName("gmigrado");

                entity.Property(e => e.GpromCero).HasColumnName("gprom_cero");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.HorasAula)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("horas_aula");

                entity.Property(e => e.LancDeb).HasColumnName("lanc_deb");

                entity.Property(e => e.NivelPresenca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nivel_presenca");

                entity.Property(e => e.Npromedio)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio");

                entity.Property(e => e.NpromedioBk)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("npromedio_bk");

                entity.Property(e => e.PercPresenca)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("perc_presenca");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.SitDetalhe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sit_detalhe");

                entity.Property(e => e.SituacaoHist)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("situacao_hist");

                entity.Property(e => e.Tpromedio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tpromedio");

                entity.Property(e => e.Tresolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tresolucion");

                entity.Property(e => e.Turma)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("turma");
            });

            modelBuilder.Entity<TpaseNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_nd");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fdata)
                    .HasColumnType("datetime")
                    .HasColumnName("fdata");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoNota).HasColumnName("gtipo_nota");

                entity.Property(e => e.Nnota)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("nnota");

                entity.Property(e => e.Tnota)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tnota");
            });

            modelBuilder.Entity<TpaseP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_p");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DfechaCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfecha_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.DiasMatriWeb).HasColumnName("dias_matri_web");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.FcierreMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matri_web");

                entity.Property(e => e.FcierreMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matricula");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.FfinalVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_vigencia");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.FinicioMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_matri_web");

                entity.Property(e => e.FinicioVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_vigencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.Gvisible).HasColumnName("gvisible");

                entity.Property(e => e.HoraMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("hora_matri_web");

                entity.Property(e => e.Ncreditomax).HasColumnName("ncreditomax");

                entity.Property(e => e.Ncreditomin).HasColumnName("ncreditomin");

                entity.Property(e => e.NgrupoPeriodo).HasColumnName("ngrupo_periodo");

                entity.Property(e => e.NlibroCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nlibro_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Scorreo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scorreo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpaseP140>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_p140");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DfechaCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfecha_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.DiasMatriWeb).HasColumnName("dias_matri_web");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.FcierreMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matri_web");

                entity.Property(e => e.FcierreMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matricula");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.FfinalVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_vigencia");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.FinicioMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_matri_web");

                entity.Property(e => e.FinicioVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_vigencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.Gvisible).HasColumnName("gvisible");

                entity.Property(e => e.HoraMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("hora_matri_web");

                entity.Property(e => e.Ncreditomax).HasColumnName("ncreditomax");

                entity.Property(e => e.Ncreditomin).HasColumnName("ncreditomin");

                entity.Property(e => e.NgrupoPeriodo).HasColumnName("ngrupo_periodo");

                entity.Property(e => e.NlibroCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nlibro_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Scorreo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scorreo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpaseP90>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_p90");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.DfechaCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dfecha_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.DiasMatriWeb).HasColumnName("dias_matri_web");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Faaper)
                    .HasColumnType("datetime")
                    .HasColumnName("faaper");

                entity.Property(e => e.FcierreMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matri_web");

                entity.Property(e => e.FcierreMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fcierre_matricula");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.FfinalVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal_vigencia");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.FinicioMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_matri_web");

                entity.Property(e => e.FinicioVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio_vigencia");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GtipoPeriodo).HasColumnName("gtipo_periodo");

                entity.Property(e => e.Gvisible).HasColumnName("gvisible");

                entity.Property(e => e.HoraMatriWeb)
                    .HasColumnType("datetime")
                    .HasColumnName("hora_matri_web");

                entity.Property(e => e.Ncreditomax).HasColumnName("ncreditomax");

                entity.Property(e => e.Ncreditomin).HasColumnName("ncreditomin");

                entity.Property(e => e.NgrupoPeriodo).HasColumnName("ngrupo_periodo");

                entity.Property(e => e.NlibroCertificado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nlibro_certificado")
                    .IsFixedLength(true);

                entity.Property(e => e.Nperio)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("nperio")
                    .IsFixedLength(true);

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nsemana).HasColumnName("nsemana");

                entity.Property(e => e.Scorreo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scorreo")
                    .IsFixedLength(true);

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpasePc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_pc");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.CcurriculaAnt).HasColumnName("ccurricula_ant");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Chorario).HasColumnName("chorario");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoAnt).HasColumnName("cperiodo_ant");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdefault).HasColumnName("gdefault");
            });

            modelBuilder.Entity<TpasePostul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_postul");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Ccarrera1).HasColumnName("ccarrera1");

                entity.Property(e => e.Ccarrera2).HasColumnName("ccarrera2");

                entity.Property(e => e.CcarreraPrevia).HasColumnName("ccarrera_previa");

                entity.Property(e => e.CcarreraTraslado).HasColumnName("ccarrera_traslado");

                entity.Property(e => e.Ccompania).HasColumnName("ccompania");

                entity.Property(e => e.Ceducativo).HasColumnName("ceducativo");

                entity.Property(e => e.Ceducativo2).HasColumnName("ceducativo2");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cingreso2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso2")
                    .IsFixedLength(true);

                entity.Property(e => e.CingresoVend)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cingreso_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.CinstitucionVend).HasColumnName("cinstitucion_vend");

                entity.Property(e => e.ClistaPrecio).HasColumnName("clista_precio");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodalidad1).HasColumnName("cmodalidad1");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CpersonaVend).HasColumnName("cpersona_vend");

                entity.Property(e => e.Cpostulante).HasColumnName("cpostulante");

                entity.Property(e => e.CprogramaVend).HasColumnName("cprograma_vend");

                entity.Property(e => e.CtpdocCaja)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ctpdoc_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.Dcomentario)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcomentario");

                entity.Property(e => e.Dreserva)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dreserva");

                entity.Property(e => e.Dretiro)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dretiro");

                entity.Property(e => e.FCartaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("f_carta_bienestar");

                entity.Property(e => e.FEntExpConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_ent_exp_conv");

                entity.Property(e => e.FRecepcionCarta)
                    .HasColumnType("datetime")
                    .HasColumnName("f_recepcion_carta");

                entity.Property(e => e.FRsptaConv)
                    .HasColumnType("datetime")
                    .HasColumnName("f_rspta_conv");

                entity.Property(e => e.Faprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("faprobacion");

                entity.Property(e => e.FasignaCateg)
                    .HasColumnType("datetime")
                    .HasColumnName("fasigna_categ");

                entity.Property(e => e.FfaxSolicita)
                    .HasColumnType("datetime")
                    .HasColumnName("ffax_solicita");

                entity.Property(e => e.FfichaBienestar)
                    .HasColumnType("datetime")
                    .HasColumnName("fficha_bienestar");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FpagoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_matricula");

                entity.Property(e => e.FpagoReserva)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago_reserva");

                entity.Property(e => e.GRindioExplor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("g_rindio_explor")
                    .IsFixedLength(true);

                entity.Property(e => e.GasistiraCharla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gasistira_charla")
                    .IsFixedLength(true);

                entity.Property(e => e.GcarreraDefinida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gcarrera_definida")
                    .IsFixedLength(true);

                entity.Property(e => e.GcatEnteEdu).HasColumnName("gcat_ente_edu");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.GestadoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gestado_vend")
                    .IsFixedLength(true);

                entity.Property(e => e.GfaxSolicita)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gfax_solicita")
                    .IsFixedLength(true);

                entity.Property(e => e.GfichaBienestar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gficha_bienestar")
                    .IsFixedLength(true);

                entity.Property(e => e.Gintegracion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gintegracion")
                    .IsFixedLength(true);

                entity.Property(e => e.Ginteres).HasColumnName("ginteres");

                entity.Property(e => e.Gmodalidad).HasColumnName("gmodalidad");

                entity.Property(e => e.Gparticular)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gparticular")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaIsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_isil")
                    .IsFixedLength(true);

                entity.Property(e => e.GpostularaUsil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpostulara_usil")
                    .IsFixedLength(true);

                entity.Property(e => e.GrendiraExamen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grendira_examen")
                    .IsFixedLength(true);

                entity.Property(e => e.GrsptaPostul).HasColumnName("grspta_postul");

                entity.Property(e => e.GtipoContacto).HasColumnName("gtipo_contacto");

                entity.Property(e => e.GtipoExonerado).HasColumnName("gtipo_exonerado");

                entity.Property(e => e.Isecundaria).HasColumnName("isecundaria");

                entity.Property(e => e.NanioEgreso).HasColumnName("nanio_egreso");

                entity.Property(e => e.NcargaAcad).HasColumnName("ncarga_acad");

                entity.Property(e => e.NdocumCaja).HasColumnName("ndocum_caja");

                entity.Property(e => e.Npuesto).HasColumnName("npuesto");

                entity.Property(e => e.Npuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npuntaje");

                entity.Property(e => e.SasistioEntrevis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sasistio_entrevis")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategprog)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategprog")
                    .IsFixedLength(true);

                entity.Property(e => e.Sreserva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sreserva")
                    .IsFixedLength(true);

                entity.Property(e => e.Sretiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sretiro")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tipo_pago")
                    .IsFixedLength(true);

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TpasePrereq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpase_prereq");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.CcursoRequisito).HasColumnName("ccurso_requisito");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GtipoRequisito).HasColumnName("gtipo_requisito");
            });

            modelBuilder.Entity<Tpeg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tpeg");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");
            });

            modelBuilder.Entity<TransaccionCH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("transaccion_c_h");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cempre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cempre")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ctrabajador)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ctrabajador")
                    .IsFixedLength(true);

                entity.Property(e => e.Ctransaccion).HasColumnName("ctransaccion");

                entity.Property(e => e.Cvisitante).HasColumnName("cvisitante");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Fprestamo)
                    .HasColumnType("datetime")
                    .HasColumnName("fprestamo");

                entity.Property(e => e.Gnaturaleza)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gnaturaleza")
                    .IsFixedLength(true);

                entity.Property(e => e.NitemDevuelto).HasColumnName("nitem_devuelto");

                entity.Property(e => e.NitemPrestado).HasColumnName("nitem_prestado");
            });

            modelBuilder.Entity<TransaccionDH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("transaccion_d_h");

                entity.Property(e => e.Cejemplar).HasColumnName("cejemplar");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctransaccion).HasColumnName("ctransaccion");

                entity.Property(e => e.CtransaccionRen).HasColumnName("ctransaccion_ren");

                entity.Property(e => e.Fdevolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("fdevolucion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.FrealDevolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("freal_devolucion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gpago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gpago")
                    .IsFixedLength(true);

                entity.Property(e => e.GtipoPrestamo).HasColumnName("gtipo_prestamo");

                entity.Property(e => e.NctaCte).HasColumnName("ncta_cte");

                entity.Property(e => e.NimpMora)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nimp_mora");

                entity.Property(e => e.NimpMoraReal)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("nimp_mora_real");
            });

            modelBuilder.Entity<Traza>(entity =>
            {
                entity.HasKey(e => e.RowNumber)
                    .HasName("PK__Traza__45F200EF");

                entity.ToTable("Traza");

                entity.Property(e => e.ApplicationName).HasMaxLength(128);

                entity.Property(e => e.ClientProcessId).HasColumnName("ClientProcessID");

                entity.Property(e => e.Cpu).HasColumnName("CPU");

                entity.Property(e => e.LoginName).HasMaxLength(128);

                entity.Property(e => e.NtuserName)
                    .HasMaxLength(128)
                    .HasColumnName("NTUserName");

                entity.Property(e => e.Spid).HasColumnName("SPID");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.TextData).HasColumnType("ntext");
            });

            modelBuilder.Entity<Traza1>(entity =>
            {
                entity.HasKey(e => e.RowNumber)
                    .HasName("PK__trazas__4409B87D");

                entity.ToTable("trazas");

                entity.Property(e => e.ApplicationName).HasMaxLength(128);

                entity.Property(e => e.ClientProcessId).HasColumnName("ClientProcessID");

                entity.Property(e => e.Cpu).HasColumnName("CPU");

                entity.Property(e => e.LoginName).HasMaxLength(128);

                entity.Property(e => e.NtuserName)
                    .HasMaxLength(128)
                    .HasColumnName("NTUserName");

                entity.Property(e => e.Spid).HasColumnName("SPID");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.TextData).HasColumnType("ntext");
            });

            modelBuilder.Entity<Trazas2503>(entity =>
            {
                entity.HasKey(e => e.RowNumber)
                    .HasName("PK__trazas2503__49C291D3");

                entity.ToTable("trazas2503");

                entity.Property(e => e.ApplicationName).HasMaxLength(128);

                entity.Property(e => e.ClientProcessId).HasColumnName("ClientProcessID");

                entity.Property(e => e.Cpu).HasColumnName("CPU");

                entity.Property(e => e.LoginName).HasMaxLength(128);

                entity.Property(e => e.NtuserName)
                    .HasMaxLength(128)
                    .HasColumnName("NTUserName");

                entity.Property(e => e.Spid).HasColumnName("SPID");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.TextData).HasColumnType("ntext");
            });

            modelBuilder.Entity<Tum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_a");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.NchequeoMax)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nchequeo_max");

                entity.Property(e => e.NchequeoMin)
                    .HasColumnType("decimal(3, 2)")
                    .HasColumnName("nchequeo_min");

                entity.Property(e => e.NchequeoSum)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("nchequeo_sum");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Sturno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sturno");
            });

            modelBuilder.Entity<TurnoSpu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("turno_spu");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Nturno).HasColumnName("nturno");

                entity.Property(e => e.QturnosMax).HasColumnName("qturnos_max");
            });

            modelBuilder.Entity<Ubicacion>(entity =>
            {
                entity.HasKey(e => new { e.Cpais, e.Cdepartamento, e.Cprovincia, e.Cdistrito, e.Cnivel })
                    .HasName("PK__ubicacion__0FF747D5");

                entity.ToTable("ubicacion");

                entity.Property(e => e.Cpais).HasColumnName("cpais");

                entity.Property(e => e.Cdepartamento).HasColumnName("cdepartamento");

                entity.Property(e => e.Cprovincia).HasColumnName("cprovincia");

                entity.Property(e => e.Cdistrito).HasColumnName("cdistrito");

                entity.Property(e => e.Cnivel).HasColumnName("cnivel");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cpostal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cpostal");

                entity.Property(e => e.Dgentilicio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dgentilicio");

                entity.Property(e => e.Dubicacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dubicacion");

                entity.Property(e => e.DubicacionOrigen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dubicacion_origen");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Subicacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("subicacion");

                entity.Property(e => e.SubicacionOrigen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("subicacion_origen");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.Cusuario)
                    .HasName("PK__usuario__66010E09");

                entity.ToTable("usuario");

                entity.HasIndex(e => e.Susuario, "iu_usuario_susuario")
                    .IsUnique();

                entity.HasIndex(e => new { e.Susuario, e.CusuarioSql }, "iu_usuario_susuario_cusuario_sql")
                    .IsUnique();

                entity.Property(e => e.Cusuario)
                    .ValueGeneratedNever()
                    .HasColumnName("cusuario");

                entity.Property(e => e.Carea).HasColumnName("carea");

                entity.Property(e => e.Ccremp)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ccremp");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CinstitucionUlt).HasColumnName("cinstitucion_ult");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Corige).HasColumnName("corige");

                entity.Property(e => e.CperiodoUltimo).HasColumnName("cperiodo_ultimo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CprogramaUltimo).HasColumnName("cprograma_ultimo");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ctraba");

                entity.Property(e => e.CusuarioSql).HasColumnName("cusuario_sql");

                entity.Property(e => e.Dusuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dusuario");

                entity.Property(e => e.FcambioClave)
                    .HasColumnType("datetime")
                    .HasColumnName("fcambio_clave");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gexportar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gexportar")
                    .IsFixedLength(true);

                entity.Property(e => e.Gplataforma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gplataforma")
                    .IsFixedLength(true);

                entity.Property(e => e.Grecord)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grecord")
                    .IsFixedLength(true);

                entity.Property(e => e.Naccesos).HasColumnName("naccesos");

                entity.Property(e => e.Susuario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");

                entity.Property(e => e.TclaveDes)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("tclave_des");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.UsuarioWin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_win");

                entity.Property(e => e.Web)
                    .HasColumnName("web")
                    .HasDefaultValueSql("((0))")
                    .HasComment("0(significa no tiene permiso a intranet), 1(tiene permiso a intranet)");

                entity.HasOne(d => d.CpersonaNavigation)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.Cpersona)
                    .HasConstraintName("fk_usuario_a_persona");

                entity.HasOne(d => d.CusuarioSqlNavigation)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.CusuarioSql)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_a_usuario_sql");
            });

            modelBuilder.Entity<UsuarioAlerta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("usuario_alertas");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.GtipoAlerta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_alerta")
                    .IsFixedLength(true);

                entity.Property(e => e.Svigen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("svigen")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<UsuarioAplicacion>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Caplicacion })
                    .HasName("PK__usuario_aplicaci__68DD7AB4");

                entity.ToTable("usuario_aplicacion");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Caplicacion).HasColumnName("caplicacion");

                entity.Property(e => e.CinstitucionUlt).HasColumnName("cinstitucion_ult");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.CperiodoUltimo).HasColumnName("cperiodo_ultimo");

                entity.Property(e => e.CprogramaUltimo).HasColumnName("cprograma_ultimo");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.HasOne(d => d.CaplicacionNavigation)
                    .WithMany(p => p.UsuarioAplicacions)
                    .HasForeignKey(d => d.Caplicacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_aplicacion_a_aplicacion");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithMany(p => p.UsuarioAplicacions)
                    .HasForeignKey(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_aplicacion_a_usuario");
            });

            modelBuilder.Entity<UsuarioC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("usuario_c");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprofesor).HasColumnName("cprofesor");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.WindowsLogin)
                    .HasMaxLength(20)
                    .HasColumnName("windows_login")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<UsuarioCarrera>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Ccarrera })
                    .HasName("PK__usuario_carrera__44EAFE58");

                entity.ToTable("usuario_carrera");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<UsuarioFirma>(entity =>
            {
                entity.HasKey(e => e.Cusuario)
                    .HasName("PK__usuario_firma__7FC0E00C");

                entity.ToTable("usuario_firma");

                entity.Property(e => e.Cusuario)
                    .ValueGeneratedNever()
                    .HasColumnName("cusuario");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Dcargo)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dcargo");

                entity.Property(e => e.Dfirma)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dfirma");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithOne(p => p.UsuarioFirma)
                    .HasForeignKey<UsuarioFirma>(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_firma_a_usuario");
            });

            modelBuilder.Entity<UsuarioGrupo>(entity =>
            {
                entity.HasKey(e => new { e.Cgrupo, e.Cusuario })
                    .HasName("PK__usuario_grupo__772B9A0B");

                entity.ToTable("usuario_grupo");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.HasOne(d => d.CgrupoNavigation)
                    .WithMany(p => p.UsuarioGrupos)
                    .HasForeignKey(d => d.Cgrupo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_grupo_a_grupo");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithMany(p => p.UsuarioGrupos)
                    .HasForeignKey(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_grupo_a_usuario");
            });

            modelBuilder.Entity<UsuarioH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("usuario_h");

                entity.Property(e => e.Ccremp)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ccremp");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.CinstitucionUlt).HasColumnName("cinstitucion_ult");

                entity.Property(e => e.Clocal).HasColumnName("clocal");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Corige)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("corige")
                    .IsFixedLength(true);

                entity.Property(e => e.CperiodoUltimo).HasColumnName("cperiodo_ultimo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.CprogramaUltimo).HasColumnName("cprograma_ultimo");

                entity.Property(e => e.Ctraba)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ctraba");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.CusuarioSql).HasColumnName("cusuario_sql");

                entity.Property(e => e.Dusuario)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dusuario");

                entity.Property(e => e.FcambioClave)
                    .HasColumnType("datetime")
                    .HasColumnName("fcambio_clave");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Gexportar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gexportar")
                    .IsFixedLength(true);

                entity.Property(e => e.Grecord)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("grecord")
                    .IsFixedLength(true);

                entity.Property(e => e.Naccesos).HasColumnName("naccesos");

                entity.Property(e => e.Susuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<UsuarioModuloCred>(entity =>
            {
                entity.HasKey(e => e.Cusuario)
                    .HasName("PK__usuario_modulo_c__0579B962");

                entity.ToTable("usuario_modulo_cred");

                entity.Property(e => e.Cusuario)
                    .ValueGeneratedNever()
                    .HasColumnName("cusuario");

                entity.Property(e => e.Cmodulo).HasColumnName("cmodulo");

                entity.Property(e => e.CtipoCliente).HasColumnName("ctipo_cliente");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithOne(p => p.UsuarioModuloCred)
                    .HasForeignKey<UsuarioModuloCred>(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_modulo_cred_a_usuario");
            });

            modelBuilder.Entity<UsuarioPagina>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Cpagina });

                entity.ToTable("usuario_pagina");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Cpagina).HasColumnName("cpagina");
            });

            modelBuilder.Entity<UsuarioPeriodo>(entity =>
            {
                entity.HasKey(e => new { e.Cusuario, e.Cperiodo });

                entity.ToTable("usuario_periodo");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.MostrarPrimeraLinea).HasColumnName("mostrarPrimeraLinea");

                entity.Property(e => e.MostrarTodasLineas)
                    .HasColumnName("mostrarTodasLineas")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<UsuarioPrograma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("usuario_programa");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Cusuario).HasColumnName("cusuario");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.HasOne(d => d.CprogramaNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cprograma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_programa_a_programa");

                entity.HasOne(d => d.CusuarioNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Cusuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_usuario_programa_a_usuario");
            });

            modelBuilder.Entity<UsuarioSql>(entity =>
            {
                entity.HasKey(e => e.CusuarioSql)
                    .HasName("PK__usuario_sql__744F2D60");

                entity.ToTable("usuario_sql");

                entity.Property(e => e.CusuarioSql)
                    .ValueGeneratedNever()
                    .HasColumnName("cusuario_sql");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.DusuarioSql)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("dusuario_sql");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NdiasLimite).HasColumnName("ndias_limite");

                entity.Property(e => e.SusuarioSql)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("susuario_sql");

                entity.Property(e => e.Tclave)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tclave");
            });

            modelBuilder.Entity<VAlumnoPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_alumno_periodo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.CperiodoIngreso).HasColumnName("cperiodo_ingreso");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Gcategoria).HasColumnName("gcategoria");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NcreditosNormal)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ncreditos_normal");

                entity.Property(e => e.NcreditosPasantia)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ncreditos_pasantia");

                entity.Property(e => e.QcrediMat).HasColumnName("qcredi_mat");

                entity.Property(e => e.QcursosMat).HasColumnName("qcursos_mat");

                entity.Property(e => e.Singresante)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("singresante");
            });

            modelBuilder.Entity<VAlumnoPeriodoListum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_alumno_periodo_lista");

                entity.Property(e => e.ACperiodo).HasColumnName("a_cperiodo");

                entity.Property(e => e.AGformaingreso).HasColumnName("a_gformaingreso");

                entity.Property(e => e.AGtipoingreso).HasColumnName("a_gtipoingreso");

                entity.Property(e => e.ANacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("a_nacumulado");

                entity.Property(e => e.ANcreditoAcum).HasColumnName("a_ncredito_acum");

                entity.Property(e => e.ASperiodoIngreso)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("a_speriodo_ingreso");

                entity.Property(e => e.AlumnoTcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("alumno_tcorreo");

                entity.Property(e => e.ApCcreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ap_ccreacion");

                entity.Property(e => e.ApCmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ap_cmodificacion");

                entity.Property(e => e.ApCperiodoInicial).HasColumnName("ap_cperiodo_inicial");

                entity.Property(e => e.ApFcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("ap_fcreacion");

                entity.Property(e => e.ApFgestado)
                    .HasColumnType("datetime")
                    .HasColumnName("ap_fgestado");

                entity.Property(e => e.ApFmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("ap_fmodificacion");

                entity.Property(e => e.ApGconvalidados).HasColumnName("ap_gconvalidados");

                entity.Property(e => e.ApNacumulado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ap_nacumulado");

                entity.Property(e => e.ApNcredito).HasColumnName("ap_ncredito");

                entity.Property(e => e.ApNcreditoAcum).HasColumnName("ap_ncredito_acum");

                entity.Property(e => e.ApNorden).HasColumnName("ap_norden");

                entity.Property(e => e.ApNponderado)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("ap_nponderado");

                entity.Property(e => e.ApQcrediMat).HasColumnName("ap_qcredi_mat");

                entity.Property(e => e.ApQcursosMat).HasColumnName("ap_qcursos_mat");

                entity.Property(e => e.Cadmision).HasColumnName("cadmision");

                entity.Property(e => e.Cagrupamiento).HasColumnName("cagrupamiento");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.CapGseccion).HasColumnName("cap_gseccion");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccronograma).HasColumnName("ccronograma");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Cespecialidad).HasColumnName("cespecialidad");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.ClocalPref).HasColumnName("clocal_pref");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cobligacion).HasColumnName("cobligacion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dagrupamiento)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dagrupamiento");

                entity.Property(e => e.Dlocal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dlocal");

                entity.Property(e => e.Dmodalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad");

                entity.Property(e => e.Doperacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("doperacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EeDbarrio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_dbarrio");

                entity.Property(e => e.EeDdepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_ddepartamento");

                entity.Property(e => e.EeDeducativo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_deducativo");

                entity.Property(e => e.EeDpais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_dpais");

                entity.Property(e => e.EeDprovincia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ee_dprovincia");

                entity.Property(e => e.EeSestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ee_sestado");

                entity.Property(e => e.EeSgtipo1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ee_sgtipo1");

                entity.Property(e => e.EeStipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ee_stipo");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("fmatricula");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Modalidad)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("modalidad");

                entity.Property(e => e.Nmas).HasColumnName("nmas");

                entity.Property(e => e.Nobservaciones).HasColumnName("nobservaciones");

                entity.Property(e => e.Nprioridad).HasColumnName("nprioridad");

                entity.Property(e => e.PCargoTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("p_cargo_trab");

                entity.Property(e => e.PDireccTrab)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("p_direcc_trab");

                entity.Property(e => e.PDistrTrab)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_distr_trab");

                entity.Property(e => e.PDistrito)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_distrito");

                entity.Property(e => e.PEmpresaTrab)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_empresa_trab");

                entity.Property(e => e.PGdocIdentidad)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("p_gdoc_identidad");

                entity.Property(e => e.PNdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("p_ndoc_identidad");

                entity.Property(e => e.PeriodoSigla)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("periodo_sigla");

                entity.Property(e => e.PersonaApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_ape_materno");

                entity.Property(e => e.PersonaApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_ape_paterno");

                entity.Property(e => e.PersonaCorreoTrab)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_correo_trab");

                entity.Property(e => e.PersonaFnacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("persona_fnacimiento");

                entity.Property(e => e.PersonaNombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_nombre");

                entity.Property(e => e.PersonaNtelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("persona_ntelefono1");

                entity.Property(e => e.PersonaNtelefono2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("persona_ntelefono2");

                entity.Property(e => e.PersonaTcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("persona_tcorreo");

                entity.Property(e => e.PersonaTdireccion)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("persona_tdireccion");

                entity.Property(e => e.PosCeducativo).HasColumnName("pos_ceducativo");

                entity.Property(e => e.SDcadmision)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s_dcadmision");

                entity.Property(e => e.SScadmision)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("s_scadmision");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scondicion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scondicion");

                entity.Property(e => e.Scurricula)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("scurricula");

                entity.Property(e => e.Sespecialidad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sespecialidad");

                entity.Property(e => e.Sestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.Sinstitucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sinstitucion");

                entity.Property(e => e.Sprograma)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("sprograma");

                entity.Property(e => e.TipoExonerado)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tipo_exonerado");
            });

            modelBuilder.Entity<VBancaAlumnoContenido>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_banca_alumno_contenido");

                entity.Property(e => e.ApScondicion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ap_scondicion");

                entity.Property(e => e.ApSestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ap_sestado");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            modelBuilder.Entity<VBancaComprobantePorInteraccion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_banca_comprobante_por_interaccion");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccomprobante).HasColumnName("ccomprobante");

                entity.Property(e => e.CcomprobanteRelacionado).HasColumnName("ccomprobante_relacionado");

                entity.Property(e => e.Cconcepto).HasColumnName("cconcepto");

                entity.Property(e => e.Ccontenido).HasColumnName("ccontenido");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Celaboracion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("celaboracion");

                entity.Property(e => e.Cingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Csede).HasColumnName("csede");

                entity.Property(e => e.Fcontable)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Femision)
                    .HasColumnType("datetime")
                    .HasColumnName("femision");

                entity.Property(e => e.Fimpresion)
                    .HasColumnType("datetime")
                    .HasColumnName("fimpresion");

                entity.Property(e => e.FlagDevolucion).HasColumnName("flag_devolucion");

                entity.Property(e => e.Formato).HasColumnName("formato");

                entity.Property(e => e.Fpago)
                    .HasColumnType("datetime")
                    .HasColumnName("fpago");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fvencimiento");

                entity.Property(e => e.GclasePeriodo).HasColumnName("gclase_periodo");

                entity.Property(e => e.GcondicionVenta).HasColumnName("gcondicion_venta");

                entity.Property(e => e.Grupo).HasColumnName("grupo");

                entity.Property(e => e.ImporteImpuesto10)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("importe_impuesto_10");

                entity.Property(e => e.ImporteImpuesto5)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("importe_impuesto_5");

                entity.Property(e => e.NmontoBeneficioInteraccion)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_interaccion");

                entity.Property(e => e.NmontoExenta)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("nmonto_exenta");

                entity.Property(e => e.NmontoGa)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("nmonto_ga");

                entity.Property(e => e.NmontoInteres)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("nmonto_interes");

                entity.Property(e => e.NmontoPago)
                    .HasColumnType("numeric(38, 3)")
                    .HasColumnName("nmonto_pago");

                entity.Property(e => e.Nnumero).HasColumnName("nnumero");

                entity.Property(e => e.Nserie).HasColumnName("nserie");

                entity.Property(e => e.Scontenido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("scontenido");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sestado");

                entity.Property(e => e.Sorigen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sorigen");

                entity.Property(e => e.Stipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("stipo");

                entity.Property(e => e.Tcarrera)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tcarrera");

                entity.Property(e => e.Tipofactura).HasColumnName("tipofactura");

                entity.Property(e => e.Tlugar)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("tlugar");

                entity.Property(e => e.Truc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("truc");

                entity.Property(e => e.Tsolicitante)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tsolicitante");
            });

            modelBuilder.Entity<VBancaObligacionMovimientoPagoPorInteraccion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_banca_obligacion_movimiento_pago_por_interaccion");

                entity.Property(e => e.AquiPago)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("aqui_pago");

                entity.Property(e => e.CanjePublicitarioRrhh)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("canje_publicitario_rrhh");

                entity.Property(e => e.Cheques)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("cheques");

                entity.Property(e => e.Cinteraccion).HasColumnName("cinteraccion");

                entity.Property(e => e.CobranzaPorCobrar)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("cobranza_por_cobrar");

                entity.Property(e => e.DepositosEnCuenta)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("depositos_en_cuenta");

                entity.Property(e => e.Documenta)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("documenta");

                entity.Property(e => e.Efectivo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("efectivo");

                entity.Property(e => e.Otros)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("otros");

                entity.Property(e => e.PagoExpress)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("pago_express");

                entity.Property(e => e.TarjetaCredito)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tarjeta_credito");

                entity.Property(e => e.TarjetaDebito)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tarjeta_debito");

                entity.Property(e => e.VisionBanco)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("vision_banco");
            });

            modelBuilder.Entity<VBibClasificacionDisponibilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_disponibilidad");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.NcantidadDisponible).HasColumnName("ncantidad_disponible");
            });

            modelBuilder.Entity<VBibClasificacionDominio2Listum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_dominio_2_lista");

                entity.Property(e => e.Cclasificacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cclasificacion");

                entity.Property(e => e.CclasificacionPadre).HasColumnName("cclasificacion_padre");

                entity.Property(e => e.Dato1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("dato1");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");
            });

            modelBuilder.Entity<VBibClasificacionInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_inventario");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.NcantidadNoprestable).HasColumnName("ncantidad_noprestable");

                entity.Property(e => e.NcantidadPrestada).HasColumnName("ncantidad_prestada");

                entity.Property(e => e.NcantidadProtegido).HasColumnName("ncantidad_protegido");

                entity.Property(e => e.NcantidadReservada).HasColumnName("ncantidad_reservada");

                entity.Property(e => e.NcantidadTotal).HasColumnName("ncantidad_total");
            });

            modelBuilder.Entity<VBibClasificacionListum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_lista");

                entity.Property(e => e.Cclasificacion)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("cclasificacion");

                entity.Property(e => e.Tautor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor");

                entity.Property(e => e.Tautor2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor2");

                entity.Property(e => e.TcontenidoTema)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tcontenido_tema");

                entity.Property(e => e.Teditorial)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("teditorial");

                entity.Property(e => e.TlugarImpresion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tlugar_impresion");

                entity.Property(e => e.Ttitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ttitulo");

                entity.Property(e => e.TtituloSub)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ttitulo_sub");

                entity.Property(e => e.TubicacionFisica)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tubicacion_fisica");

                entity.Property(e => e.Tvolumen)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tvolumen");
            });

            modelBuilder.Entity<VBibClasificacionReservaPendienteListum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_reserva_pendiente_lista");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.CclasificacionPadre).HasColumnName("cclasificacion_padre");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Creserva).HasColumnName("creserva");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhexpiracion)
                    .HasColumnType("datetime")
                    .HasColumnName("fhexpiracion");

                entity.Property(e => e.Fhfin)
                    .HasColumnType("datetime")
                    .HasColumnName("fhfin");

                entity.Property(e => e.Fhinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fhinicio");

                entity.Property(e => e.Fhregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fhregistro");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NcantidadDisponible).HasColumnName("ncantidad_disponible");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Tautor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor");

                entity.Property(e => e.Teditorial)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("teditorial");

                entity.Property(e => e.Ttitulo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ttitulo");

                entity.Property(e => e.TubicacionFisica)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tubicacion_fisica");
            });

            modelBuilder.Entity<VBibClasificacionReservadaPendiente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_clasificacion_reservada_pendiente");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.CclasificacionPadre).HasColumnName("cclasificacion_padre");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cestructura).HasColumnName("cestructura");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Creserva).HasColumnName("creserva");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhexpiracion)
                    .HasColumnType("datetime")
                    .HasColumnName("fhexpiracion");

                entity.Property(e => e.Fhfin)
                    .HasColumnType("datetime")
                    .HasColumnName("fhfin");

                entity.Property(e => e.Fhinicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fhinicio");

                entity.Property(e => e.Fhregistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fhregistro");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");
            });

            modelBuilder.Entity<VBibObjetoDisponibilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_objeto_disponibilidad");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.CobjetoPadre).HasColumnName("cobjeto_padre");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.EsDisponible).HasColumnName("es_disponible");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Fhingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("fhingreso");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.Gcondicion).HasColumnName("gcondicion");

                entity.Property(e => e.Gdominio).HasColumnName("gdominio");

                entity.Property(e => e.GformaAdquisicion).HasColumnName("gforma_adquisicion");

                entity.Property(e => e.Iprotegido).HasColumnName("iprotegido");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tobservacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tobservacion");

                entity.Property(e => e.Tprocedencia)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tprocedencia");
            });

            modelBuilder.Entity<VBibObjetoListum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_objeto_lista");

                entity.Property(e => e.Cclasificacion).HasColumnName("cclasificacion");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Nacceso)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("nacceso");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tautor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor");
            });

            modelBuilder.Entity<VBibObjetoPrestado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_objeto_prestado");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Fhestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fhestado");

                entity.Property(e => e.Nacceso).HasColumnName("nacceso");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tautor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor");
            });

            modelBuilder.Entity<VBibObjetoPrestadoListum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bib_objeto_prestado_lista");

                entity.Property(e => e.Cmovimiento).HasColumnName("cmovimiento");

                entity.Property(e => e.Cobjeto).HasColumnName("cobjeto");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Dclasificacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dclasificacion");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.Fhestado)
                    .HasColumnType("datetime")
                    .HasColumnName("fhestado");

                entity.Property(e => e.Nacceso).HasColumnName("nacceso");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Sclasificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sclasificacion");

                entity.Property(e => e.Sobjeto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("sobjeto");

                entity.Property(e => e.Tautor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tautor");
            });

            modelBuilder.Entity<VBloqueCurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bloque_curso");

                entity.Property(e => e.AlumnoActivos).HasColumnName("alumno_activos");

                entity.Property(e => e.AlumnoMatriculados).HasColumnName("alumno_matriculados");

                entity.Property(e => e.AlumnoParticipantes).HasColumnName("alumno_participantes");

                entity.Property(e => e.CGtipoCredito).HasColumnName("c_gtipo_credito");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cesquema).HasColumnName("cesquema");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.CursoCondicion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("curso_condicion");

                entity.Property(e => e.CursoSestado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("curso_sestado");

                entity.Property(e => e.DGtipoCredito)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("d_gtipo_credito");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Desquema)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("desquema")
                    .IsFixedLength(true);

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EeeFexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("EEE_fexamen");

                entity.Property(e => e.EfFexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("EF_fexamen");

                entity.Property(e => e.EfeFexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("EFE_fexamen");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncupo).HasColumnName("ncupo");

                entity.Property(e => e.PlantillaCurso)
                    .HasMaxLength(100)
                    .HasColumnName("plantilla_curso");

                entity.Property(e => e.ProfesorApeMaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profesor_ape_materno");

                entity.Property(e => e.ProfesorApePaterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profesor_ape_paterno");

                entity.Property(e => e.ProfesorClave)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("profesor_clave");

                entity.Property(e => e.ProfesorCprofesor).HasColumnName("profesor_cprofesor");

                entity.Property(e => e.ProfesorNombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profesor_nombre");

                entity.Property(e => e.ProfesorTcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profesor_tcorreo");

                entity.Property(e => e.SGtipoCredito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("s_gtipo_credito");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Sesquema)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("sesquema")
                    .IsFixedLength(true);

                entity.Property(e => e.TpFexamen)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_fexamen");
            });

            modelBuilder.Entity<VBloqueCursoAlumno>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bloque_curso_alumno");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.DdocIdentidad)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ddoc_identidad");

                entity.Property(e => e.DestadoAlumno)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("destado_alumno");

                entity.Property(e => e.DestadoCurso)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("destado_curso");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.EstadoAlumno).HasColumnName("estado_alumno");

                entity.Property(e => e.EstadoCurso).HasColumnName("estado_curso");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ntelefono1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ntelefono1");

                entity.Property(e => e.PlantillaCurso)
                    .HasMaxLength(100)
                    .HasColumnName("plantilla_curso");

                entity.Property(e => e.Smodalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smodalidad");

                entity.Property(e => e.TclaveMat)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tclave_mat")
                    .IsFixedLength(true);

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<VCarrera>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_carrera");

                entity.Property(e => e.Ccarrera).HasColumnName("CCARRERA");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DCARRERA");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCARRERA");
            });

            modelBuilder.Entity<VCarreraModalidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_carrera_modalidad");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ncategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ncategoria")
                    .IsFixedLength(true);

                entity.Property(e => e.Scategoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("scategoria")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VCertificadoEstudioV1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_certificado_estudio_v1");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("dpersona");

                entity.Property(e => e.EsUltimo).HasColumnName("es_ultimo");

                entity.Property(e => e.GtipoAprobacion).HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.GtipoCredito).HasColumnName("gtipo_credito");

                entity.Property(e => e.GtipoCreditoU).HasColumnName("gtipo_credito_u");

                entity.Property(e => e.NCh).HasColumnName("nCH");

                entity.Property(e => e.NCredito).HasColumnName("nCredito");

                entity.Property(e => e.Notas)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("notas");

                entity.Property(e => e.NporcAsistencia)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("nporc_asistencia");

                entity.Property(e => e.NpromedioPuntaje)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("npromedio_puntaje");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Scurso)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");

                entity.Property(e => e.TexamenFinal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("texamen_final");

                entity.Property(e => e.TsituciacionDisciplina)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("tsituciacion_disciplina");
            });

            modelBuilder.Entity<VCursorAula>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_cursor_aulas");

                entity.Property(e => e.Caula).HasColumnName("caula");

                entity.Property(e => e.HoraFin)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.HoraInicio)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Jueves)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUEVES");

                entity.Property(e => e.Lunes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LUNES");

                entity.Property(e => e.Martes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MARTES");

                entity.Property(e => e.Miercoles)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MIERCOLES");

                entity.Property(e => e.Ncapacidad).HasColumnName("ncapacidad");

                entity.Property(e => e.Sabado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SABADO");

                entity.Property(e => e.Saula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("saula");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Viernes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VIERNES");
            });

            modelBuilder.Entity<VFicha>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ficha");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_materno");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ape_paterno");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Cbloque).HasColumnName("cbloque");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cingreso")
                    .IsFixedLength(true);

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dbloque)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dbloque");

                entity.Property(e => e.Dcarrera)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcarrera");

                entity.Property(e => e.Dcurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.Destado)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("destado");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("dinstitucion");

                entity.Property(e => e.DocIdentidad)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("doc_identidad");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dperiodo");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dprograma");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.GdocIdentidad).HasColumnName("gdoc_identidad");

                entity.Property(e => e.Gestado).HasColumnName("gestado");

                entity.Property(e => e.NdocIdentidad)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ndoc_identidad");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.ScursoU)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("scurso_u");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");
            });

            modelBuilder.Entity<VGetdate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_getdate");

                entity.Property(e => e.Hoy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("hoy")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VInstitucion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_institucion");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Dinstitucion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DINSTITUCION");

                entity.Property(e => e.Sinstitucion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SINSTITUCION");
            });

            modelBuilder.Entity<VMatricRetirado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_matric_retirado");

                entity.Property(e => e.Activo).HasColumnName("activo");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Matriculado).HasColumnName("matriculado");

                entity.Property(e => e.Retiro).HasColumnName("retiro");

                entity.Property(e => e.Scarrera)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Smodalidad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smodalidad");
            });

            modelBuilder.Entity<VModalidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_modalidad");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cmodalidad).HasColumnName("cmodalidad");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Dmodalidad)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dmodalidad");

                entity.Property(e => e.NcredPromPerio).HasColumnName("ncred_prom_perio");

                entity.Property(e => e.NcursoPromPerio).HasColumnName("ncurso_prom_perio");

                entity.Property(e => e.Smodalidad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("smodalidad");
            });

            modelBuilder.Entity<VPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_periodo");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cperiodo).HasColumnName("CPERIODO");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dperiodo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPERIODO");

                entity.Property(e => e.Speriodo)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPERIODO");
            });

            modelBuilder.Entity<VPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_persona");

                entity.Property(e => e.ApeMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_MATERNO");

                entity.Property(e => e.ApePaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APE_PATERNO");

                entity.Property(e => e.Cpersona).HasColumnName("CPERSONA");

                entity.Property(e => e.Dpersona)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DPERSONA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<VPrograma>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_programa");

                entity.Property(e => e.Cinstitucion).HasColumnName("CINSTITUCION");

                entity.Property(e => e.Cprograma).HasColumnName("CPROGRAMA");

                entity.Property(e => e.Dprograma)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DPROGRAMA");

                entity.Property(e => e.Sprograma)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPROGRAMA");
            });

            modelBuilder.Entity<VTgdAlumnoPeriodoGcondicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tgd_alumno_periodo_gcondicion");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<VTgdAlumnoPeriodoGestado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tgd_alumno_periodo_gestado");

                entity.Property(e => e.Citem).HasColumnName("citem");

                entity.Property(e => e.Ctabla).HasColumnName("ctabla");

                entity.Property(e => e.Ditem)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ditem");

                entity.Property(e => e.Sitem)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("sitem");
            });

            modelBuilder.Entity<VUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_usuarios");

                entity.Property(e => e.CodigoAluProf).HasColumnName("codigo_alu_prof");

                entity.Property(e => e.Tcorreo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tcorreo");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("tipo");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("usuario");
            });

            modelBuilder.Entity<ValidaBeca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Valida_becas");

                entity.Property(e => e.Dglosa)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dglosa");

                entity.Property(e => e.Ffecha)
                    .HasColumnType("datetime")
                    .HasColumnName("ffecha");

                entity.Property(e => e.NporcBecaCuo)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("Nporc_beca_cuo");
            });

            modelBuilder.Entity<ValidaBecasLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("valida_becas_log");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");

                entity.Property(e => e.NporcBecaCuo)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("Nporc_beca_cuo");
            });

            modelBuilder.Entity<ValidacionNeweclass>(entity =>
            {
                entity.HasKey(e => e.IdValidacion);

                entity.ToTable("validacion_neweclass");

                entity.Property(e => e.IdValidacion).HasColumnName("idValidacion");

                entity.Property(e => e.AprobadoPor)
                    .HasMaxLength(150)
                    .HasColumnName("aprobado_por");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(150)
                    .HasColumnName("ccreacion");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(150)
                    .HasColumnName("cmodificacion");

                entity.Property(e => e.Ctipovalidacion).HasColumnName("ctipovalidacion");

                entity.Property(e => e.Dtipovalidacion)
                    .HasMaxLength(150)
                    .HasColumnName("dtipovalidacion");

                entity.Property(e => e.Dvalidacion)
                    .HasMaxLength(150)
                    .HasColumnName("dvalidacion");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Ffinal)
                    .HasColumnType("datetime")
                    .HasColumnName("ffinal");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fmodificacion");
            });

            modelBuilder.Entity<ValoracionGrupo>(entity =>
            {
                entity.HasKey(e => e.Cvaloraciongrupo)
                    .HasName("PK__valoraci__D393D2BB4488C299");

                entity.ToTable("valoracionGrupo");

                entity.Property(e => e.Cvaloraciongrupo).HasColumnName("cvaloraciongrupo");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cevento)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cevento");

                entity.Property(e => e.Cgrupo).HasColumnName("cgrupo");

                entity.Property(e => e.Cinstitucion).HasColumnName("cinstitucion");

                entity.Property(e => e.Cperiodo).HasColumnName("cperiodo");

                entity.Property(e => e.Cpersona).HasColumnName("cpersona");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fcreacion");

                entity.Property(e => e.Profesor)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("profesor");

                entity.Property(e => e.Valoracionnumero).HasColumnName("valoracionnumero");
            });

            modelBuilder.Entity<Vencim062010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("vencim062010");

                entity.Property(e => e.Ccontenido).HasColumnName("CCONTENIDO");

                entity.Property(e => e.Ccreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCREACION");

                entity.Property(e => e.Cmodificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CMODIFICACION");

                entity.Property(e => e.Cobligacion).HasColumnName("COBLIGACION");

                entity.Property(e => e.FNmontoBaseSaldoCalc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("f_nmonto_base_saldo_calc");

                entity.Property(e => e.Fcontable)
                    .HasColumnType("datetime")
                    .HasColumnName("fcontable");

                entity.Property(e => e.Fcreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FCREACION");

                entity.Property(e => e.Fmodificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FMODIFICACION");

                entity.Property(e => e.Fvencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FVENCIMIENTO");

                entity.Property(e => e.NmontoBeneficioCalculado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_beneficio_calculado");

                entity.Property(e => e.NmontoCuotaBruto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_bruto");

                entity.Property(e => e.NmontoCuotaCn)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cn");

                entity.Property(e => e.NmontoCuotaCp)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_cp");

                entity.Property(e => e.NmontoCuotaNetoPagar)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("nmonto_cuota_neto_pagar");

                entity.Property(e => e.Sestado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SESTADO");

                entity.Property(e => e.TsystemUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tsystem_user");
            });

            modelBuilder.Entity<ViewCalendarioEclass>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("view_Calendario_eclass");

                entity.Property(e => e.ColorEvento)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("color_evento");

                entity.Property(e => e.Cprograma).HasColumnName("cprograma");

                entity.Property(e => e.Ffecha)
                    .HasColumnType("datetime")
                    .HasColumnName("ffecha");

                entity.Property(e => e.Guso).HasColumnName("guso");

                entity.Property(e => e.Start)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("start");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");
            });

            modelBuilder.Entity<VirtualWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("virtual_web");

                entity.Property(e => e.Fin)
                    .HasColumnType("datetime")
                    .HasColumnName("fin");

                entity.Property(e => e.HorasConectadas)
                    .HasMaxLength(50)
                    .HasColumnName("horas_conectadas");

                entity.Property(e => e.Inicio)
                    .HasColumnType("datetime")
                    .HasColumnName("inicio");

                entity.Property(e => e.Servidor)
                    .HasMaxLength(30)
                    .IsFixedLength(true);

                entity.Property(e => e.Url)
                    .HasMaxLength(150)
                    .HasColumnName("url");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .HasColumnName("usuario")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Yyy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("yyy");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");
            });

            modelBuilder.Entity<Zzz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zzz");

                entity.Property(e => e.AlumnoPeriodoGestado)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("alumno_periodo_gestado");

                entity.Property(e => e.Calumno).HasColumnName("calumno");

                entity.Property(e => e.Ccarrera).HasColumnName("ccarrera");

                entity.Property(e => e.Ccurricula).HasColumnName("ccurricula");

                entity.Property(e => e.Ccurso).HasColumnName("ccurso");

                entity.Property(e => e.Cingreso).HasColumnName("cingreso");

                entity.Property(e => e.CreditosCurricula).HasColumnName("creditos_curricula");

                entity.Property(e => e.Dcurso)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("dcurso");

                entity.Property(e => e.EsAprobado).HasColumnName("es_aprobado");

                entity.Property(e => e.FichaGestado)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ficha_gestado");

                entity.Property(e => e.Gaprobado).HasColumnName("gaprobado");

                entity.Property(e => e.Gcondicion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("gcondicion");

                entity.Property(e => e.GtipoAprobacion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("gtipo_aprobacion");

                entity.Property(e => e.Nciclo).HasColumnName("nciclo");

                entity.Property(e => e.Ncredito).HasColumnName("ncredito");

                entity.Property(e => e.NnnotaAprobatoria).HasColumnName("nnnota_aprobatoria");

                entity.Property(e => e.Npromedio).HasColumnName("npromedio");

                entity.Property(e => e.Nsecuencia).HasColumnName("nsecuencia");

                entity.Property(e => e.Nvez).HasColumnName("nvez");

                entity.Property(e => e.Scarrera)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("scarrera");

                entity.Property(e => e.Scurso)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("scurso");

                entity.Property(e => e.Speriodo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("speriodo");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
